(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!***********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-app-plus/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"] != null) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}\n\nvar _toString = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isStr(str) {\n  return typeof str === 'string';\n}\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nfunction noop() {}\n\n/**\r\n                    * Create a cached version of a pure function.\r\n                    */\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\n/**\r\n   * Camelize a hyphen-delimited string.\r\n   */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});\n});\n\nvar HOOKS = [\n'invoke',\n'success',\n'fail',\n'complete',\n'returnValue'];\n\n\nvar globalInterceptors = {};\nvar scopedInterceptors = {};\n\nfunction mergeHook(parentVal, childVal) {\n  var res = childVal ?\n  parentVal ?\n  parentVal.concat(childVal) :\n  Array.isArray(childVal) ?\n  childVal : [childVal] :\n  parentVal;\n  return res ?\n  dedupeHooks(res) :\n  res;\n}\n\nfunction dedupeHooks(hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res;\n}\n\nfunction removeHook(hooks, hook) {\n  var index = hooks.indexOf(hook);\n  if (index !== -1) {\n    hooks.splice(index, 1);\n  }\n}\n\nfunction mergeInterceptorHook(interceptor, option) {\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction removeInterceptorHook(interceptor, option) {\n  if (!interceptor || !option) {\n    return;\n  }\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      removeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction addInterceptor(method, option) {\n  if (typeof method === 'string' && isPlainObject(option)) {\n    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);\n  } else if (isPlainObject(method)) {\n    mergeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction removeInterceptor(method, option) {\n  if (typeof method === 'string') {\n    if (isPlainObject(option)) {\n      removeInterceptorHook(scopedInterceptors[method], option);\n    } else {\n      delete scopedInterceptors[method];\n    }\n  } else if (isPlainObject(method)) {\n    removeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction wrapperHook(hook) {\n  return function (data) {\n    return hook(data) || data;\n  };\n}\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\nfunction queue(hooks, data) {\n  var promise = false;\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    if (promise) {\n      promise = Promise.then(wrapperHook(hook));\n    } else {\n      var res = hook(data);\n      if (isPromise(res)) {\n        promise = Promise.resolve(res);\n      }\n      if (res === false) {\n        return {\n          then: function then() {} };\n\n      }\n    }\n  }\n  return promise || {\n    then: function then(callback) {\n      return callback(data);\n    } };\n\n}\n\nfunction wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ['success', 'fail', 'complete'].forEach(function (name) {\n    if (Array.isArray(interceptor[name])) {\n      var oldCallback = options[name];\n      options[name] = function callbackInterceptor(res) {\n        queue(interceptor[name], res).then(function (res) {\n          /* eslint-disable no-mixed-operators */\n          return isFn(oldCallback) && oldCallback(res) || res;\n        });\n      };\n    }\n  });\n  return options;\n}\n\nfunction wrapperReturnValue(method, returnValue) {\n  var returnValueHooks = [];\n  if (Array.isArray(globalInterceptors.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));\n  }\n  var interceptor = scopedInterceptors[method];\n  if (interceptor && Array.isArray(interceptor.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));\n  }\n  returnValueHooks.forEach(function (hook) {\n    returnValue = hook(returnValue) || returnValue;\n  });\n  return returnValue;\n}\n\nfunction getApiInterceptorHooks(method) {\n  var interceptor = Object.create(null);\n  Object.keys(globalInterceptors).forEach(function (hook) {\n    if (hook !== 'returnValue') {\n      interceptor[hook] = globalInterceptors[hook].slice();\n    }\n  });\n  var scopedInterceptor = scopedInterceptors[method];\n  if (scopedInterceptor) {\n    Object.keys(scopedInterceptor).forEach(function (hook) {\n      if (hook !== 'returnValue') {\n        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);\n      }\n    });\n  }\n  return interceptor;\n}\n\nfunction invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}\n  var interceptor = getApiInterceptorHooks(method);\n  if (interceptor && Object.keys(interceptor).length) {\n    if (Array.isArray(interceptor.invoke)) {\n      var res = queue(interceptor.invoke, options);\n      return res.then(function (options) {\n        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n      });\n    } else {\n      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n    }\n  }\n  return api.apply(void 0, [options].concat(params));\n}\n\nvar promiseInterceptor = {\n  returnValue: function returnValue(res) {\n    if (!isPromise(res)) {\n      return res;\n    }\n    return res.then(function (res) {\n      return res[1];\n    }).catch(function (res) {\n      return res[0];\n    });\n  } };\n\n\nvar SYNC_API_RE =\n/^\\$|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;\n\nvar CONTEXT_API_RE = /^create|Manager$/;\n\nvar CALLBACK_API_RE = /^on/;\n\nfunction isContextApi(name) {\n  return CONTEXT_API_RE.test(name);\n}\nfunction isSyncApi(name) {\n  return SYNC_API_RE.test(name);\n}\n\nfunction isCallbackApi(name) {\n  return CALLBACK_API_RE.test(name) && name !== 'onPush';\n}\n\nfunction handlePromise(promise) {\n  return promise.then(function (data) {\n    return [null, data];\n  }).\n  catch(function (err) {return [err];});\n}\n\nfunction shouldPromise(name) {\n  if (\n  isContextApi(name) ||\n  isSyncApi(name) ||\n  isCallbackApi(name))\n  {\n    return false;\n  }\n  return true;\n}\n\nfunction promisify(name, api) {\n  if (!shouldPromise(name)) {\n    return api;\n  }\n  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}\n    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {\n      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));\n    }\n    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {\n      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {\n        success: resolve,\n        fail: reject })].concat(\n      params));\n      /* eslint-disable no-extend-native */\n      if (!Promise.prototype.finally) {\n        Promise.prototype.finally = function (callback) {\n          var promise = this.constructor;\n          return this.then(\n          function (value) {return promise.resolve(callback()).then(function () {return value;});},\n          function (reason) {return promise.resolve(callback()).then(function () {\n              throw reason;\n            });});\n\n        };\n      }\n    })));\n  };\n}\n\nvar EPS = 1e-4;\nvar BASE_DEVICE_WIDTH = 750;\nvar isIOS = false;\nvar deviceWidth = 0;\nvar deviceDPR = 0;\n\nfunction checkDeviceWidth() {var _wx$getSystemInfoSync =\n\n\n\n\n  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni\n\n  deviceWidth = windowWidth;\n  deviceDPR = pixelRatio;\n  isIOS = platform === 'ios';\n}\n\nfunction upx2px(number, newDeviceWidth) {\n  if (deviceWidth === 0) {\n    checkDeviceWidth();\n  }\n\n  number = Number(number);\n  if (number === 0) {\n    return 0;\n  }\n  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);\n  if (result < 0) {\n    result = -result;\n  }\n  result = Math.floor(result + EPS);\n  if (result === 0) {\n    if (deviceDPR === 1 || !isIOS) {\n      return 1;\n    } else {\n      return 0.5;\n    }\n  }\n  return number < 0 ? -result : result;\n}\n\nvar interceptors = {\n  promiseInterceptor: promiseInterceptor };\n\n\n\n\nvar baseApi = /*#__PURE__*/Object.freeze({\n  upx2px: upx2px,\n  interceptors: interceptors,\n  addInterceptor: addInterceptor,\n  removeInterceptor: removeInterceptor });\n\n\nvar protocols = {};\nvar todos = [];\nvar canIUses = [];\n\nvar CALLBACKS = ['success', 'fail', 'cancel', 'complete'];\n\nfunction processCallback(methodName, method, returnValue) {\n  return function (res) {\n    return method(processReturnValue(methodName, res, returnValue));\n  };\n}\n\nfunction processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析\n    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值\n    if (isFn(argsOption)) {\n      argsOption = argsOption(fromArgs, toArgs) || {};\n    }\n    for (var key in fromArgs) {\n      if (hasOwn(argsOption, key)) {\n        var keyOption = argsOption[key];\n        if (isFn(keyOption)) {\n          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);\n        }\n        if (!keyOption) {// 不支持的参数\n          console.warn(\"app-plus \".concat(methodName, \"\\u6682\\u4E0D\\u652F\\u6301\").concat(key));\n        } else if (isStr(keyOption)) {// 重写参数 key\n          toArgs[keyOption] = fromArgs[key];\n        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value\n          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;\n        }\n      } else if (CALLBACKS.indexOf(key) !== -1) {\n        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);\n      } else {\n        if (!keepFromArgs) {\n          toArgs[key] = fromArgs[key];\n        }\n      }\n    }\n    return toArgs;\n  } else if (isFn(fromArgs)) {\n    fromArgs = processCallback(methodName, fromArgs, returnValue);\n  }\n  return fromArgs;\n}\n\nfunction processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (isFn(protocols.returnValue)) {// 处理通用 returnValue\n    res = protocols.returnValue(methodName, res);\n  }\n  return processArgs(methodName, res, returnValue, {}, keepReturnValue);\n}\n\nfunction wrapper(methodName, method) {\n  if (hasOwn(protocols, methodName)) {\n    var protocol = protocols[methodName];\n    if (!protocol) {// 暂不支持的 api\n      return function () {\n        console.error(\"app-plus \\u6682\\u4E0D\\u652F\\u6301\".concat(methodName));\n      };\n    }\n    return function (arg1, arg2) {// 目前 api 最多两个参数\n      var options = protocol;\n      if (isFn(protocol)) {\n        options = protocol(arg1);\n      }\n\n      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);\n\n      var args = [arg1];\n      if (typeof arg2 !== 'undefined') {\n        args.push(arg2);\n      }\n      var returnValue = wx[options.name || methodName].apply(wx, args);\n      if (isSyncApi(methodName)) {// 同步 api\n        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));\n      }\n      return returnValue;\n    };\n  }\n  return method;\n}\n\nvar todoApis = Object.create(null);\n\nvar TODOS = [\n'onTabBarMidButtonTap',\n'subscribePush',\n'unsubscribePush',\n'onPush',\n'offPush',\n'share'];\n\n\nfunction createTodoApi(name) {\n  return function todoApi(_ref)\n\n\n  {var fail = _ref.fail,complete = _ref.complete;\n    var res = {\n      errMsg: \"\".concat(name, \":fail:\\u6682\\u4E0D\\u652F\\u6301 \").concat(name, \" \\u65B9\\u6CD5\") };\n\n    isFn(fail) && fail(res);\n    isFn(complete) && complete(res);\n  };\n}\n\nTODOS.forEach(function (name) {\n  todoApis[name] = createTodoApi(name);\n});\n\nvar getEmitter = function () {\n  if (typeof getUniEmitter === 'function') {\n    /* eslint-disable no-undef */\n    return getUniEmitter;\n  }\n  var Emitter;\n  return function getUniEmitter() {\n    if (!Emitter) {\n      Emitter = new _vue.default();\n    }\n    return Emitter;\n  };\n}();\n\nfunction apply(ctx, method, args) {\n  return ctx[method].apply(ctx, args);\n}\n\nfunction $on() {\n  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));\n}\nfunction $off() {\n  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));\n}\nfunction $once() {\n  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));\n}\nfunction $emit() {\n  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));\n}\n\nvar eventApi = /*#__PURE__*/Object.freeze({\n  $on: $on,\n  $off: $off,\n  $once: $once,\n  $emit: $emit });\n\n\nfunction requireNativePlugin(pluginName) {\n  /* eslint-disable no-undef */\n  if (typeof weex !== 'undefined') {\n    return weex.requireModule(pluginName);\n  }\n  /* eslint-disable no-undef */\n  return __requireNativePlugin__(pluginName);\n}\n\nfunction wrapper$1(webview) {\n  webview.$processed = true;\n\n  webview.postMessage = function (data) {\n    plus.webview.postMessageToUniNView({\n      type: 'UniAppSubNVue',\n      data: data },\n    webview.id);\n  };\n  var callbacks = [];\n  webview.onMessage = function (callback) {\n    callbacks.push(callback);\n  };\n  webview.$consumeMessage = function (e) {\n    callbacks.forEach(function (callback) {return callback(e);});\n  };\n\n  if (!webview.__uniapp_mask_id) {\n    return;\n  }\n  var maskColor = webview.__uniapp_mask;\n  var maskWebview = webview.__uniapp_mask_id === '0' ? {\n    setStyle: function setStyle(_ref2)\n\n    {var mask = _ref2.mask;\n      requireNativePlugin('uni-tabview').setMask({\n        color: mask });\n\n    } } :\n  plus.webview.getWebviewById(webview.__uniapp_mask_id);\n  var oldShow = webview.show;\n  var oldHide = webview.hide;\n  var oldClose = webview.close;\n\n  var showMask = function showMask() {\n    maskWebview.setStyle({\n      mask: maskColor });\n\n  };\n  var closeMask = function closeMask() {\n    maskWebview.setStyle({\n      mask: 'none' });\n\n  };\n  webview.show = function () {\n    showMask();for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {args[_key3] = arguments[_key3];}\n    return oldShow.apply(webview, args);\n  };\n  webview.hide = function () {\n    closeMask();for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}\n    return oldHide.apply(webview, args);\n  };\n  webview.close = function () {\n    closeMask();\n    callbacks = [];for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}\n    return oldClose.apply(webview, args);\n  };\n}\n\nfunction getSubNVueById(id) {\n  var webview = plus.webview.getWebviewById(id);\n  if (webview && !webview.$processed) {\n    wrapper$1(webview);\n  }\n  return webview;\n}\n\n\n\nvar api = /*#__PURE__*/Object.freeze({\n  getSubNVueById: getSubNVueById,\n  requireNativePlugin: requireNativePlugin });\n\n\nvar MPPage = Page;\nvar MPComponent = Component;\n\nvar customizeRE = /:/g;\n\nvar customize = cached(function (str) {\n  return camelize(str.replace(customizeRE, '-'));\n});\n\nfunction initTriggerEvent(mpInstance) {\n  {\n    if (!wx.canIUse('nextTick')) {\n      return;\n    }\n  }\n  var oldTriggerEvent = mpInstance.triggerEvent;\n  mpInstance.triggerEvent = function (event) {for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {args[_key6 - 1] = arguments[_key6];}\n    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));\n  };\n}\n\nfunction initHook(name, options) {\n  var oldHook = options[name];\n  if (!oldHook) {\n    options[name] = function () {\n      initTriggerEvent(this);\n    };\n  } else {\n    options[name] = function () {\n      initTriggerEvent(this);for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}\n      return oldHook.apply(this, args);\n    };\n  }\n}\n\nPage = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('onLoad', options);\n  return MPPage(options);\n};\n\nComponent = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('created', options);\n  return MPComponent(options);\n};\n\nvar PAGE_EVENT_HOOKS = [\n'onPullDownRefresh',\n'onReachBottom',\n'onShareAppMessage',\n'onPageScroll',\n'onResize',\n'onTabItemTap'];\n\n\nfunction initMocks(vm, mocks) {\n  var mpInstance = vm.$mp[vm.mpType];\n  mocks.forEach(function (mock) {\n    if (hasOwn(mpInstance, mock)) {\n      vm[mock] = mpInstance[mock];\n    }\n  });\n}\n\nfunction hasHook(hook, vueOptions) {\n  if (!vueOptions) {\n    return true;\n  }\n\n  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {\n    return true;\n  }\n\n  vueOptions = vueOptions.default || vueOptions;\n\n  if (isFn(vueOptions)) {\n    if (isFn(vueOptions.extendOptions[hook])) {\n      return true;\n    }\n    if (vueOptions.super &&\n    vueOptions.super.options &&\n    Array.isArray(vueOptions.super.options[hook])) {\n      return true;\n    }\n    return false;\n  }\n\n  if (isFn(vueOptions[hook])) {\n    return true;\n  }\n  var mixins = vueOptions.mixins;\n  if (Array.isArray(mixins)) {\n    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});\n  }\n}\n\nfunction initHooks(mpOptions, hooks, vueOptions) {\n  hooks.forEach(function (hook) {\n    if (hasHook(hook, vueOptions)) {\n      mpOptions[hook] = function (args) {\n        return this.$vm && this.$vm.__call_hook(hook, args);\n      };\n    }\n  });\n}\n\nfunction initVueComponent(Vue, vueOptions) {\n  vueOptions = vueOptions.default || vueOptions;\n  var VueComponent;\n  if (isFn(vueOptions)) {\n    VueComponent = vueOptions;\n    vueOptions = VueComponent.extendOptions;\n  } else {\n    VueComponent = Vue.extend(vueOptions);\n  }\n  return [VueComponent, vueOptions];\n}\n\nfunction initSlots(vm, vueSlots) {\n  if (Array.isArray(vueSlots) && vueSlots.length) {\n    var $slots = Object.create(null);\n    vueSlots.forEach(function (slotName) {\n      $slots[slotName] = true;\n    });\n    vm.$scopedSlots = vm.$slots = $slots;\n  }\n}\n\nfunction initVueIds(vueIds, mpInstance) {\n  vueIds = (vueIds || '').split(',');\n  var len = vueIds.length;\n\n  if (len === 1) {\n    mpInstance._$vueId = vueIds[0];\n  } else if (len === 2) {\n    mpInstance._$vueId = vueIds[0];\n    mpInstance._$vuePid = vueIds[1];\n  }\n}\n\nfunction initData(vueOptions, context) {\n  var data = vueOptions.data || {};\n  var methods = vueOptions.methods || {};\n\n  if (typeof data === 'function') {\n    try {\n      data = data.call(context); // 支持 Vue.prototype 上挂的数据\n    } catch (e) {\n      if (Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\n        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);\n      }\n    }\n  } else {\n    try {\n      // 对 data 格式化\n      data = JSON.parse(JSON.stringify(data));\n    } catch (e) {}\n  }\n\n  if (!isPlainObject(data)) {\n    data = {};\n  }\n\n  Object.keys(methods).forEach(function (methodName) {\n    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {\n      data[methodName] = methods[methodName];\n    }\n  });\n\n  return data;\n}\n\nvar PROP_TYPES = [String, Number, Boolean, Object, Array, null];\n\nfunction createObserver(name) {\n  return function observer(newVal, oldVal) {\n    if (this.$vm) {\n      this.$vm[name] = newVal; // 为了触发其他非 render watcher\n    }\n  };\n}\n\nfunction initBehaviors(vueOptions, initBehavior) {\n  var vueBehaviors = vueOptions['behaviors'];\n  var vueExtends = vueOptions['extends'];\n  var vueMixins = vueOptions['mixins'];\n\n  var vueProps = vueOptions['props'];\n\n  if (!vueProps) {\n    vueOptions['props'] = vueProps = [];\n  }\n\n  var behaviors = [];\n  if (Array.isArray(vueBehaviors)) {\n    vueBehaviors.forEach(function (behavior) {\n      behaviors.push(behavior.replace('uni://', \"wx\".concat(\"://\")));\n      if (behavior === 'uni://form-field') {\n        if (Array.isArray(vueProps)) {\n          vueProps.push('name');\n          vueProps.push('value');\n        } else {\n          vueProps['name'] = {\n            type: String,\n            default: '' };\n\n          vueProps['value'] = {\n            type: [String, Number, Boolean, Array, Object, Date],\n            default: '' };\n\n        }\n      }\n    });\n  }\n  if (isPlainObject(vueExtends) && vueExtends.props) {\n    behaviors.push(\n    initBehavior({\n      properties: initProperties(vueExtends.props, true) }));\n\n\n  }\n  if (Array.isArray(vueMixins)) {\n    vueMixins.forEach(function (vueMixin) {\n      if (isPlainObject(vueMixin) && vueMixin.props) {\n        behaviors.push(\n        initBehavior({\n          properties: initProperties(vueMixin.props, true) }));\n\n\n      }\n    });\n  }\n  return behaviors;\n}\n\nfunction parsePropType(key, type, defaultValue, file) {\n  // [String]=>String\n  if (Array.isArray(type) && type.length === 1) {\n    return type[0];\n  }\n  return type;\n}\n\nfunction initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var properties = {};\n  if (!isBehavior) {\n    properties.vueId = {\n      type: String,\n      value: '' };\n\n    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots\n      type: null,\n      value: [],\n      observer: function observer(newVal, oldVal) {\n        var $slots = Object.create(null);\n        newVal.forEach(function (slotName) {\n          $slots[slotName] = true;\n        });\n        this.setData({\n          $slots: $slots });\n\n      } };\n\n  }\n  if (Array.isArray(props)) {// ['title']\n    props.forEach(function (key) {\n      properties[key] = {\n        type: null,\n        observer: createObserver(key) };\n\n    });\n  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}\n    Object.keys(props).forEach(function (key) {\n      var opts = props[key];\n      if (isPlainObject(opts)) {// title:{type:String,default:''}\n        var value = opts['default'];\n        if (isFn(value)) {\n          value = value();\n        }\n\n        opts.type = parsePropType(key, opts.type);\n\n        properties[key] = {\n          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,\n          value: value,\n          observer: createObserver(key) };\n\n      } else {// content:String\n        var type = parsePropType(key, opts);\n        properties[key] = {\n          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,\n          observer: createObserver(key) };\n\n      }\n    });\n  }\n  return properties;\n}\n\nfunction wrapper$2(event) {\n  // TODO 又得兼容 mpvue 的 mp 对象\n  try {\n    event.mp = JSON.parse(JSON.stringify(event));\n  } catch (e) {}\n\n  event.stopPropagation = noop;\n  event.preventDefault = noop;\n\n  event.target = event.target || {};\n\n  if (!hasOwn(event, 'detail')) {\n    event.detail = {};\n  }\n\n  if (isPlainObject(event.detail)) {\n    event.target = Object.assign({}, event.target, event.detail);\n  }\n\n  return event;\n}\n\nfunction getExtraValue(vm, dataPathsArray) {\n  var context = vm;\n  dataPathsArray.forEach(function (dataPathArray) {\n    var dataPath = dataPathArray[0];\n    var value = dataPathArray[2];\n    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']\n      var propPath = dataPathArray[1];\n      var valuePath = dataPathArray[3];\n\n      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;\n\n      if (Number.isInteger(vFor)) {\n        context = value;\n      } else if (!propPath) {\n        context = vFor[value];\n      } else {\n        if (Array.isArray(vFor)) {\n          context = vFor.find(function (vForItem) {\n            return vm.__get_value(propPath, vForItem) === value;\n          });\n        } else if (isPlainObject(vFor)) {\n          context = Object.keys(vFor).find(function (vForKey) {\n            return vm.__get_value(propPath, vFor[vForKey]) === value;\n          });\n        } else {\n          console.error('v-for 暂不支持循环数据：', vFor);\n        }\n      }\n\n      if (valuePath) {\n        context = vm.__get_value(valuePath, context);\n      }\n    }\n  });\n  return context;\n}\n\nfunction processEventExtra(vm, extra, event) {\n  var extraObj = {};\n\n  if (Array.isArray(extra) && extra.length) {\n    /**\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *'test'\r\n                                              */\n    extra.forEach(function (dataPath, index) {\n      if (typeof dataPath === 'string') {\n        if (!dataPath) {// model,prop.sync\n          extraObj['$' + index] = vm;\n        } else {\n          if (dataPath === '$event') {// $event\n            extraObj['$' + index] = event;\n          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value\n            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);\n          } else {\n            extraObj['$' + index] = vm.__get_value(dataPath);\n          }\n        }\n      } else {\n        extraObj['$' + index] = getExtraValue(vm, dataPath);\n      }\n    });\n  }\n\n  return extraObj;\n}\n\nfunction getObjByArray(arr) {\n  var obj = {};\n  for (var i = 1; i < arr.length; i++) {\n    var element = arr[i];\n    obj[element[0]] = element[1];\n  }\n  return obj;\n}\n\nfunction processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;\n  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象\n  if (isCustom) {// 自定义事件\n    isCustomMPEvent = event.currentTarget &&\n    event.currentTarget.dataset &&\n    event.currentTarget.dataset.comType === 'wx';\n    if (!args.length) {// 无参数，直接传入 event 或 detail 数组\n      if (isCustomMPEvent) {\n        return [event];\n      }\n      return event.detail.__args__ || event.detail;\n    }\n  }\n\n  var extraObj = processEventExtra(vm, extra, event);\n\n  var ret = [];\n  args.forEach(function (arg) {\n    if (arg === '$event') {\n      if (methodName === '__set_model' && !isCustom) {// input v-model value\n        ret.push(event.target.value);\n      } else {\n        if (isCustom && !isCustomMPEvent) {\n          ret.push(event.detail.__args__[0]);\n        } else {// wxcomponent 组件或内置组件\n          ret.push(event);\n        }\n      }\n    } else {\n      if (Array.isArray(arg) && arg[0] === 'o') {\n        ret.push(getObjByArray(arg));\n      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {\n        ret.push(extraObj[arg]);\n      } else {\n        ret.push(arg);\n      }\n    }\n  });\n\n  return ret;\n}\n\nvar ONCE = '~';\nvar CUSTOM = '^';\n\nfunction isMatchEventType(eventType, optType) {\n  return eventType === optType ||\n\n  optType === 'regionchange' && (\n\n  eventType === 'begin' ||\n  eventType === 'end');\n\n\n}\n\nfunction handleEvent(event) {var _this = this;\n  event = wrapper$2(event);\n\n  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]\n  var dataset = (event.currentTarget || event.target).dataset;\n  if (!dataset) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰\n  if (!eventOpts) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n\n  // [['handle',[1,2,a]],['handle1',[1,2,a]]]\n  var eventType = event.type;\n\n  var ret = [];\n\n  eventOpts.forEach(function (eventOpt) {\n    var type = eventOpt[0];\n    var eventsArray = eventOpt[1];\n\n    var isCustom = type.charAt(0) === CUSTOM;\n    type = isCustom ? type.slice(1) : type;\n    var isOnce = type.charAt(0) === ONCE;\n    type = isOnce ? type.slice(1) : type;\n\n    if (eventsArray && isMatchEventType(eventType, type)) {\n      eventsArray.forEach(function (eventArray) {\n        var methodName = eventArray[0];\n        if (methodName) {\n          var handlerCtx = _this.$vm;\n          if (\n          handlerCtx.$options.generic &&\n          handlerCtx.$parent &&\n          handlerCtx.$parent.$parent)\n          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots\n            handlerCtx = handlerCtx.$parent.$parent;\n          }\n          if (methodName === '$emit') {\n            handlerCtx.$emit.apply(handlerCtx,\n            processEventArgs(\n            _this.$vm,\n            event,\n            eventArray[1],\n            eventArray[2],\n            isCustom,\n            methodName));\n\n            return;\n          }\n          var handler = handlerCtx[methodName];\n          if (!isFn(handler)) {\n            throw new Error(\" _vm.\".concat(methodName, \" is not a function\"));\n          }\n          if (isOnce) {\n            if (handler.once) {\n              return;\n            }\n            handler.once = true;\n          }\n          ret.push(handler.apply(handlerCtx, processEventArgs(\n          _this.$vm,\n          event,\n          eventArray[1],\n          eventArray[2],\n          isCustom,\n          methodName)));\n\n        }\n      });\n    }\n  });\n\n  if (\n  eventType === 'input' &&\n  ret.length === 1 &&\n  typeof ret[0] !== 'undefined')\n  {\n    return ret[0];\n  }\n}\n\nvar hooks = [\n'onShow',\n'onHide',\n'onError',\n'onPageNotFound'];\n\n\nfunction parseBaseApp(vm, _ref3)\n\n\n{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;\n  if (vm.$options.store) {\n    _vue.default.prototype.$store = vm.$options.store;\n  }\n\n  _vue.default.prototype.mpHost = \"app-plus\";\n\n  _vue.default.mixin({\n    beforeCreate: function beforeCreate() {\n      if (!this.$options.mpType) {\n        return;\n      }\n\n      this.mpType = this.$options.mpType;\n\n      this.$mp = _defineProperty({\n        data: {} },\n      this.mpType, this.$options.mpInstance);\n\n\n      this.$scope = this.$options.mpInstance;\n\n      delete this.$options.mpType;\n      delete this.$options.mpInstance;\n\n      if (this.mpType !== 'app') {\n        initRefs(this);\n        initMocks(this, mocks);\n      }\n    } });\n\n\n  var appOptions = {\n    onLaunch: function onLaunch(args) {\n      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前\n        return;\n      }\n\n      this.$vm = vm;\n\n      this.$vm.$mp = {\n        app: this };\n\n\n      this.$vm.$scope = this;\n      // vm 上也挂载 globalData\n      this.$vm.globalData = this.globalData;\n\n      this.$vm._isMounted = true;\n      this.$vm.__call_hook('mounted', args);\n\n      this.$vm.__call_hook('onLaunch', args);\n    } };\n\n\n  // 兼容旧版本 globalData\n  appOptions.globalData = vm.$options.globalData || {};\n  // 将 methods 中的方法挂在 getApp() 中\n  var methods = vm.$options.methods;\n  if (methods) {\n    Object.keys(methods).forEach(function (name) {\n      appOptions[name] = methods[name];\n    });\n  }\n\n  initHooks(appOptions, hooks);\n\n  return appOptions;\n}\n\nvar mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];\n\nfunction findVmByVueId(vm, vuePid) {\n  var $children = vm.$children;\n  // 优先查找直属\n  var parentVm = $children.find(function (childVm) {return childVm.$scope._$vueId === vuePid;});\n  if (parentVm) {\n    return parentVm;\n  }\n  // 反向递归查找\n  for (var i = $children.length - 1; i >= 0; i--) {\n    parentVm = findVmByVueId($children[i], vuePid);\n    if (parentVm) {\n      return parentVm;\n    }\n  }\n}\n\nfunction initBehavior(options) {\n  return Behavior(options);\n}\n\nfunction isPage() {\n  return !!this.route;\n}\n\nfunction initRelation(detail) {\n  this.triggerEvent('__l', detail);\n}\n\nfunction initRefs(vm) {\n  var mpInstance = vm.$scope;\n  Object.defineProperty(vm, '$refs', {\n    get: function get() {\n      var $refs = {};\n      var components = mpInstance.selectAllComponents('.vue-ref');\n      components.forEach(function (component) {\n        var ref = component.dataset.ref;\n        $refs[ref] = component.$vm || component;\n      });\n      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');\n      forComponents.forEach(function (component) {\n        var ref = component.dataset.ref;\n        if (!$refs[ref]) {\n          $refs[ref] = [];\n        }\n        $refs[ref].push(component.$vm || component);\n      });\n      return $refs;\n    } });\n\n}\n\nfunction handleLink(event) {var _ref4 =\n\n\n\n  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)\n\n  var parentVm;\n\n  if (vuePid) {\n    parentVm = findVmByVueId(this.$vm, vuePid);\n  }\n\n  if (!parentVm) {\n    parentVm = this.$vm;\n  }\n\n  vueOptions.parent = parentVm;\n}\n\nfunction parseApp(vm) {\n  return parseBaseApp(vm, {\n    mocks: mocks,\n    initRefs: initRefs });\n\n}\n\nvar hooks$1 = [\n'onUniNViewMessage'];\n\n\nfunction parseApp$1(vm) {\n  var appOptions = parseApp(vm);\n\n  initHooks(appOptions, hooks$1);\n\n  return appOptions;\n}\n\nfunction createApp(vm) {\n  App(parseApp$1(vm));\n  return vm;\n}\n\nfunction parseBaseComponent(vueComponentOptions)\n\n\n{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =\n  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];\n\n  var options = {\n    multipleSlots: true,\n    addGlobalClass: true };\n\n\n  var componentOptions = {\n    options: options,\n    data: initData(vueOptions, _vue.default.prototype),\n    behaviors: initBehaviors(vueOptions, initBehavior),\n    properties: initProperties(vueOptions.props, false, vueOptions.__file),\n    lifetimes: {\n      attached: function attached() {\n        var properties = this.properties;\n\n        var options = {\n          mpType: isPage.call(this) ? 'page' : 'component',\n          mpInstance: this,\n          propsData: properties };\n\n\n        initVueIds(properties.vueId, this);\n\n        // 处理父子关系\n        initRelation.call(this, {\n          vuePid: this._$vuePid,\n          vueOptions: options });\n\n\n        // 初始化 vue 实例\n        this.$vm = new VueComponent(options);\n\n        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）\n        initSlots(this.$vm, properties.vueSlots);\n\n        // 触发首次 setData\n        this.$vm.$mount();\n      },\n      ready: function ready() {\n        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发\n        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800\n        if (this.$vm) {\n          this.$vm._isMounted = true;\n          this.$vm.__call_hook('mounted');\n          this.$vm.__call_hook('onReady');\n        }\n      },\n      detached: function detached() {\n        this.$vm.$destroy();\n      } },\n\n    pageLifetimes: {\n      show: function show(args) {\n        this.$vm && this.$vm.__call_hook('onPageShow', args);\n      },\n      hide: function hide() {\n        this.$vm && this.$vm.__call_hook('onPageHide');\n      },\n      resize: function resize(size) {\n        this.$vm && this.$vm.__call_hook('onPageResize', size);\n      } },\n\n    methods: {\n      __l: handleLink,\n      __e: handleEvent } };\n\n\n\n  if (Array.isArray(vueOptions.wxsCallMethods)) {\n    vueOptions.wxsCallMethods.forEach(function (callMethod) {\n      componentOptions.methods[callMethod] = function (args) {\n        return this.$vm[callMethod](args);\n      };\n    });\n  }\n\n  if (isPage) {\n    return componentOptions;\n  }\n  return [componentOptions, VueComponent];\n}\n\nfunction parseComponent(vueComponentOptions) {\n  return parseBaseComponent(vueComponentOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nfunction parseComponent$1(vueComponentOptions) {\n  var componentOptions = parseComponent(vueComponentOptions);\n\n  componentOptions.methods.$getAppWebview = function () {\n    return plus.webview.getWebviewById(\"\".concat(this.__wxWebviewId__));\n  };\n  return componentOptions;\n}\n\nvar hooks$2 = [\n'onShow',\n'onHide',\n'onUnload'];\n\n\nhooks$2.push.apply(hooks$2, PAGE_EVENT_HOOKS);\n\nfunction parseBasePage(vuePageOptions, _ref6)\n\n\n{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;\n  var pageOptions = parseComponent$1(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$2, vuePageOptions);\n\n  pageOptions.methods.onLoad = function (args) {\n    this.$vm.$mp.query = args; // 兼容 mpvue\n    this.$vm.__call_hook('onLoad', args);\n  };\n\n  return pageOptions;\n}\n\nfunction parsePage(vuePageOptions) {\n  return parseBasePage(vuePageOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nvar hooks$3 = [\n'onBackPress',\n'onNavigationBarButtonTap',\n'onNavigationBarSearchInputChanged',\n'onNavigationBarSearchInputConfirmed',\n'onNavigationBarSearchInputClicked'];\n\n\nfunction parsePage$1(vuePageOptions) {\n  var pageOptions = parsePage(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$3);\n\n  return pageOptions;\n}\n\nfunction createPage(vuePageOptions) {\n  {\n    return Component(parsePage$1(vuePageOptions));\n  }\n}\n\nfunction createComponent(vueOptions) {\n  {\n    return Component(parseComponent$1(vueOptions));\n  }\n}\n\ntodos.forEach(function (todoApi) {\n  protocols[todoApi] = false;\n});\n\ncanIUses.forEach(function (canIUseApi) {\n  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :\n  canIUseApi;\n  if (!wx.canIUse(apiName)) {\n    protocols[canIUseApi] = false;\n  }\n});\n\nvar uni = {};\n\nif (typeof Proxy !== 'undefined' && \"app-plus\" !== 'app-plus') {\n  uni = new Proxy({}, {\n    get: function get(target, name) {\n      if (target[name]) {\n        return target[name];\n      }\n      if (baseApi[name]) {\n        return baseApi[name];\n      }\n      if (api[name]) {\n        return promisify(name, api[name]);\n      }\n      if (eventApi[name]) {\n        return eventApi[name];\n      }\n      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {\n        return;\n      }\n      return promisify(name, wrapper(name, wx[name]));\n    },\n    set: function set(target, name, value) {\n      target[name] = value;\n      return true;\n    } });\n\n} else {\n  Object.keys(baseApi).forEach(function (name) {\n    uni[name] = baseApi[name];\n  });\n\n  Object.keys(eventApi).forEach(function (name) {\n    uni[name] = eventApi[name];\n  });\n\n  Object.keys(api).forEach(function (name) {\n    uni[name] = promisify(name, api[name]);\n  });\n\n  Object.keys(wx).forEach(function (name) {\n    if (hasOwn(wx, name) || hasOwn(protocols, name)) {\n      uni[name] = promisify(name, wrapper(name, wx[name]));\n    }\n  });\n}\n\n{\n  if (typeof global !== 'undefined') {\n    global.uni = uni;\n    global.UniEmitter = eventApi;\n  }\n}\n\nwx.createApp = createApp;\nwx.createPage = createPage;\nwx.createComponent = createComponent;\n\nvar uni$1 = uni;var _default =\n\nuni$1;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ 12:
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = formatLog;function typof(v) {\n  var s = Object.prototype.toString.call(v);\n  return s.substring(8, s.length - 1);\n}\n\nfunction formatLog() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var msgs = args.map(function (v) {\n    var type = Object.prototype.toString.call(v);\n\n    if (type.toLowerCase() === '[object object]') {\n      try {\n        v = '---BEGIN:JSON---' + JSON.stringify(v) + '---END:JSON---';\n      } catch (e) {\n        v = '[object object]';\n      }\n    } else {\n      if (v === null) {\n        v = '---NULL---';\n      } else if (v === undefined) {\n        v = '---UNDEFINED---';\n      } else {\n        var vType = typof(v).toUpperCase();\n\n        if (vType === 'NUMBER' || vType === 'BOOLEAN') {\n          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---';\n        } else {\n          v = String(v);\n        }\n      }\n    }\n\n    return v;\n  });\n  var msg = '';\n\n  if (msgs.length > 1) {\n    var lastMsg = msgs.pop();\n    msg = msgs.join('---COMMA---');\n\n    if (lastMsg.indexOf(' at ') === 0) {\n      msg += lastMsg;\n    } else {\n      msg += '---COMMA---' + lastMsg;\n    }\n  } else {\n    msg = msgs[0];\n  }\n\n  return msg;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbInR5cG9mIiwidiIsInMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJmb3JtYXRMb2ciLCJfbGVuIiwiYXJndW1lbnRzIiwiYXJncyIsIkFycmF5IiwiX2tleSIsIm1zZ3MiLCJtYXAiLCJ0eXBlIiwidG9Mb3dlckNhc2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZSIsInVuZGVmaW5lZCIsInZUeXBlIiwidG9VcHBlckNhc2UiLCJTdHJpbmciLCJtc2ciLCJsYXN0TXNnIiwicG9wIiwiam9pbiIsImluZGV4T2YiXSwibWFwcGluZ3MiOiIwRkFBQSxTQUFTQSxLQUFULENBQWdCQyxDQUFoQixFQUFtQjtBQUNqQixNQUFJQyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsUUFBakIsQ0FBMEJDLElBQTFCLENBQStCTCxDQUEvQixDQUFSO0FBQ0EsU0FBT0MsQ0FBQyxDQUFDSyxTQUFGLENBQVksQ0FBWixFQUFlTCxDQUFDLENBQUNNLE1BQUYsR0FBVyxDQUExQixDQUFQO0FBQ0Q7O0FBRWMsU0FBU0MsU0FBVCxHQUFzQjtBQUNuQyxPQUFLLElBQUlDLElBQUksR0FBR0MsU0FBUyxDQUFDSCxNQUFyQixFQUE2QkksSUFBSSxHQUFHLElBQUlDLEtBQUosQ0FBVUgsSUFBVixDQUFwQyxFQUFxREksSUFBSSxHQUFHLENBQWpFLEVBQW9FQSxJQUFJLEdBQUdKLElBQTNFLEVBQWlGSSxJQUFJLEVBQXJGLEVBQXlGO0FBQ3ZGRixRQUFJLENBQUNFLElBQUQsQ0FBSixHQUFhSCxTQUFTLENBQUNHLElBQUQsQ0FBdEI7QUFDRDs7QUFFRCxNQUFJQyxJQUFJLEdBQUdILElBQUksQ0FBQ0ksR0FBTCxDQUFTLFVBQVVmLENBQVYsRUFBYTtBQUMvQixRQUFJZ0IsSUFBSSxHQUFHZCxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFFBQWpCLENBQTBCQyxJQUExQixDQUErQkwsQ0FBL0IsQ0FBWDs7QUFFQSxRQUFJZ0IsSUFBSSxDQUFDQyxXQUFMLE9BQXVCLGlCQUEzQixFQUE4QztBQUM1QyxVQUFJO0FBQ0ZqQixTQUFDLEdBQUcscUJBQXFCa0IsSUFBSSxDQUFDQyxTQUFMLENBQWVuQixDQUFmLENBQXJCLEdBQXlDLGdCQUE3QztBQUNELE9BRkQsQ0FFRSxPQUFPb0IsQ0FBUCxFQUFVO0FBQ1ZwQixTQUFDLEdBQUcsaUJBQUo7QUFDRDtBQUNGLEtBTkQsTUFNTztBQUNMLFVBQUlBLENBQUMsS0FBSyxJQUFWLEVBQWdCO0FBQ2RBLFNBQUMsR0FBRyxZQUFKO0FBQ0QsT0FGRCxNQUVPLElBQUlBLENBQUMsS0FBS3FCLFNBQVYsRUFBcUI7QUFDMUJyQixTQUFDLEdBQUcsaUJBQUo7QUFDRCxPQUZNLE1BRUE7QUFDTCxZQUFJc0IsS0FBSyxHQUFHdkIsS0FBSyxDQUFDQyxDQUFELENBQUwsQ0FBU3VCLFdBQVQsRUFBWjs7QUFFQSxZQUFJRCxLQUFLLEtBQUssUUFBVixJQUFzQkEsS0FBSyxLQUFLLFNBQXBDLEVBQStDO0FBQzdDdEIsV0FBQyxHQUFHLGNBQWNzQixLQUFkLEdBQXNCLEtBQXRCLEdBQThCdEIsQ0FBOUIsR0FBa0MsU0FBbEMsR0FBOENzQixLQUE5QyxHQUFzRCxLQUExRDtBQUNELFNBRkQsTUFFTztBQUNMdEIsV0FBQyxHQUFHd0IsTUFBTSxDQUFDeEIsQ0FBRCxDQUFWO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFdBQU9BLENBQVA7QUFDRCxHQTFCVSxDQUFYO0FBMkJBLE1BQUl5QixHQUFHLEdBQUcsRUFBVjs7QUFFQSxNQUFJWCxJQUFJLENBQUNQLE1BQUwsR0FBYyxDQUFsQixFQUFxQjtBQUNuQixRQUFJbUIsT0FBTyxHQUFHWixJQUFJLENBQUNhLEdBQUwsRUFBZDtBQUNBRixPQUFHLEdBQUdYLElBQUksQ0FBQ2MsSUFBTCxDQUFVLGFBQVYsQ0FBTjs7QUFFQSxRQUFJRixPQUFPLENBQUNHLE9BQVIsQ0FBZ0IsTUFBaEIsTUFBNEIsQ0FBaEMsRUFBbUM7QUFDakNKLFNBQUcsSUFBSUMsT0FBUDtBQUNELEtBRkQsTUFFTztBQUNMRCxTQUFHLElBQUksZ0JBQWdCQyxPQUF2QjtBQUNEO0FBQ0YsR0FURCxNQVNPO0FBQ0xELE9BQUcsR0FBR1gsSUFBSSxDQUFDLENBQUQsQ0FBVjtBQUNEOztBQUVELFNBQU9XLEdBQVA7QUFDRCIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHR5cG9mICh2KSB7XHJcbiAgdmFyIHMgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodilcclxuICByZXR1cm4gcy5zdWJzdHJpbmcoOCwgcy5sZW5ndGggLSAxKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRMb2cgKCkge1xyXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xyXG4gICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XVxyXG4gIH1cclxuXHJcbiAgdmFyIG1zZ3MgPSBhcmdzLm1hcChmdW5jdGlvbiAodikge1xyXG4gICAgdmFyIHR5cGUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodilcclxuXHJcbiAgICBpZiAodHlwZS50b0xvd2VyQ2FzZSgpID09PSAnW29iamVjdCBvYmplY3RdJykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHYgPSAnLS0tQkVHSU46SlNPTi0tLScgKyBKU09OLnN0cmluZ2lmeSh2KSArICctLS1FTkQ6SlNPTi0tLSdcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHYgPSAnW29iamVjdCBvYmplY3RdJ1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodiA9PT0gbnVsbCkge1xyXG4gICAgICAgIHYgPSAnLS0tTlVMTC0tLSdcclxuICAgICAgfSBlbHNlIGlmICh2ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB2ID0gJy0tLVVOREVGSU5FRC0tLSdcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB2YXIgdlR5cGUgPSB0eXBvZih2KS50b1VwcGVyQ2FzZSgpXHJcblxyXG4gICAgICAgIGlmICh2VHlwZSA9PT0gJ05VTUJFUicgfHwgdlR5cGUgPT09ICdCT09MRUFOJykge1xyXG4gICAgICAgICAgdiA9ICctLS1CRUdJTjonICsgdlR5cGUgKyAnLS0tJyArIHYgKyAnLS0tRU5EOicgKyB2VHlwZSArICctLS0nXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHYgPSBTdHJpbmcodilcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdlxyXG4gIH0pXHJcbiAgdmFyIG1zZyA9ICcnXHJcblxyXG4gIGlmIChtc2dzLmxlbmd0aCA+IDEpIHtcclxuICAgIHZhciBsYXN0TXNnID0gbXNncy5wb3AoKVxyXG4gICAgbXNnID0gbXNncy5qb2luKCctLS1DT01NQS0tLScpXHJcblxyXG4gICAgaWYgKGxhc3RNc2cuaW5kZXhPZignIGF0ICcpID09PSAwKSB7XHJcbiAgICAgIG1zZyArPSBsYXN0TXNnXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBtc2cgKz0gJy0tLUNPTU1BLS0tJyArIGxhc3RNc2dcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgbXNnID0gbXNnc1swXVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG1zZ1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),

/***/ 15:
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n");

/***/ }),

/***/ 16:
/*!***************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/store/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 17));\nvar _cart = _interopRequireDefault(__webpack_require__(/*! @/store/modules/cart.js */ 18));\nvar _path = _interopRequireDefault(__webpack_require__(/*! @/store/modules/path.js */ 21));\nvar _user = _interopRequireDefault(__webpack_require__(/*! @/store/modules/user.js */ 22));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n_vue.default.use(_vuex.default);var _default =\n\nnew _vuex.default.Store({\n  modules: {\n    cart: _cart.default,\n    path: _path.default,\n    user: _user.default } });exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvaW5kZXguanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiVnVleCIsIlN0b3JlIiwibW9kdWxlcyIsImNhcnQiLCJwYXRoIiwidXNlciJdLCJtYXBwaW5ncyI6InVGQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkY7O0FBRUFBLGFBQUlDLEdBQUosQ0FBUUMsYUFBUixFOztBQUVlLElBQUlBLGNBQUtDLEtBQVQsQ0FBZTtBQUM3QkMsU0FBTyxFQUFDO0FBQ1BDLFFBQUksRUFBSkEsYUFETztBQUVQQyxRQUFJLEVBQUpBLGFBRk87QUFHUEMsUUFBSSxFQUFKQSxhQUhPLEVBRHFCLEVBQWYsQyIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiXHJcbmltcG9ydCBWdWV4IGZyb20gJ3Z1ZXgnXHJcbmltcG9ydCBjYXJ0IGZyb20gXCJAL3N0b3JlL21vZHVsZXMvY2FydC5qc1wiXHJcbmltcG9ydCBwYXRoIGZyb20gXCJAL3N0b3JlL21vZHVsZXMvcGF0aC5qc1wiXHJcbmltcG9ydCB1c2VyIGZyb20gXCJAL3N0b3JlL21vZHVsZXMvdXNlci5qc1wiXHJcblxyXG5WdWUudXNlKFZ1ZXgpXHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgVnVleC5TdG9yZSh7XHJcblx0bW9kdWxlczp7XHJcblx0XHRjYXJ0LFxyXG5cdFx0cGF0aCxcclxuXHRcdHVzZXJcclxuXHR9XHJcbn0pXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n");

/***/ }),

/***/ 17:
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Store\", function() { return Store; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"install\", function() { return install; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapState\", function() { return mapState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapMutations\", function() { return mapMutations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapGetters\", function() { return mapGetters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapActions\", function() { return mapActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNamespacedHelpers\", function() { return createNamespacedHelpers; });\n/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (true) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (true) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (true) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (true) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (true) {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (true) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n     true &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (true) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (true) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (true) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (true) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ( true && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ( true && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (true) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (true) {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (true) {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (true) {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if ( true && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if ( true && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index_esm);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n");

/***/ }),

/***/ 18:
/*!**********************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/store/modules/cart.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__, uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _request = _interopRequireDefault(__webpack_require__(/*! @/common/lib/request.js */ 19));\n\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/common/lib/util.js */ 20));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n/*\r\n                                                                                                                                                                  *\r\n                                                                                                                                                                  *{\r\n                                                                                                                                                                  \t\t\t\tchecked: false,\r\n                                                                                                                                                                  \t\t\t\tid: 11,\r\n                                                                                                                                                                  \t\t\t\ttitle: \"商品标题111\",\r\n                                                                                                                                                                  \t\t\t\tcover: \"/static/images/demo/list/1.jpg\",\r\n                                                                                                                                                                  \t\t\t\t// 选中商品属性\r\n                                                                                                                                                                  \t\t\t\tattrs: [{\r\n                                                                                                                                                                  \t\t\t\t\t\ttitle: \"颜色\",\r\n                                                                                                                                                                  \t\t\t\t\t\tselected: 0,\r\n                                                                                                                                                                  \t\t\t\t\t\tlist: [\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '火焰红', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '炭黑', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '冰川兰', }\r\n                                                                                                                                                                  \t\t\t\t\t\t]\r\n                                                                                                                                                                  \t\t\t\t\t},\r\n                                                                                                                                                                  \t\t\t\t\t{\r\n                                                                                                                                                                  \t\t\t\t\t\ttitle: \"容量\",\r\n                                                                                                                                                                  \t\t\t\t\t\tselected: 0,\r\n                                                                                                                                                                  \t\t\t\t\t\tlist: [\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '64GB', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '128GB', },\r\n                                                                                                                                                                  \t\t\t\t\t\t]\r\n                                                                                                                                                                  \t\t\t\t\t},\r\n                                                                                                                                                                  \t\t\t\t\t{\r\n                                                                                                                                                                  \t\t\t\t\t\ttitle: \"套餐\",\r\n                                                                                                                                                                  \t\t\t\t\t\tselected: 0,\r\n                                                                                                                                                                  \t\t\t\t\t\tlist: [\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '标配', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '套餐一', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '套餐二', }\r\n                                                                                                                                                                  \t\t\t\t\t\t]\r\n                                                                                                                                                                  \t\t\t\t\t},\r\n                                                                                                                                                                  \t\t\t\t],\r\n                                                                                                                                                                  \t\t\t\tpprice: 336,\r\n                                                                                                                                                                  \t\t\t\tnum: 1,\r\n                                                                                                                                                                  \t\t\t\tminnum: 1,\r\n                                                                                                                                                                  \t\t\t\tmaxnum: 10, // 该商品最大商品数，跟库存有关\r\n                                                                                                                                                                  \t\t\t},\r\n                                                                                                                                                                  \t\t\t{\r\n                                                                                                                                                                  \t\t\t\tchecked: false,\r\n                                                                                                                                                                  \t\t\t\tid: 12,\r\n                                                                                                                                                                  \t\t\t\ttitle: \"商品标题111\",\r\n                                                                                                                                                                  \t\t\t\tcover: \"/static/images/demo/list/1.jpg\",\r\n                                                                                                                                                                  \t\t\t\t// 选中商品属性\r\n                                                                                                                                                                  \t\t\t\tattrs: [{\r\n                                                                                                                                                                  \t\t\t\t\t\ttitle: \"颜色\",\r\n                                                                                                                                                                  \t\t\t\t\t\tselected: 0,\r\n                                                                                                                                                                  \t\t\t\t\t\tlist: [\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '火焰红', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '炭黑', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '冰川兰', }\r\n                                                                                                                                                                  \t\t\t\t\t\t]\r\n                                                                                                                                                                  \t\t\t\t\t},\r\n                                                                                                                                                                  \t\t\t\t\t{\r\n                                                                                                                                                                  \t\t\t\t\t\ttitle: \"容量\",\r\n                                                                                                                                                                  \t\t\t\t\t\tselected: 0,\r\n                                                                                                                                                                  \t\t\t\t\t\tlist: [\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '64GB', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '128GB', },\r\n                                                                                                                                                                  \t\t\t\t\t\t]\r\n                                                                                                                                                                  \t\t\t\t\t},\r\n                                                                                                                                                                  \t\t\t\t\t{\r\n                                                                                                                                                                  \t\t\t\t\t\ttitle: \"套餐\",\r\n                                                                                                                                                                  \t\t\t\t\t\tselected: 0,\r\n                                                                                                                                                                  \t\t\t\t\t\tlist: [\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '标配', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '套餐一', },\r\n                                                                                                                                                                  \t\t\t\t\t\t\t{ name: '套餐二', }\r\n                                                                                                                                                                  \t\t\t\t\t\t]\r\n                                                                                                                                                                  \t\t\t\t\t},\r\n                                                                                                                                                                  \t\t\t\t],\r\n                                                                                                                                                                  \t\t\t\tpprice: 336,\r\n                                                                                                                                                                  \t\t\t\tnum: 1,\r\n                                                                                                                                                                  \t\t\t\tminnum: 1,\r\n                                                                                                                                                                  \t\t\t\tmaxnum: 10, // 该商品最大商品数，跟库存有关\r\n                                                                                                                                                                  \t\t\t}, \r\n                                                                                                                                                                  * \r\n                                                                                                                                                                  * \r\n                                                                                                                                                                  \r\n                                                                                                                                                                  \r\n                                                                                                                                                                  */var _default =\n{\n  state: {\n    list: [],\n    // 选中列表 (存放选中的id)\n    selectedList: [],\n    popupShow: 'none',\n    popupIndex: -1,\n    popupData: {} },\n\n  getters: {\n    // 判断是否全选\n    checkedAll: function checkedAll(state) {\n      return state.list.length === state.selectedList.length;\n    },\n    // 合计\n    totalPrice: function totalPrice(state) {\n      var total = 0;\n      state.list.forEach(function (v) {\n        if (state.selectedList.indexOf(v.id) > -1) {\n          total += v.pprice * v.num;\n        }\n      });\n      return total;\n    },\n    // 禁用全选\n    disableSelectAll: function disableSelectAll(state) {\n      return state.list.length === 0;\n    },\n    // 拿到当前需要修改属性的商品\n    // popupData: (state) => {\n    // \t// 取到当前的商品规格\n    // \treturn state.popupIndex > -1 ? state.list[state.popupIndex] : {}\n    // }\n    // 购物车商品数量\n    cartCount: function cartCount(state) {\n      if (state.list.length <= 99) {\n        return state.list.length;\n      }\n      return \"99+\";\n    } },\n\n  mutations: {\n    // 初始化list\n    initCartList: function initCartList(state, list) {\n      state.list = list;\n      // 更新tabbat角标\n      _util.default.updaCaartBadge(state.list.length);\n    },\n\n    // 选中/取消选中某个商品\n    selectItem: function selectItem(state, index) {\n      // 当前索引的id\n      var id = state.list[index].id;\n      var i = state.selectedList.indexOf(id);\n      // 之前是选中的,现在取消选中\n      if (i > -1) {\n        // 取消当前商品选中状态\n        state.list[index].checked = false;\n        // 移除选中列表中的当前商品\n        return state.selectedList.splice(i, 1);\n      }\n      // 之前是没选中的,现在选中\n      state.list[index].checked = true;\n      state.selectedList.push(id);\n    },\n\n\n    // 全选\n    selectAll: function selectAll(state) {\n      state.selectedList = state.list.map(function (v) {\n        // 设置选中状态\n\n        v.checked = true;\n        return v.id;\n      });\n    },\n    // 取消全选\n    unSelectAll: function unSelectAll(state) {\n      state.list.forEach(function (v) {\n        // 设置选中状态\n        v.checked = false;\n      });\n      state.selectedList = [];\n    },\n    // 删除选中\n    delGoods: function delGoods(state) {\n      // 没被选中的留下来了\n      state.list = state.list.filter(function (v) {\n        return state.selectedList.indexOf(v.id) == -1;\n      });\n\n      _util.default.updaCaartBadge(state.list.length);\n    },\n    // 初始化 popupIndex\n    initPopupIndex: function initPopupIndex(state, index) {\n      state.popupIndex = index;\n    },\n    addGoodsToCart: function addGoodsToCart(state, goods) {\n      state.list.unshift(goods);\n      console.log(__f__(state.list.length, \" at store\\\\modules\\\\cart.js:186\"));\n      _util.default.updaCaartBadge(state.list.length);\n    },\n    // 清空购物车\n    clearCart: function clearCart(state) {\n      state.list = [];\n      state.selectedList = [];\n      _util.default.updaCaartBadge(state.list.length);\n    } },\n\n\n  actions: {\n    // 更新购物车列表方法\n    updateCartList: function updateCartList(_ref) {var state = _ref.state,commit = _ref.commit;\n      return new Promise(function (res, rej) {\n        // 获取购物车数据\n        _request.default.get('/cart', {}, { token: true, toast: false }).then(function (ress) {\n          // 取消选中状态\n          commit('unSelectAll');\n          // 赋值\n          commit('initCartList', ress);\n          res(ress);\n        }).catch(function (err) {\n          rej(err);\n        });\n\n      });\n\n\n    },\n\n\n    // 显示pop\n    doShowPopup: function doShowPopup(_ref2, _ref3) {var state = _ref2.state,commit = _ref2.commit;var index = _ref3.index,data = _ref3.data;\n      commit('initPopupIndex', index);\n      // 显示之后复制给popDATA 数据(点击一次变一次数据)\n      state.popupData = data;\n      //d当前购物车的操作对象\n      state.popupData.item = state.list[index];\n      state.popupShow = 'show';\n    },\n    // 隐藏 pop\n    doHidePopup: function doHidePopup(_ref4) {var state = _ref4.state,commit = _ref4.commit;\n      state.popupShow = 'hide';\n      setTimeout(function () {\n        state.popupShow = 'none';\n        commit('initPopupIndex', -1);\n      }, 200);\n    },\n\n\n    // 点击全选\n    doSelectAll: function doSelectAll(_ref5) {var commit = _ref5.commit,getters = _ref5.getters;\n\n      getters.checkedAll ? commit('unSelectAll') : commit('selectAll');\n    },\n    doDelGoods: function doDelGoods(_ref6) {var commit = _ref6.commit,state = _ref6.state;\n\n      if (state.selectedList.length == 0) {\n        return uni.showToast({\n          title: '请选择要删除的商品',\n          icon: \"none\" });\n\n      }\n\n      uni.showModal({\n        content: \"是否删除选中\",\n        success: function success(res) {\n          if (res.confirm) {\n\n            _request.default.post('/cart/delete', {\n              shop_ids: state.selectedList.join(\",\") },\n            { token: true }).then(function (res) {\n              commit('delGoods');\n              commit('unSelectAll');\n              uni.showToast({\n                title: \"删除成功\" });\n\n            });\n\n\n          }\n        } });\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///18\n");

/***/ }),

/***/ 19:
/*!**********************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/common/lib/request.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _index = _interopRequireDefault(__webpack_require__(/*! @/store/index.js */ 16));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var _default =\n{\n  // 全局配置\n  common: {\n    // 根路径\n    baseUrl: \"http://ceshi3.dishait.cn/api\",\n    header: _defineProperty({\n      'Content-Type': 'application/json;charset=UTF-8' }, \"Content-Type\",\n    'application/x-www-form-urlencoded'),\n\n    data: {},\n    method: \"GET\",\n    dataType: 'json' },\n\n  // 请求 返回promise\n  request: function request() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // 组织参数\n    options.url = this.common.baseUrl + options.url;\n    options.header = options.header || this.common.header;\n    options.data = options.data || this.common.data;\n    options.method = options.method || this.common.method;\n    options.dataType = options.dataType || this.common.dataType;\n    //token\n    if (options.token) {\n      options.header.token = _index.default.state.user.token;\n      // 二次验证\n      if (options.checkToken && !options.header.token) {\n        uni.showToast({\n          title: '请先登录',\n          icon: \"none\" });\n\n\n        return uni.navigateTo({\n          url: '/pages/login/login' });\n\n\n      }\n    }\n\n\n    // 请求\n    return new Promise(function (res, rej) {\n\n      // 请求之前...  todo\n\n\n      // 请求中\n      uni.request(_objectSpread({},\n\n\n\n\n      options, {\n        success: function success(result) {\n          //返回原始数据\n          if (options.native) {\n            return res(result);\n          }\n\n          // 服务端失败\n          if (result.statusCode !== 200) {\n            console.log(__f__(\"dsadsa\", \" at common\\\\lib\\\\request.js:62\"));\n            if (options.toast !== false) {\n              return uni.showToast({\n                title: result.data.msg || '服务端失败',\n                icon: \"none\" });\n\n            }\n\n\n\n            return rej(result.data);\n          }\n          // 成功\n          var data = result.data.data;\n          res(data);\n\n\n        },\n        fail: function fail(error) {\n          uni.showToast({\n            title: error.errMsg || '请求失败',\n            icon: \"none\" });\n\n          return rej();\n        } }));\n\n    });\n\n\n  },\n  // get 请求\n  get: function get(url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    options.url = url;\n    options.data = data;\n    options.method = \"GET\";\n    return this.request(options);\n  },\n  // POST 请求\n  post: function post(url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    options.url = url;\n    options.data = data;\n    options.method = \"POST\";\n    return this.request(options);\n  },\n  // delete 请求\n  del: function del(url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    options.url = url;\n    options.data = data;\n    options.method = \"DELETE\";\n    return this.request(options);\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tbW9uL2xpYi9yZXF1ZXN0LmpzIl0sIm5hbWVzIjpbImNvbW1vbiIsImJhc2VVcmwiLCJoZWFkZXIiLCJkYXRhIiwibWV0aG9kIiwiZGF0YVR5cGUiLCJyZXF1ZXN0Iiwib3B0aW9ucyIsInVybCIsInRva2VuIiwiJHN0b3JlIiwic3RhdGUiLCJ1c2VyIiwiY2hlY2tUb2tlbiIsInVuaSIsInNob3dUb2FzdCIsInRpdGxlIiwiaWNvbiIsIm5hdmlnYXRlVG8iLCJQcm9taXNlIiwicmVzIiwicmVqIiwic3VjY2VzcyIsInJlc3VsdCIsIm5hdGl2ZSIsInN0YXR1c0NvZGUiLCJjb25zb2xlIiwibG9nIiwidG9hc3QiLCJtc2ciLCJmYWlsIiwiZXJyb3IiLCJlcnJNc2ciLCJnZXQiLCJwb3N0IiwiZGVsIl0sIm1hcHBpbmdzIjoieUlBQUEscUY7QUFDZTtBQUNkO0FBQ0FBLFFBQU0sRUFBRTtBQUNQO0FBQ0FDLFdBQU8sRUFBRSw4QkFGRjtBQUdQQyxVQUFNO0FBQ0wsc0JBQWdCLGdDQURYO0FBRVcsdUNBRlgsQ0FIQzs7QUFPUEMsUUFBSSxFQUFFLEVBUEM7QUFRUEMsVUFBTSxFQUFFLEtBUkQ7QUFTUEMsWUFBUSxFQUFFLE1BVEgsRUFGTTs7QUFhZDtBQUNBQyxTQWRjLHFCQWNRLEtBQWRDLE9BQWMsdUVBQUosRUFBSTtBQUNyQjtBQUNBQSxXQUFPLENBQUNDLEdBQVIsR0FBYyxLQUFLUixNQUFMLENBQVlDLE9BQVosR0FBc0JNLE9BQU8sQ0FBQ0MsR0FBNUM7QUFDQUQsV0FBTyxDQUFDTCxNQUFSLEdBQWlCSyxPQUFPLENBQUNMLE1BQVIsSUFBa0IsS0FBS0YsTUFBTCxDQUFZRSxNQUEvQztBQUNBSyxXQUFPLENBQUNKLElBQVIsR0FBZUksT0FBTyxDQUFDSixJQUFSLElBQWdCLEtBQUtILE1BQUwsQ0FBWUcsSUFBM0M7QUFDQUksV0FBTyxDQUFDSCxNQUFSLEdBQWlCRyxPQUFPLENBQUNILE1BQVIsSUFBa0IsS0FBS0osTUFBTCxDQUFZSSxNQUEvQztBQUNBRyxXQUFPLENBQUNGLFFBQVIsR0FBbUJFLE9BQU8sQ0FBQ0YsUUFBUixJQUFvQixLQUFLTCxNQUFMLENBQVlLLFFBQW5EO0FBQ0E7QUFDQSxRQUFJRSxPQUFPLENBQUNFLEtBQVosRUFBbUI7QUFDbEJGLGFBQU8sQ0FBQ0wsTUFBUixDQUFlTyxLQUFmLEdBQXVCQyxlQUFPQyxLQUFQLENBQWFDLElBQWIsQ0FBa0JILEtBQXpDO0FBQ0E7QUFDQSxVQUFJRixPQUFPLENBQUNNLFVBQVIsSUFBc0IsQ0FBQ04sT0FBTyxDQUFDTCxNQUFSLENBQWVPLEtBQTFDLEVBQWlEO0FBQ2hESyxXQUFHLENBQUNDLFNBQUosQ0FBYztBQUNiQyxlQUFLLEVBQUUsTUFETTtBQUViQyxjQUFJLEVBQUUsTUFGTyxFQUFkOzs7QUFLQSxlQUFPSCxHQUFHLENBQUNJLFVBQUosQ0FBZTtBQUNyQlYsYUFBRyxFQUFFLG9CQURnQixFQUFmLENBQVA7OztBQUlBO0FBQ0Q7OztBQUdEO0FBQ0EsV0FBTyxJQUFJVyxPQUFKLENBQVksVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7O0FBRWhDOzs7QUFHQTtBQUNBUCxTQUFHLENBQUNSLE9BQUo7Ozs7O0FBS0lDLGFBTEo7QUFNQ2UsZUFBTyxFQUFFLGlCQUFBQyxNQUFNLEVBQUk7QUFDZjtBQUNILGNBQUloQixPQUFPLENBQUNpQixNQUFaLEVBQW9CO0FBQ25CLG1CQUFPSixHQUFHLENBQUNHLE1BQUQsQ0FBVjtBQUNBOztBQUVEO0FBQ0EsY0FBSUEsTUFBTSxDQUFDRSxVQUFQLEtBQXNCLEdBQTFCLEVBQStCO0FBQzlCQyxtQkFBTyxDQUFDQyxHQUFSLE9BQVksUUFBWjtBQUNBLGdCQUFJcEIsT0FBTyxDQUFDcUIsS0FBUixLQUFrQixLQUF0QixFQUE2QjtBQUM1QixxQkFBT2QsR0FBRyxDQUFDQyxTQUFKLENBQWM7QUFDcEJDLHFCQUFLLEVBQUVPLE1BQU0sQ0FBQ3BCLElBQVAsQ0FBWTBCLEdBQVosSUFBbUIsT0FETjtBQUVwQlosb0JBQUksRUFBRSxNQUZjLEVBQWQsQ0FBUDs7QUFJQTs7OztBQUlELG1CQUFPSSxHQUFHLENBQUNFLE1BQU0sQ0FBQ3BCLElBQVIsQ0FBVjtBQUNBO0FBQ0Q7QUFDQSxjQUFJQSxJQUFJLEdBQUdvQixNQUFNLENBQUNwQixJQUFQLENBQVlBLElBQXZCO0FBQ0FpQixhQUFHLENBQUNqQixJQUFELENBQUg7OztBQUdBLFNBL0JGO0FBZ0NDMkIsWUFBSSxFQUFFLGNBQUNDLEtBQUQsRUFBVztBQUNoQmpCLGFBQUcsQ0FBQ0MsU0FBSixDQUFjO0FBQ2JDLGlCQUFLLEVBQUVlLEtBQUssQ0FBQ0MsTUFBTixJQUFnQixNQURWO0FBRWJmLGdCQUFJLEVBQUUsTUFGTyxFQUFkOztBQUlBLGlCQUFPSSxHQUFHLEVBQVY7QUFDQSxTQXRDRjs7QUF3Q0EsS0E5Q00sQ0FBUDs7O0FBaURBLEdBekZhO0FBMEZkO0FBQ0FZLEtBM0ZjLGVBMkZWekIsR0EzRlUsRUEyRm9CLEtBQXpCTCxJQUF5Qix1RUFBbEIsRUFBa0IsS0FBZEksT0FBYyx1RUFBSixFQUFJO0FBQ2pDQSxXQUFPLENBQUNDLEdBQVIsR0FBY0EsR0FBZDtBQUNBRCxXQUFPLENBQUNKLElBQVIsR0FBZUEsSUFBZjtBQUNBSSxXQUFPLENBQUNILE1BQVIsR0FBaUIsS0FBakI7QUFDQSxXQUFPLEtBQUtFLE9BQUwsQ0FBYUMsT0FBYixDQUFQO0FBQ0EsR0FoR2E7QUFpR2Q7QUFDQTJCLE1BbEdjLGdCQWtHVDFCLEdBbEdTLEVBa0dxQixLQUF6QkwsSUFBeUIsdUVBQWxCLEVBQWtCLEtBQWRJLE9BQWMsdUVBQUosRUFBSTtBQUNsQ0EsV0FBTyxDQUFDQyxHQUFSLEdBQWNBLEdBQWQ7QUFDQUQsV0FBTyxDQUFDSixJQUFSLEdBQWVBLElBQWY7QUFDQUksV0FBTyxDQUFDSCxNQUFSLEdBQWlCLE1BQWpCO0FBQ0EsV0FBTyxLQUFLRSxPQUFMLENBQWFDLE9BQWIsQ0FBUDtBQUNBLEdBdkdhO0FBd0dkO0FBQ0E0QixLQXpHYyxlQXlHVjNCLEdBekdVLEVBeUdvQixLQUF6QkwsSUFBeUIsdUVBQWxCLEVBQWtCLEtBQWRJLE9BQWMsdUVBQUosRUFBSTtBQUNqQ0EsV0FBTyxDQUFDQyxHQUFSLEdBQWNBLEdBQWQ7QUFDQUQsV0FBTyxDQUFDSixJQUFSLEdBQWVBLElBQWY7QUFDQUksV0FBTyxDQUFDSCxNQUFSLEdBQWlCLFFBQWpCO0FBQ0EsV0FBTyxLQUFLRSxPQUFMLENBQWFDLE9BQWIsQ0FBUDtBQUNBLEdBOUdhLEUiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJHN0b3JlIGZyb20gJ0Avc3RvcmUvaW5kZXguanMnO1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0Ly8g5YWo5bGA6YWN572uXHJcblx0Y29tbW9uOiB7XHJcblx0XHQvLyDmoLnot6/lvoRcclxuXHRcdGJhc2VVcmw6IFwiaHR0cDovL2Nlc2hpMy5kaXNoYWl0LmNuL2FwaVwiLFxyXG5cdFx0aGVhZGVyOiB7XHJcblx0XHRcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JyxcclxuXHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXHJcblx0XHR9LFxyXG5cdFx0ZGF0YToge30sXHJcblx0XHRtZXRob2Q6IFwiR0VUXCIsXHJcblx0XHRkYXRhVHlwZTogJ2pzb24nXHJcblx0fSxcclxuXHQvLyDor7fmsYIg6L+U5ZuecHJvbWlzZVxyXG5cdHJlcXVlc3Qob3B0aW9ucyA9IHt9KSB7XHJcblx0XHQvLyDnu4Tnu4flj4LmlbBcclxuXHRcdG9wdGlvbnMudXJsID0gdGhpcy5jb21tb24uYmFzZVVybCArIG9wdGlvbnMudXJsXHJcblx0XHRvcHRpb25zLmhlYWRlciA9IG9wdGlvbnMuaGVhZGVyIHx8IHRoaXMuY29tbW9uLmhlYWRlclxyXG5cdFx0b3B0aW9ucy5kYXRhID0gb3B0aW9ucy5kYXRhIHx8IHRoaXMuY29tbW9uLmRhdGFcclxuXHRcdG9wdGlvbnMubWV0aG9kID0gb3B0aW9ucy5tZXRob2QgfHwgdGhpcy5jb21tb24ubWV0aG9kXHJcblx0XHRvcHRpb25zLmRhdGFUeXBlID0gb3B0aW9ucy5kYXRhVHlwZSB8fCB0aGlzLmNvbW1vbi5kYXRhVHlwZVxyXG5cdFx0Ly90b2tlblxyXG5cdFx0aWYgKG9wdGlvbnMudG9rZW4pIHtcclxuXHRcdFx0b3B0aW9ucy5oZWFkZXIudG9rZW4gPSAkc3RvcmUuc3RhdGUudXNlci50b2tlblxyXG5cdFx0XHQvLyDkuozmrKHpqozor4FcclxuXHRcdFx0aWYgKG9wdGlvbnMuY2hlY2tUb2tlbiAmJiAhb3B0aW9ucy5oZWFkZXIudG9rZW4pIHtcclxuXHRcdFx0XHR1bmkuc2hvd1RvYXN0KHtcclxuXHRcdFx0XHRcdHRpdGxlOiAn6K+35YWI55m75b2VJyxcclxuXHRcdFx0XHRcdGljb246IFwibm9uZVwiXHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdHJldHVybiB1bmkubmF2aWdhdGVUbyh7XHJcblx0XHRcdFx0XHR1cmw6ICcvcGFnZXMvbG9naW4vbG9naW4nLFxyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHJcblx0XHQvLyDor7fmsYJcclxuXHRcdHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcclxuXHJcblx0XHRcdC8vIOivt+axguS5i+WJjS4uLiAgdG9kb1xyXG5cclxuXHJcblx0XHRcdC8vIOivt+axguS4rVxyXG5cdFx0XHR1bmkucmVxdWVzdCh7XHJcblx0XHRcdFx0Ly8gdXJsOiAnJyxcclxuXHRcdFx0XHQvLyBtZXRob2Q6ICdHRVQnLFxyXG5cdFx0XHRcdC8vIGRhdGE6IHt9LFxyXG5cdFx0XHRcdC8vIGhlYWRlcixkYXRhVHlwZVxyXG5cdFx0XHRcdC4uLm9wdGlvbnMsXHJcblx0XHRcdFx0c3VjY2VzczogcmVzdWx0ID0+IHtcclxuICAgICAgICAvL+i/lOWbnuWOn+Wni+aVsOaNrlxyXG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMubmF0aXZlKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiByZXMocmVzdWx0KVxyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIOacjeWKoeerr+Wksei0pVxyXG5cdFx0XHRcdFx0aWYgKHJlc3VsdC5zdGF0dXNDb2RlICE9PSAyMDApIHtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCJkc2Fkc2FcIik7XHJcblx0XHRcdFx0XHRcdGlmIChvcHRpb25zLnRvYXN0ICE9PSBmYWxzZSkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiB1bmkuc2hvd1RvYXN0KHtcclxuXHRcdFx0XHRcdFx0XHRcdHRpdGxlOiByZXN1bHQuZGF0YS5tc2cgfHwgJ+acjeWKoeerr+Wksei0pScsXHJcblx0XHRcdFx0XHRcdFx0XHRpY29uOiBcIm5vbmVcIlxyXG5cdFx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblxyXG5cclxuXHRcdFx0XHRcdFx0cmV0dXJuIHJlaihyZXN1bHQuZGF0YSlcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdC8vIOaIkOWKn1xyXG5cdFx0XHRcdFx0bGV0IGRhdGEgPSByZXN1bHQuZGF0YS5kYXRhXHJcblx0XHRcdFx0XHRyZXMoZGF0YSlcclxuXHJcblxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZmFpbDogKGVycm9yKSA9PiB7XHJcblx0XHRcdFx0XHR1bmkuc2hvd1RvYXN0KHtcclxuXHRcdFx0XHRcdFx0dGl0bGU6IGVycm9yLmVyck1zZyB8fCAn6K+35rGC5aSx6LSlJyxcclxuXHRcdFx0XHRcdFx0aWNvbjogXCJub25lXCJcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRyZXR1cm4gcmVqKClcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHR9KTtcclxuXHRcdH0pXHJcblxyXG5cclxuXHR9LFxyXG5cdC8vIGdldCDor7fmsYJcclxuXHRnZXQodXJsLCBkYXRhID0ge30sIG9wdGlvbnMgPSB7fSkge1xyXG5cdFx0b3B0aW9ucy51cmwgPSB1cmxcclxuXHRcdG9wdGlvbnMuZGF0YSA9IGRhdGFcclxuXHRcdG9wdGlvbnMubWV0aG9kID0gXCJHRVRcIlxyXG5cdFx0cmV0dXJuIHRoaXMucmVxdWVzdChvcHRpb25zKVxyXG5cdH0sXHJcblx0Ly8gUE9TVCDor7fmsYJcclxuXHRwb3N0KHVybCwgZGF0YSA9IHt9LCBvcHRpb25zID0ge30pIHtcclxuXHRcdG9wdGlvbnMudXJsID0gdXJsXHJcblx0XHRvcHRpb25zLmRhdGEgPSBkYXRhXHJcblx0XHRvcHRpb25zLm1ldGhvZCA9IFwiUE9TVFwiXHJcblx0XHRyZXR1cm4gdGhpcy5yZXF1ZXN0KG9wdGlvbnMpXHJcblx0fSxcclxuXHQvLyBkZWxldGUg6K+35rGCXHJcblx0ZGVsKHVybCwgZGF0YSA9IHt9LCBvcHRpb25zID0ge30pIHtcclxuXHRcdG9wdGlvbnMudXJsID0gdXJsXHJcblx0XHRvcHRpb25zLmRhdGEgPSBkYXRhXHJcblx0XHRvcHRpb25zLm1ldGhvZCA9IFwiREVMRVRFXCJcclxuXHRcdHJldHVybiB0aGlzLnJlcXVlc3Qob3B0aW9ucylcclxuXHR9XHJcblxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n");

/***/ }),

/***/ 2:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),

/***/ 20:
/*!*******************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/common/lib/util.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = {\n  // 更新tabbat角标\n  updaCaartBadge: function updaCaartBadge(count) {\n    if (count > 0) {\n      return uni.setTabBarBadge({\n        index: 2,\n        text: count.toString() });\n\n    }\n    uni.removeTabBarBadge({\n      index: 2 });\n\n  },\n  // 判断订单状态\n  formatStatus: function formatStatus(order) {\n    if (!order) {\n      return '';\n    }\n    // 未支付\n    if (!order.paid_time) {\n      return \"待支付\";\n    }\n    // 退款情况\n    // 订单生成  退款和物流默认是pending状态\n    if (order.refund_status !== 'pending') {\n      switch (order.refund_status) {\n        case 'applied':\n          return '退款中';\n          break;\n        case 'success':\n          return '退款成功';\n          break;\n        case 'failed':\n          return '退款失败';\n          break;}\n\n    }\n    switch (order.ship_status) {\n      case 'pending':\n        return '待发货';\n        break;\n      case 'delivered':\n        return '待收货';\n        break;\n      case 'received':\n        return '已签收';\n        break;}\n\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tbW9uL2xpYi91dGlsLmpzIl0sIm5hbWVzIjpbInVwZGFDYWFydEJhZGdlIiwiY291bnQiLCJ1bmkiLCJzZXRUYWJCYXJCYWRnZSIsImluZGV4IiwidGV4dCIsInRvU3RyaW5nIiwicmVtb3ZlVGFiQmFyQmFkZ2UiLCJmb3JtYXRTdGF0dXMiLCJvcmRlciIsInBhaWRfdGltZSIsInJlZnVuZF9zdGF0dXMiLCJzaGlwX3N0YXR1cyJdLCJtYXBwaW5ncyI6ImlKQUFlO0FBQ2Q7QUFDQUEsZ0JBRmMsMEJBRUNDLEtBRkQsRUFFUTtBQUNyQixRQUFJQSxLQUFLLEdBQUcsQ0FBWixFQUFlO0FBQ2QsYUFBT0MsR0FBRyxDQUFDQyxjQUFKLENBQW1CO0FBQ3pCQyxhQUFLLEVBQUUsQ0FEa0I7QUFFekJDLFlBQUksRUFBRUosS0FBSyxDQUFDSyxRQUFOLEVBRm1CLEVBQW5CLENBQVA7O0FBSUE7QUFDREosT0FBRyxDQUFDSyxpQkFBSixDQUFzQjtBQUNyQkgsV0FBSyxFQUFFLENBRGMsRUFBdEI7O0FBR0EsR0FaYTtBQWFkO0FBQ0FJLGNBZGMsd0JBY0RDLEtBZEMsRUFjTTtBQUNuQixRQUFJLENBQUNBLEtBQUwsRUFBWTtBQUNYLGFBQU8sRUFBUDtBQUNBO0FBQ0Q7QUFDQSxRQUFJLENBQUNBLEtBQUssQ0FBQ0MsU0FBWCxFQUFzQjtBQUNyQixhQUFPLEtBQVA7QUFDQTtBQUNEO0FBQ0E7QUFDQSxRQUFJRCxLQUFLLENBQUNFLGFBQU4sS0FBd0IsU0FBNUIsRUFBdUM7QUFDdEMsY0FBUUYsS0FBSyxDQUFDRSxhQUFkO0FBQ0MsYUFBSyxTQUFMO0FBQ0MsaUJBQU8sS0FBUDtBQUNBO0FBQ0QsYUFBSyxTQUFMO0FBQ0MsaUJBQU8sTUFBUDtBQUNBO0FBQ0QsYUFBSyxRQUFMO0FBQ0MsaUJBQU8sTUFBUDtBQUNBLGdCQVRGOztBQVdBO0FBQ0QsWUFBUUYsS0FBSyxDQUFDRyxXQUFkO0FBQ0MsV0FBSyxTQUFMO0FBQ0MsZUFBTyxLQUFQO0FBQ0E7QUFDRCxXQUFLLFdBQUw7QUFDQyxlQUFPLEtBQVA7QUFDQTtBQUNELFdBQUssVUFBTDtBQUNDLGVBQU8sS0FBUDtBQUNBLGNBVEY7O0FBV0EsR0FoRGEsRSIsImZpbGUiOiIyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcclxuXHQvLyDmm7TmlrB0YWJiYXTop5LmoIdcclxuXHR1cGRhQ2FhcnRCYWRnZShjb3VudCkge1xyXG5cdFx0aWYgKGNvdW50ID4gMCkge1xyXG5cdFx0XHRyZXR1cm4gdW5pLnNldFRhYkJhckJhZGdlKHtcclxuXHRcdFx0XHRpbmRleDogMixcclxuXHRcdFx0XHR0ZXh0OiBjb3VudC50b1N0cmluZygpXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0XHR1bmkucmVtb3ZlVGFiQmFyQmFkZ2Uoe1xyXG5cdFx0XHRpbmRleDogMlxyXG5cdFx0fSlcclxuXHR9LFxyXG5cdC8vIOWIpOaWreiuouWNleeKtuaAgVxyXG5cdGZvcm1hdFN0YXR1cyhvcmRlcikge1xyXG5cdFx0aWYgKCFvcmRlcikge1xyXG5cdFx0XHRyZXR1cm4gJydcclxuXHRcdH1cclxuXHRcdC8vIOacquaUr+S7mFxyXG5cdFx0aWYgKCFvcmRlci5wYWlkX3RpbWUpIHtcclxuXHRcdFx0cmV0dXJuIFwi5b6F5pSv5LuYXCJcclxuXHRcdH1cclxuXHRcdC8vIOmAgOasvuaDheWGtVxyXG5cdFx0Ly8g6K6i5Y2V55Sf5oiQICDpgIDmrL7lkoznianmtYHpu5jorqTmmK9wZW5kaW5n54q25oCBXHJcblx0XHRpZiAob3JkZXIucmVmdW5kX3N0YXR1cyAhPT0gJ3BlbmRpbmcnKSB7XHJcblx0XHRcdHN3aXRjaCAob3JkZXIucmVmdW5kX3N0YXR1cykge1xyXG5cdFx0XHRcdGNhc2UgJ2FwcGxpZWQnOlxyXG5cdFx0XHRcdFx0cmV0dXJuICfpgIDmrL7kuK0nXHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlICdzdWNjZXNzJzpcclxuXHRcdFx0XHRcdHJldHVybiAn6YCA5qy+5oiQ5YqfJ1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0Y2FzZSAnZmFpbGVkJzpcclxuXHRcdFx0XHRcdHJldHVybiAn6YCA5qy+5aSx6LSlJ1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHN3aXRjaCAob3JkZXIuc2hpcF9zdGF0dXMpIHtcclxuXHRcdFx0Y2FzZSAncGVuZGluZyc6XHJcblx0XHRcdFx0cmV0dXJuICflvoXlj5HotKcnXHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ2RlbGl2ZXJlZCc6XHJcblx0XHRcdFx0cmV0dXJuICflvoXmlLbotKcnXHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ3JlY2VpdmVkJzpcclxuXHRcdFx0XHRyZXR1cm4gJ+W3suetvuaUtidcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHR9LFxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n");

/***/ }),

/***/ 21:
/*!**********************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/store/modules/path.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}var _default = {\n  state: {\n    list: [] },\n\n  getters: {\n    // 获取默认地址\n    defaultPath: function defaultPath(state) {\n      return state.list.filter(function (v) {\n        return v.isdefault;\n      });\n    } },\n\n  mutations: {\n    // 覆盖收地址\n    updatePahtList: function updatePahtList(state, _ref) {var refresh = _ref.refresh,list = _ref.list;\n      state.list = refresh ? list : [].concat(_toConsumableArray(state.list), _toConsumableArray(list));\n    },\n\n    // 创建收货地址\n    createPath: function createPath(state, item) {\n      state.list.unshift(item);\n    },\n    // 删除收货地址\n    delPath: function delPath(state, index) {\n      state.list.splice(index, 1);\n    },\n    // 修改收货地址\n    updatePath: function updatePath(state, _ref2) {var index = _ref2.index,item = _ref2.item;\n      for (var key in item) {\n        state.list[index][key] = item[key];\n\n      }\n\n      // state.list[index] = item\n    },\n    // 取消默认地址\n    removeDefault: function removeDefault(state) {\n      state.list.forEach(function (v) {\n        if (v.isdefault) {\n          v.isdefault = false;\n        }\n      });\n    } },\n\n  actions: {\n    // 修改地址\n    updatePathAction: function updatePathAction(_ref3, obj) {var commit = _ref3.commit;\n      if (obj.item.isdefault) {\n        commit('removeDefault');\n      }\n      commit('updatePath', obj);\n    },\n    // 增加地址\n    createPathAction: function createPathAction(_ref4, item) {var commit = _ref4.commit;\n      if (item.default) {\n        commit('removeDefault');\n      }\n      commit('createPath', item);\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9wYXRoLmpzIl0sIm5hbWVzIjpbInN0YXRlIiwibGlzdCIsImdldHRlcnMiLCJkZWZhdWx0UGF0aCIsImZpbHRlciIsInYiLCJpc2RlZmF1bHQiLCJtdXRhdGlvbnMiLCJ1cGRhdGVQYWh0TGlzdCIsInJlZnJlc2giLCJjcmVhdGVQYXRoIiwiaXRlbSIsInVuc2hpZnQiLCJkZWxQYXRoIiwiaW5kZXgiLCJzcGxpY2UiLCJ1cGRhdGVQYXRoIiwia2V5IiwicmVtb3ZlRGVmYXVsdCIsImZvckVhY2giLCJhY3Rpb25zIiwidXBkYXRlUGF0aEFjdGlvbiIsIm9iaiIsImNvbW1pdCIsImNyZWF0ZVBhdGhBY3Rpb24iLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiK25CQUFlO0FBQ2RBLE9BQUssRUFBRTtBQUNOQyxRQUFJLEVBQUUsRUFEQSxFQURPOztBQUlkQyxTQUFPLEVBQUU7QUFDUjtBQUNBQyxlQUFXLEVBQUUscUJBQUNILEtBQUQsRUFBVztBQUN2QixhQUFPQSxLQUFLLENBQUNDLElBQU4sQ0FBV0csTUFBWCxDQUFrQixVQUFBQyxDQUFDLEVBQUk7QUFDN0IsZUFBT0EsQ0FBQyxDQUFDQyxTQUFUO0FBQ0EsT0FGTSxDQUFQO0FBR0EsS0FOTyxFQUpLOztBQVlkQyxXQUFTLEVBQUU7QUFDVjtBQUNBQyxrQkFGVSwwQkFFS1IsS0FGTCxRQUU0QixLQUFmUyxPQUFlLFFBQWZBLE9BQWUsQ0FBUFIsSUFBTyxRQUFQQSxJQUFPO0FBQ3JDRCxXQUFLLENBQUNDLElBQU4sR0FBYVEsT0FBTyxHQUFHUixJQUFILGdDQUFjRCxLQUFLLENBQUNDLElBQXBCLHNCQUE0QkEsSUFBNUIsRUFBcEI7QUFDQSxLQUpTOztBQU1WO0FBQ0FTLGNBUFUsc0JBT0NWLEtBUEQsRUFPUVcsSUFQUixFQU9jO0FBQ3ZCWCxXQUFLLENBQUNDLElBQU4sQ0FBV1csT0FBWCxDQUFtQkQsSUFBbkI7QUFDQSxLQVRTO0FBVVY7QUFDQUUsV0FYVSxtQkFXRmIsS0FYRSxFQVdLYyxLQVhMLEVBV1k7QUFDckJkLFdBQUssQ0FBQ0MsSUFBTixDQUFXYyxNQUFYLENBQWtCRCxLQUFsQixFQUF5QixDQUF6QjtBQUNBLEtBYlM7QUFjVjtBQUNBRSxjQWZVLHNCQWVDaEIsS0FmRCxTQWV5QixLQUFmYyxLQUFlLFNBQWZBLEtBQWUsQ0FBUkgsSUFBUSxTQUFSQSxJQUFRO0FBQ2xDLFdBQUssSUFBSU0sR0FBVCxJQUFnQk4sSUFBaEIsRUFBc0I7QUFDckJYLGFBQUssQ0FBQ0MsSUFBTixDQUFXYSxLQUFYLEVBQWtCRyxHQUFsQixJQUF5Qk4sSUFBSSxDQUFDTSxHQUFELENBQTdCOztBQUVBOztBQUVEO0FBQ0EsS0F0QlM7QUF1QlY7QUFDQUMsaUJBeEJVLHlCQXdCSWxCLEtBeEJKLEVBd0JXO0FBQ3BCQSxXQUFLLENBQUNDLElBQU4sQ0FBV2tCLE9BQVgsQ0FBbUIsVUFBQWQsQ0FBQyxFQUFJO0FBQ3ZCLFlBQUlBLENBQUMsQ0FBQ0MsU0FBTixFQUFpQjtBQUNoQkQsV0FBQyxDQUFDQyxTQUFGLEdBQWMsS0FBZDtBQUNBO0FBQ0QsT0FKRDtBQUtBLEtBOUJTLEVBWkc7O0FBNENkYyxTQUFPLEVBQUU7QUFDUjtBQUNBQyxvQkFGUSxtQ0FFcUJDLEdBRnJCLEVBRTBCLEtBQWZDLE1BQWUsU0FBZkEsTUFBZTtBQUNqQyxVQUFJRCxHQUFHLENBQUNYLElBQUosQ0FBU0wsU0FBYixFQUF3QjtBQUN2QmlCLGNBQU0sQ0FBQyxlQUFELENBQU47QUFDQTtBQUNEQSxZQUFNLENBQUMsWUFBRCxFQUFlRCxHQUFmLENBQU47QUFDQSxLQVBPO0FBUVI7QUFDQUUsb0JBVFEsbUNBU3FCYixJQVRyQixFQVMyQixLQUFoQlksTUFBZ0IsU0FBaEJBLE1BQWdCO0FBQ2xDLFVBQUlaLElBQUksQ0FBQ2MsT0FBVCxFQUFrQjtBQUNqQkYsY0FBTSxDQUFDLGVBQUQsQ0FBTjtBQUNBO0FBQ0RBLFlBQU0sQ0FBQyxZQUFELEVBQWVaLElBQWYsQ0FBTjtBQUNBLEtBZE8sRUE1Q0ssRSIsImZpbGUiOiIyMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcclxuXHRzdGF0ZToge1xyXG5cdFx0bGlzdDogW10sXHJcblx0fSxcclxuXHRnZXR0ZXJzOiB7XHJcblx0XHQvLyDojrflj5bpu5jorqTlnLDlnYBcclxuXHRcdGRlZmF1bHRQYXRoOiAoc3RhdGUpID0+IHtcclxuXHRcdFx0cmV0dXJuIHN0YXRlLmxpc3QuZmlsdGVyKHYgPT4ge1xyXG5cdFx0XHRcdHJldHVybiB2LmlzZGVmYXVsdFxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0sXHJcblx0bXV0YXRpb25zOiB7XHJcblx0XHQvLyDopobnm5bmlLblnLDlnYBcclxuXHRcdHVwZGF0ZVBhaHRMaXN0KHN0YXRlLCB7cmVmcmVzaCxsaXN0fSkge1xyXG5cdFx0XHRzdGF0ZS5saXN0ID0gcmVmcmVzaCA/IGxpc3QgOiBbLi4uc3RhdGUubGlzdCwuLi5saXN0XVxyXG5cdFx0fSxcclxuXHJcblx0XHQvLyDliJvlu7rmlLbotKflnLDlnYBcclxuXHRcdGNyZWF0ZVBhdGgoc3RhdGUsIGl0ZW0pIHtcclxuXHRcdFx0c3RhdGUubGlzdC51bnNoaWZ0KGl0ZW0pXHJcblx0XHR9LFxyXG5cdFx0Ly8g5Yig6Zmk5pS26LSn5Zyw5Z2AXHJcblx0XHRkZWxQYXRoKHN0YXRlLCBpbmRleCkge1xyXG5cdFx0XHRzdGF0ZS5saXN0LnNwbGljZShpbmRleCwgMSlcclxuXHRcdH0sXHJcblx0XHQvLyDkv67mlLnmlLbotKflnLDlnYBcclxuXHRcdHVwZGF0ZVBhdGgoc3RhdGUsIHsgaW5kZXgsIGl0ZW0gfSkge1xyXG5cdFx0XHRmb3IgKGxldCBrZXkgaW4gaXRlbSkge1xyXG5cdFx0XHRcdHN0YXRlLmxpc3RbaW5kZXhdW2tleV0gPSBpdGVtW2tleV1cclxuXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIHN0YXRlLmxpc3RbaW5kZXhdID0gaXRlbVxyXG5cdFx0fSxcclxuXHRcdC8vIOWPlua2iOm7mOiupOWcsOWdgFxyXG5cdFx0cmVtb3ZlRGVmYXVsdChzdGF0ZSkge1xyXG5cdFx0XHRzdGF0ZS5saXN0LmZvckVhY2godiA9PiB7XHJcblx0XHRcdFx0aWYgKHYuaXNkZWZhdWx0KSB7XHJcblx0XHRcdFx0XHR2LmlzZGVmYXVsdCA9IGZhbHNlXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0sXHJcblx0YWN0aW9uczoge1xyXG5cdFx0Ly8g5L+u5pS55Zyw5Z2AXHJcblx0XHR1cGRhdGVQYXRoQWN0aW9uKHsgY29tbWl0IH0sIG9iaikge1xyXG5cdFx0XHRpZiAob2JqLml0ZW0uaXNkZWZhdWx0KSB7XHJcblx0XHRcdFx0Y29tbWl0KCdyZW1vdmVEZWZhdWx0JylcclxuXHRcdFx0fVxyXG5cdFx0XHRjb21taXQoJ3VwZGF0ZVBhdGgnLCBvYmopXHJcblx0XHR9LFxyXG5cdFx0Ly8g5aKe5Yqg5Zyw5Z2AXHJcblx0XHRjcmVhdGVQYXRoQWN0aW9uKHsgY29tbWl0IH0sIGl0ZW0pIHtcclxuXHRcdFx0aWYgKGl0ZW0uZGVmYXVsdCkge1xyXG5cdFx0XHRcdGNvbW1pdCgncmVtb3ZlRGVmYXVsdCcpXHJcblx0XHRcdH1cclxuXHRcdFx0Y29tbWl0KCdjcmVhdGVQYXRoJywgaXRlbSlcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n");

/***/ }),

/***/ 22:
/*!**********************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/store/modules/user.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = {\n\n  state: {\n    // 登录状态\n    loginStatus: false,\n    //token\n    token: null,\n    //用户信息\n    userInfo: {} },\n\n  mutations: {\n    // 初始化登录状态\n    initUser: function initUser(state) {\n      var userInfo = uni.getStorageSync('userInfo');\n      if (userInfo) {\n        userInfo = JSON.parse(userInfo);\n\n        state.userInfo = userInfo;\n        state.token = userInfo.token;\n        state.loginStatus = true;\n      }\n    },\n    // 登录\n    login: function login(state, userinfo) {\n      state.userInfo = userinfo;\n      state.loginStatus = true;\n      state.token = userinfo.token;\n      // 持久化存储\n      uni.setStorageSync('userInfo', JSON.stringify(userinfo));\n    },\n    // 退出登录\n    logout: function logout(state) {\n      state.userInfo = {};\n      state.loginStatus = false;\n      state.token = null;\n      uni.removeStorageSync('userInfo');\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy91c2VyLmpzIl0sIm5hbWVzIjpbInN0YXRlIiwibG9naW5TdGF0dXMiLCJ0b2tlbiIsInVzZXJJbmZvIiwibXV0YXRpb25zIiwiaW5pdFVzZXIiLCJ1bmkiLCJnZXRTdG9yYWdlU3luYyIsIkpTT04iLCJwYXJzZSIsImxvZ2luIiwidXNlcmluZm8iLCJzZXRTdG9yYWdlU3luYyIsInN0cmluZ2lmeSIsImxvZ291dCIsInJlbW92ZVN0b3JhZ2VTeW5jIl0sIm1hcHBpbmdzIjoiaUpBQWU7O0FBRWRBLE9BQUssRUFBRTtBQUNOO0FBQ0FDLGVBQVcsRUFBRSxLQUZQO0FBR047QUFDQUMsU0FBSyxFQUFFLElBSkQ7QUFLTjtBQUNBQyxZQUFRLEVBQUUsRUFOSixFQUZPOztBQVVkQyxXQUFTLEVBQUU7QUFDVjtBQUNBQyxZQUZVLG9CQUVETCxLQUZDLEVBRU07QUFDZixVQUFJRyxRQUFRLEdBQUdHLEdBQUcsQ0FBQ0MsY0FBSixDQUFtQixVQUFuQixDQUFmO0FBQ0EsVUFBSUosUUFBSixFQUFjO0FBQ2JBLGdCQUFRLEdBQUdLLElBQUksQ0FBQ0MsS0FBTCxDQUFXTixRQUFYLENBQVg7O0FBRUFILGFBQUssQ0FBQ0csUUFBTixHQUFpQkEsUUFBakI7QUFDQUgsYUFBSyxDQUFDRSxLQUFOLEdBQWNDLFFBQVEsQ0FBQ0QsS0FBdkI7QUFDQUYsYUFBSyxDQUFDQyxXQUFOLEdBQW9CLElBQXBCO0FBQ0E7QUFDRCxLQVhTO0FBWVY7QUFDQVMsU0FiVSxpQkFhSlYsS0FiSSxFQWFHVyxRQWJILEVBYWE7QUFDdEJYLFdBQUssQ0FBQ0csUUFBTixHQUFpQlEsUUFBakI7QUFDQVgsV0FBSyxDQUFDQyxXQUFOLEdBQW9CLElBQXBCO0FBQ0FELFdBQUssQ0FBQ0UsS0FBTixHQUFjUyxRQUFRLENBQUNULEtBQXZCO0FBQ0E7QUFDQUksU0FBRyxDQUFDTSxjQUFKLENBQW1CLFVBQW5CLEVBQStCSixJQUFJLENBQUNLLFNBQUwsQ0FBZUYsUUFBZixDQUEvQjtBQUNBLEtBbkJTO0FBb0JWO0FBQ0FHLFVBckJVLGtCQXFCSGQsS0FyQkcsRUFxQkk7QUFDYkEsV0FBSyxDQUFDRyxRQUFOLEdBQWlCLEVBQWpCO0FBQ0FILFdBQUssQ0FBQ0MsV0FBTixHQUFvQixLQUFwQjtBQUNBRCxXQUFLLENBQUNFLEtBQU4sR0FBYyxJQUFkO0FBQ0FJLFNBQUcsQ0FBQ1MsaUJBQUosQ0FBc0IsVUFBdEI7QUFDQSxLQTFCUyxFQVZHLEUiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XHJcblxyXG5cdHN0YXRlOiB7XHJcblx0XHQvLyDnmbvlvZXnirbmgIFcclxuXHRcdGxvZ2luU3RhdHVzOiBmYWxzZSxcclxuXHRcdC8vdG9rZW5cclxuXHRcdHRva2VuOiBudWxsLFxyXG5cdFx0Ly/nlKjmiLfkv6Hmga9cclxuXHRcdHVzZXJJbmZvOiB7fVxyXG5cdH0sXHJcblx0bXV0YXRpb25zOiB7XHJcblx0XHQvLyDliJ3lp4vljJbnmbvlvZXnirbmgIFcclxuXHRcdGluaXRVc2VyKHN0YXRlKSB7XHJcblx0XHRcdGxldCB1c2VySW5mbyA9IHVuaS5nZXRTdG9yYWdlU3luYygndXNlckluZm8nKVxyXG5cdFx0XHRpZiAodXNlckluZm8pIHtcclxuXHRcdFx0XHR1c2VySW5mbyA9IEpTT04ucGFyc2UodXNlckluZm8pXHJcblxyXG5cdFx0XHRcdHN0YXRlLnVzZXJJbmZvID0gdXNlckluZm9cclxuXHRcdFx0XHRzdGF0ZS50b2tlbiA9IHVzZXJJbmZvLnRva2VuXHJcblx0XHRcdFx0c3RhdGUubG9naW5TdGF0dXMgPSB0cnVlXHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHQvLyDnmbvlvZVcclxuXHRcdGxvZ2luKHN0YXRlLCB1c2VyaW5mbykge1xyXG5cdFx0XHRzdGF0ZS51c2VySW5mbyA9IHVzZXJpbmZvXHJcblx0XHRcdHN0YXRlLmxvZ2luU3RhdHVzID0gdHJ1ZVxyXG5cdFx0XHRzdGF0ZS50b2tlbiA9IHVzZXJpbmZvLnRva2VuXHJcblx0XHRcdC8vIOaMgeS5heWMluWtmOWCqFxyXG5cdFx0XHR1bmkuc2V0U3RvcmFnZVN5bmMoJ3VzZXJJbmZvJywgSlNPTi5zdHJpbmdpZnkodXNlcmluZm8pKVxyXG5cdFx0fSxcclxuXHRcdC8vIOmAgOWHuueZu+W9lVxyXG5cdFx0bG9nb3V0KHN0YXRlKSB7XHJcblx0XHRcdHN0YXRlLnVzZXJJbmZvID0ge31cclxuXHRcdFx0c3RhdGUubG9naW5TdGF0dXMgPSBmYWxzZVxyXG5cdFx0XHRzdGF0ZS50b2tlbiA9IG51bGxcclxuXHRcdFx0dW5pLnJlbW92ZVN0b3JhZ2VTeW5jKCd1c2VySW5mbycpXHJcblx0XHR9XHJcblx0fVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n");

/***/ }),

/***/ 279:
/*!***********************************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/components/uni-ui/uParse/src/libs/html2json.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _wxDiscode = _interopRequireDefault(__webpack_require__(/*! ./wxDiscode */ 280));\nvar _htmlparser = _interopRequireDefault(__webpack_require__(/*! ./htmlparser */ 281));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /**\n                                                                                                                                                                 * html2Json 改造来自: https://github.com/Jxck/html2json\n                                                                                                                                                                 *\n                                                                                                                                                                 *\n                                                                                                                                                                 * author: Di (微信小程序开发工程师)\n                                                                                                                                                                 * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\n                                                                                                                                                                 *               垂直微信小程序开发交流社区\n                                                                                                                                                                 *\n                                                                                                                                                                 * github地址: https://github.com/icindy/wxParse\n                                                                                                                                                                 *\n                                                                                                                                                                 * for: 微信小程序富文本解析\n                                                                                                                                                                 * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\n                                                                                                                                                                 */function makeMap(str) {var obj = {};var items = str.split(',');for (var i = 0; i < items.length; i += 1) {obj[items[i]] = true;}return obj;} // Block Elements - HTML 5\nvar block = makeMap('br,code,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video'); // Inline Elements - HTML 5\nvar inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var');\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');\n\nfunction removeDOCTYPE(html) {\n  var isDocument = /<body.*>([^]*)<\\/body>/.test(html);\n  return isDocument ? RegExp.$1 : html;\n}\n\nfunction trimHtml(html) {\n  return html.\n  replace(/<!--.*?-->/gi, '').\n  replace(/\\/\\*.*?\\*\\//gi, '').\n  replace(/[ ]+</gi, '<').\n  replace(/<script[^]*<\\/script>/gi, '').\n  replace(/<style[^]*<\\/style>/gi, '');\n}\n\nfunction getScreenInfo() {\n  var screen = {};\n  wx.getSystemInfo({\n    success: function success(res) {\n      screen.width = res.windowWidth;\n      screen.height = res.windowHeight;\n    } });\n\n  return screen;\n}\n\nfunction html2json(html, customHandler, imageProp, host) {\n  // 处理字符串\n  html = removeDOCTYPE(html);\n  html = trimHtml(html);\n  html = _wxDiscode.default.strDiscode(html);\n  // 生成node节点\n  var bufArray = [];\n  var results = {\n    nodes: [],\n    imageUrls: [] };\n\n\n  var screen = getScreenInfo();\n  function Node(tag) {\n    this.node = 'element';\n    this.tag = tag;\n\n    this.$screen = screen;\n  }\n\n  (0, _htmlparser.default)(html, {\n    start: function start(tag, attrs, unary) {\n      // node for this element\n      var node = new Node(tag);\n\n      if (bufArray.length !== 0) {\n        var parent = bufArray[0];\n        if (parent.nodes === undefined) {\n          parent.nodes = [];\n        }\n      }\n\n      if (block[tag]) {\n        node.tagType = 'block';\n      } else if (inline[tag]) {\n        node.tagType = 'inline';\n      } else if (closeSelf[tag]) {\n        node.tagType = 'closeSelf';\n      }\n\n      node.attr = attrs.reduce(function (pre, attr) {var\n        name = attr.name;var\n        value = attr.value;\n        if (name === 'class') {\n          node.classStr = value;\n        }\n        // has multi attibutes\n        // make it array of attribute\n        if (name === 'style') {\n          node.styleStr = value;\n        }\n        if (value.match(/ /)) {\n          value = value.split(' ');\n        }\n\n        // if attr already exists\n        // merge it\n        if (pre[name]) {\n          if (Array.isArray(pre[name])) {\n            // already array, push to last\n            pre[name].push(value);\n          } else {\n            // single value, make it array\n            pre[name] = [pre[name], value];\n          }\n        } else {\n          // not exist, put it\n          pre[name] = value;\n        }\n\n        return pre;\n      }, {});\n\n      // 优化样式相关属性\n      if (node.classStr) {\n        node.classStr += \" \".concat(node.tag);\n      } else {\n        node.classStr = node.tag;\n      }\n      if (node.tagType === 'inline') {\n        node.classStr += ' inline';\n      }\n\n      // 对img添加额外数据\n      if (node.tag === 'img') {\n        var imgUrl = node.attr.src;\n        imgUrl = _wxDiscode.default.urlToHttpUrl(imgUrl, imageProp.domain);\n        Object.assign(node.attr, imageProp, {\n          src: imgUrl || '' });\n\n        if (imgUrl) {\n          results.imageUrls.push(imgUrl);\n        }\n      }\n\n      // 处理a标签属性\n      if (node.tag === 'a') {\n        node.attr.href = node.attr.href || '';\n      }\n\n      // 处理font标签样式属性\n      if (node.tag === 'font') {\n        var fontSize = [\n        'x-small',\n        'small',\n        'medium',\n        'large',\n        'x-large',\n        'xx-large',\n        '-webkit-xxx-large'];\n\n        var styleAttrs = {\n          color: 'color',\n          face: 'font-family',\n          size: 'font-size' };\n\n        if (!node.styleStr) node.styleStr = '';\n        Object.keys(styleAttrs).forEach(function (key) {\n          if (node.attr[key]) {\n            var value = key === 'size' ? fontSize[node.attr[key] - 1] : node.attr[key];\n            node.styleStr += \"\".concat(styleAttrs[key], \": \").concat(value, \";\");\n          }\n        });\n      }\n\n      // 临时记录source资源\n      if (node.tag === 'source') {\n        results.source = node.attr.src;\n      }\n\n      if (customHandler.start) {\n        customHandler.start(node, results);\n      }\n\n      if (unary) {\n        // if this tag doesn't have end tag\n        // like <img src=\"hoge.png\"/>\n        // add to parents\n        var _parent = bufArray[0] || results;\n        if (_parent.nodes === undefined) {\n          _parent.nodes = [];\n        }\n        _parent.nodes.push(node);\n      } else {\n        bufArray.unshift(node);\n      }\n    },\n    end: function end(tag) {\n      // merge into parent tag\n      var node = bufArray.shift();\n      if (node.tag !== tag) {\n        console.error(__f__('invalid state: mismatch end tag', \" at components\\\\uni-ui\\\\uParse\\\\src\\\\libs\\\\html2json.js:211\"));\n      }\n\n      // 当有缓存source资源时于于video补上src资源\n      if (node.tag === 'video' && results.source) {\n        node.attr.src = results.source;\n        delete results.source;\n      }\n\n      if (customHandler.end) {\n        customHandler.end(node, results);\n      }\n\n      if (bufArray.length === 0) {\n        results.nodes.push(node);\n      } else {\n        var parent = bufArray[0];\n        if (!parent.nodes) {\n          parent.nodes = [];\n        }\n        parent.nodes.push(node);\n      }\n    },\n    chars: function chars(text) {\n      if (!text.trim()) return;\n\n      var node = {\n        node: 'text',\n        text: text };\n\n\n      if (customHandler.chars) {\n        customHandler.chars(node, results);\n      }\n\n      if (bufArray.length === 0) {\n        results.nodes.push(node);\n      } else {\n        var parent = bufArray[0];\n        if (parent.nodes === undefined) {\n          parent.nodes = [];\n        }\n        parent.nodes.push(node);\n      }\n    } });\n\n\n  return results;\n}var _default =\n\nhtml2json;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///279\n");

/***/ }),

/***/ 280:
/*!***********************************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/components/uni-ui/uParse/src/libs/wxDiscode.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; // HTML 支持的数学符号\nfunction strNumDiscode(str) {\n  str = str.replace(/&forall;/g, '∀');\n  str = str.replace(/&part;/g, '∂');\n  str = str.replace(/&exist;/g, '∃');\n  str = str.replace(/&empty;/g, '∅');\n  str = str.replace(/&nabla;/g, '∇');\n  str = str.replace(/&isin;/g, '∈');\n  str = str.replace(/&notin;/g, '∉');\n  str = str.replace(/&ni;/g, '∋');\n  str = str.replace(/&prod;/g, '∏');\n  str = str.replace(/&sum;/g, '∑');\n  str = str.replace(/&minus;/g, '−');\n  str = str.replace(/&lowast;/g, '∗');\n  str = str.replace(/&radic;/g, '√');\n  str = str.replace(/&prop;/g, '∝');\n  str = str.replace(/&infin;/g, '∞');\n  str = str.replace(/&ang;/g, '∠');\n  str = str.replace(/&and;/g, '∧');\n  str = str.replace(/&or;/g, '∨');\n  str = str.replace(/&cap;/g, '∩');\n  str = str.replace(/&cup;/g, '∪');\n  str = str.replace(/&int;/g, '∫');\n  str = str.replace(/&there4;/g, '∴');\n  str = str.replace(/&sim;/g, '∼');\n  str = str.replace(/&cong;/g, '≅');\n  str = str.replace(/&asymp;/g, '≈');\n  str = str.replace(/&ne;/g, '≠');\n  str = str.replace(/&le;/g, '≤');\n  str = str.replace(/&ge;/g, '≥');\n  str = str.replace(/&sub;/g, '⊂');\n  str = str.replace(/&sup;/g, '⊃');\n  str = str.replace(/&nsub;/g, '⊄');\n  str = str.replace(/&sube;/g, '⊆');\n  str = str.replace(/&supe;/g, '⊇');\n  str = str.replace(/&oplus;/g, '⊕');\n  str = str.replace(/&otimes;/g, '⊗');\n  str = str.replace(/&perp;/g, '⊥');\n  str = str.replace(/&sdot;/g, '⋅');\n  return str;\n}\n\n// HTML 支持的希腊字母\nfunction strGreeceDiscode(str) {\n  str = str.replace(/&Alpha;/g, 'Α');\n  str = str.replace(/&Beta;/g, 'Β');\n  str = str.replace(/&Gamma;/g, 'Γ');\n  str = str.replace(/&Delta;/g, 'Δ');\n  str = str.replace(/&Epsilon;/g, 'Ε');\n  str = str.replace(/&Zeta;/g, 'Ζ');\n  str = str.replace(/&Eta;/g, 'Η');\n  str = str.replace(/&Theta;/g, 'Θ');\n  str = str.replace(/&Iota;/g, 'Ι');\n  str = str.replace(/&Kappa;/g, 'Κ');\n  str = str.replace(/&Lambda;/g, 'Λ');\n  str = str.replace(/&Mu;/g, 'Μ');\n  str = str.replace(/&Nu;/g, 'Ν');\n  str = str.replace(/&Xi;/g, 'Ν');\n  str = str.replace(/&Omicron;/g, 'Ο');\n  str = str.replace(/&Pi;/g, 'Π');\n  str = str.replace(/&Rho;/g, 'Ρ');\n  str = str.replace(/&Sigma;/g, 'Σ');\n  str = str.replace(/&Tau;/g, 'Τ');\n  str = str.replace(/&Upsilon;/g, 'Υ');\n  str = str.replace(/&Phi;/g, 'Φ');\n  str = str.replace(/&Chi;/g, 'Χ');\n  str = str.replace(/&Psi;/g, 'Ψ');\n  str = str.replace(/&Omega;/g, 'Ω');\n\n  str = str.replace(/&alpha;/g, 'α');\n  str = str.replace(/&beta;/g, 'β');\n  str = str.replace(/&gamma;/g, 'γ');\n  str = str.replace(/&delta;/g, 'δ');\n  str = str.replace(/&epsilon;/g, 'ε');\n  str = str.replace(/&zeta;/g, 'ζ');\n  str = str.replace(/&eta;/g, 'η');\n  str = str.replace(/&theta;/g, 'θ');\n  str = str.replace(/&iota;/g, 'ι');\n  str = str.replace(/&kappa;/g, 'κ');\n  str = str.replace(/&lambda;/g, 'λ');\n  str = str.replace(/&mu;/g, 'μ');\n  str = str.replace(/&nu;/g, 'ν');\n  str = str.replace(/&xi;/g, 'ξ');\n  str = str.replace(/&omicron;/g, 'ο');\n  str = str.replace(/&pi;/g, 'π');\n  str = str.replace(/&rho;/g, 'ρ');\n  str = str.replace(/&sigmaf;/g, 'ς');\n  str = str.replace(/&sigma;/g, 'σ');\n  str = str.replace(/&tau;/g, 'τ');\n  str = str.replace(/&upsilon;/g, 'υ');\n  str = str.replace(/&phi;/g, 'φ');\n  str = str.replace(/&chi;/g, 'χ');\n  str = str.replace(/&psi;/g, 'ψ');\n  str = str.replace(/&omega;/g, 'ω');\n  str = str.replace(/&thetasym;/g, 'ϑ');\n  str = str.replace(/&upsih;/g, 'ϒ');\n  str = str.replace(/&piv;/g, 'ϖ');\n  str = str.replace(/&middot;/g, '·');\n  return str;\n}\n\nfunction strcharacterDiscode(str) {\n  // 加入常用解析\n  str = str.replace(/&nbsp;/g, ' ');\n  str = str.replace(/&ensp;/g, ' ');\n  str = str.replace(/&emsp;/g, '　');\n  str = str.replace(/&quot;/g, \"'\");\n  str = str.replace(/&amp;/g, '&');\n  str = str.replace(/&lt;/g, '<');\n  str = str.replace(/&gt;/g, '>');\n  str = str.replace(/&#8226;/g, '•');\n\n  return str;\n}\n\n// HTML 支持的其他实体\nfunction strOtherDiscode(str) {\n  str = str.replace(/&OElig;/g, 'Œ');\n  str = str.replace(/&oelig;/g, 'œ');\n  str = str.replace(/&Scaron;/g, 'Š');\n  str = str.replace(/&scaron;/g, 'š');\n  str = str.replace(/&Yuml;/g, 'Ÿ');\n  str = str.replace(/&fnof;/g, 'ƒ');\n  str = str.replace(/&circ;/g, 'ˆ');\n  str = str.replace(/&tilde;/g, '˜');\n  str = str.replace(/&ensp;/g, '');\n  str = str.replace(/&emsp;/g, '');\n  str = str.replace(/&thinsp;/g, '');\n  str = str.replace(/&zwnj;/g, '');\n  str = str.replace(/&zwj;/g, '');\n  str = str.replace(/&lrm;/g, '');\n  str = str.replace(/&rlm;/g, '');\n  str = str.replace(/&ndash;/g, '–');\n  str = str.replace(/&mdash;/g, '—');\n  str = str.replace(/&lsquo;/g, '‘');\n  str = str.replace(/&rsquo;/g, '’');\n  str = str.replace(/&sbquo;/g, '‚');\n  str = str.replace(/&ldquo;/g, '“');\n  str = str.replace(/&rdquo;/g, '”');\n  str = str.replace(/&bdquo;/g, '„');\n  str = str.replace(/&dagger;/g, '†');\n  str = str.replace(/&Dagger;/g, '‡');\n  str = str.replace(/&bull;/g, '•');\n  str = str.replace(/&hellip;/g, '…');\n  str = str.replace(/&permil;/g, '‰');\n  str = str.replace(/&prime;/g, '′');\n  str = str.replace(/&Prime;/g, '″');\n  str = str.replace(/&lsaquo;/g, '‹');\n  str = str.replace(/&rsaquo;/g, '›');\n  str = str.replace(/&oline;/g, '‾');\n  str = str.replace(/&euro;/g, '€');\n  str = str.replace(/&trade;/g, '™');\n\n  str = str.replace(/&larr;/g, '←');\n  str = str.replace(/&uarr;/g, '↑');\n  str = str.replace(/&rarr;/g, '→');\n  str = str.replace(/&darr;/g, '↓');\n  str = str.replace(/&harr;/g, '↔');\n  str = str.replace(/&crarr;/g, '↵');\n  str = str.replace(/&lceil;/g, '⌈');\n  str = str.replace(/&rceil;/g, '⌉');\n\n  str = str.replace(/&lfloor;/g, '⌊');\n  str = str.replace(/&rfloor;/g, '⌋');\n  str = str.replace(/&loz;/g, '◊');\n  str = str.replace(/&spades;/g, '♠');\n  str = str.replace(/&clubs;/g, '♣');\n  str = str.replace(/&hearts;/g, '♥');\n\n  str = str.replace(/&diams;/g, '♦');\n  str = str.replace(/&#39;/g, \"'\");\n  return str;\n}\n\nfunction strDiscode(str) {\n  str = strNumDiscode(str);\n  str = strGreeceDiscode(str);\n  str = strcharacterDiscode(str);\n  str = strOtherDiscode(str);\n  return str;\n}\n\nfunction urlToHttpUrl(url, domain) {\n  if (/^\\/\\//.test(url)) {\n    return \"https:\".concat(url);\n  } else if (/^\\//.test(url)) {\n    return \"https://\".concat(domain).concat(url);\n  }\n  return url;\n}var _default =\n\n{\n  strDiscode: strDiscode,\n  urlToHttpUrl: urlToHttpUrl };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///280\n");

/***/ }),

/***/ 281:
/*!************************************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/components/uni-ui/uParse/src/libs/htmlparser.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /**\n                                                                                                      *\n                                                                                                      * htmlParser改造自: https://github.com/blowsie/Pure-JavaScript-HTML5-Parser\n                                                                                                      *\n                                                                                                      * author: Di (微信小程序开发工程师)\n                                                                                                      * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\n                                                                                                      *               垂直微信小程序开发交流社区\n                                                                                                      *\n                                                                                                      * github地址: https://github.com/icindy/wxParse\n                                                                                                      *\n                                                                                                      * for: 微信小程序富文本解析\n                                                                                                      * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\n                                                                                                      */\n// Regular Expressions for parsing tags and attributes\n\nvar startTag = /^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z0-9_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/;\nvar endTag = /^<\\/([-A-Za-z0-9_]+)[^>]*>/;\nvar attr = /([a-zA-Z0-9_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\n\nfunction makeMap(str) {\n  var obj = {};\n  var items = str.split(',');\n  for (var i = 0; i < items.length; i += 1) {obj[items[i]] = true;}\n  return obj;\n}\n\n// Empty Elements - HTML 5\nvar empty = makeMap('area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr');\n\n// Block Elements - HTML 5\nvar block = makeMap('address,code,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video');\n\n// Inline Elements - HTML 5\nvar inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var');\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');\n\n// Attributes that have their values filled in disabled=\"disabled\"\nvar fillAttrs = makeMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected');\n\nfunction HTMLParser(html, handler) {\n  var index;\n  var chars;\n  var match;\n  var last = html;\n  var stack = [];\n\n  stack.last = function () {return stack[stack.length - 1];};\n\n  function parseEndTag(tag, tagName) {\n    // If no tag name is provided, clean shop\n    var pos;\n    if (!tagName) {\n      pos = 0;\n    } else {\n      // Find the closest opened tag of the same type\n      tagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos -= 1) {\n        if (stack[pos] === tagName) break;\n      }\n    }\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i -= 1) {\n        if (handler.end) handler.end(stack[i]);\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n    }\n  }\n\n  function parseStartTag(tag, tagName, rest, unary) {\n    tagName = tagName.toLowerCase();\n\n    if (block[tagName]) {\n      while (stack.last() && inline[stack.last()]) {\n        parseEndTag('', stack.last());\n      }\n    }\n\n    if (closeSelf[tagName] && stack.last() === tagName) {\n      parseEndTag('', tagName);\n    }\n\n    unary = empty[tagName] || !!unary;\n\n    if (!unary) stack.push(tagName);\n\n    if (handler.start) {\n      var attrs = [];\n\n      rest.replace(attr, function genAttr(matches, name) {\n        var value = arguments[2] || arguments[3] || arguments[4] || (fillAttrs[name] ? name : '');\n\n        attrs.push({\n          name: name,\n          value: value,\n          escaped: value.replace(/(^|[^\\\\])\"/g, '$1\\\\\"') // \"\n        });\n      });\n\n      if (handler.start) {\n        handler.start(tagName, attrs, unary);\n      }\n    }\n  }\n\n  while (html) {\n    chars = true;\n\n    if (html.indexOf('</') === 0) {\n      match = html.match(endTag);\n\n      if (match) {\n        html = html.substring(match[0].length);\n        match[0].replace(endTag, parseEndTag);\n        chars = false;\n      }\n\n      // start tag\n    } else if (html.indexOf('<') === 0) {\n      match = html.match(startTag);\n\n      if (match) {\n        html = html.substring(match[0].length);\n        match[0].replace(startTag, parseStartTag);\n        chars = false;\n      }\n    }\n\n    if (chars) {\n      index = html.indexOf('<');\n      var text = '';\n      while (index === 0) {\n        text += '<';\n        html = html.substring(1);\n        index = html.indexOf('<');\n      }\n      text += index < 0 ? html : html.substring(0, index);\n      html = index < 0 ? '' : html.substring(index);\n\n      if (handler.chars) handler.chars(text);\n    }\n\n    if (html === last) throw new Error(\"Parse Error: \".concat(html));\n    last = html;\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n}var _default =\n\nHTMLParser;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///281\n");

/***/ }),

/***/ 3:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    {\n      if(vm.$scope && vm.$scope.is){\n        return vm.$scope.is\n      }\n    }\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.SharedObject.target) {\n    Dep.SharedObject.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if ( true && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\n// fixed by xxxxxx (nvue shared vuex)\n/* eslint-disable no-undef */\nDep.SharedObject = typeof SharedObject !== 'undefined' ? SharedObject : {};\nDep.SharedObject.target = null;\nDep.SharedObject.targetStack = [];\n\nfunction pushTarget (target) {\n  Dep.SharedObject.targetStack.push(target);\n  Dep.SharedObject.target = target;\n}\n\nfunction popTarget () {\n  Dep.SharedObject.targetStack.pop();\n  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑\n        if(value.push !== value.__proto__.push){\n          copyAugment(value, arrayMethods, arrayKeys);\n        } else {\n          protoAugment(value, arrayMethods);\n        }\n      }\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.SharedObject.target) { // fixed by xxxxxx\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if ( true && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       true && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n     true && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if ( true && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    true\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if ( true && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (true) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n       true && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (true) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page\n      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){\n        (slots['page'] || (slots['page'] = [])).push(child);\n      }else{\n        (slots.default || (slots.default = [])).push(child);\n      }\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if ( true && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n       true && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       true && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if ( true && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (true) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n     true && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if ( true &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if ( true && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if ( true && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n       true && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : undefined\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if ( true && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if ( true && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : undefined;\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n       true && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          {\n            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn\n                return\n            }\n            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警\n            if(\n                key === 'value' && \n                Array.isArray(vm.$options.behaviors) &&\n                vm.$options.behaviors.indexOf('uni://form-field') !== -1\n              ){\n              return\n            }\n            if(vm._getFormData){\n              return\n            }\n            var $parent = vm.$parent;\n            while($parent){\n              if($parent.__next_tick_pending){\n                return  \n              }\n              $parent = $parent.$parent;\n            }\n          }\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {}\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n     true && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n       true && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if ( true && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if ( true &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.SharedObject.target) {// fixed by xxxxxx\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {}\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    vm.mpHost !== 'mp-toutiao' && initInjections(vm); // resolve injections before data/props  \n    initState(vm);\n    vm.mpHost !== 'mp-toutiao' && initProvide(vm); // resolve provide after data/props\n    vm.mpHost !== 'mp-toutiao' && callHook(vm, 'created');      \n\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if ( true &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if ( true && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if ( true && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/**\n * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js\n */\nvar ARRAYTYPE = '[object Array]';\nvar OBJECTTYPE = '[object Object]';\n// const FUNCTIONTYPE = '[object Function]'\n\nfunction diff(current, pre) {\n    var result = {};\n    syncKeys(current, pre);\n    _diff(current, pre, '', result);\n    return result\n}\n\nfunction syncKeys(current, pre) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n        if(Object.keys(current).length >= Object.keys(pre).length){\n            for (var key in pre) {\n                var currentValue = current[key];\n                if (currentValue === undefined) {\n                    current[key] = null;\n                } else {\n                    syncKeys(currentValue, pre[key]);\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n        if (current.length >= pre.length) {\n            pre.forEach(function (item, index) {\n                syncKeys(current[index], item);\n            });\n        }\n    }\n}\n\nfunction _diff(current, pre, path, result) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE) {\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\n            setResult(result, path, current);\n        } else {\n            var loop = function ( key ) {\n                var currentValue = current[key];\n                var preValue = pre[key];\n                var currentType = type(currentValue);\n                var preType = type(preValue);\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n                    if (currentValue != pre[key]) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    }\n                } else if (currentType == ARRAYTYPE) {\n                    if (preType != ARRAYTYPE) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        if (currentValue.length < preValue.length) {\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                        } else {\n                            currentValue.forEach(function (item, index) {\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result);\n                            });\n                        }\n                    }\n                } else if (currentType == OBJECTTYPE) {\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        for (var subKey in currentValue) {\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result);\n                        }\n                    }\n                }\n            };\n\n            for (var key in current) loop( key );\n        }\n    } else if (rootCurrentType == ARRAYTYPE) {\n        if (rootPreType != ARRAYTYPE) {\n            setResult(result, path, current);\n        } else {\n            if (current.length < pre.length) {\n                setResult(result, path, current);\n            } else {\n                current.forEach(function (item, index) {\n                    _diff(item, pre[index], path + '[' + index + ']', result);\n                });\n            }\n        }\n    } else {\n        setResult(result, path, current);\n    }\n}\n\nfunction setResult(result, k, v) {\n    // if (type(v) != FUNCTIONTYPE) {\n        result[k] = v;\n    // }\n}\n\nfunction type(obj) {\n    return Object.prototype.toString.call(obj)\n}\n\n/*  */\r\n\r\nfunction flushCallbacks$1(vm) {\r\n    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {\r\n        if (Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n            var mpInstance = vm.$scope;\r\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\r\n                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');\r\n        }\r\n        var copies = vm.__next_tick_callbacks.slice(0);\r\n        vm.__next_tick_callbacks.length = 0;\r\n        for (var i = 0; i < copies.length; i++) {\r\n            copies[i]();\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasRenderWatcher(vm) {\r\n    return queue.find(function (watcher) { return vm._watcher === watcher; })\r\n}\r\n\r\nfunction nextTick$1(vm, cb) {\r\n    //1.nextTick 之前 已 setData 且 setData 还未回调完成\r\n    //2.nextTick 之前存在 render watcher\r\n    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {\n        if(Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\n                ']:nextVueTick');\n        }\r\n        return nextTick(cb, vm)\r\n    }else{\n        if(Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance$1 = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +\n                ']:nextMPTick');\n        }\n    }\r\n    var _resolve;\r\n    if (!vm.__next_tick_callbacks) {\r\n        vm.__next_tick_callbacks = [];\r\n    }\r\n    vm.__next_tick_callbacks.push(function () {\r\n        if (cb) {\r\n            try {\r\n                cb.call(vm);\r\n            } catch (e) {\r\n                handleError(e, vm, 'nextTick');\r\n            }\r\n        } else if (_resolve) {\r\n            _resolve(vm);\r\n        }\r\n    });\r\n    // $flow-disable-line\r\n    if (!cb && typeof Promise !== 'undefined') {\r\n        return new Promise(function (resolve) {\r\n            _resolve = resolve;\r\n        })\r\n    }\r\n}\n\n/*  */\r\n\r\nfunction cloneWithData(vm) {\r\n  // 确保当前 vm 所有数据被同步\r\n  var ret = Object.create(null);\r\n  var dataKeys = [].concat(\r\n    Object.keys(vm._data || {}),\r\n    Object.keys(vm._computedWatchers || {}));\r\n\r\n  dataKeys.reduce(function(ret, key) {\r\n    ret[key] = vm[key];\r\n    return ret\r\n  }, ret);\r\n  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据\r\n  Object.assign(ret, vm.$mp.data || {});\r\n  if (\r\n    Array.isArray(vm.$options.behaviors) &&\r\n    vm.$options.behaviors.indexOf('uni://form-field') !== -1\r\n  ) { //form-field\r\n    ret['name'] = vm.name;\r\n    ret['value'] = vm.value;\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(ret))\r\n}\r\n\r\nvar patch = function(oldVnode, vnode) {\n  var this$1 = this;\n\r\n  if (vnode === null) { //destroy\r\n    return\r\n  }\r\n  if (this.mpType === 'page' || this.mpType === 'component') {\r\n    var mpInstance = this.$scope;\r\n    var data = Object.create(null);\r\n    try {\r\n      data = cloneWithData(this);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    data.__webviewId__ = mpInstance.data.__webviewId__;\r\n    var mpData = Object.create(null);\r\n    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据\r\n      mpData[key] = mpInstance.data[key];\r\n    });\r\n    var diffData = diff(data, mpData);\r\n    if (Object.keys(diffData).length) {\r\n      if (Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +\r\n          ']差量更新',\r\n          JSON.stringify(diffData));\r\n      }\r\n      this.__next_tick_pending = true;\r\n      mpInstance.setData(diffData, function () {\r\n        this$1.__next_tick_pending = false;\r\n        flushCallbacks$1(this$1);\r\n      });\r\n    } else {\r\n      flushCallbacks$1(this);\r\n    }\r\n  }\r\n};\n\n/*  */\n\nfunction createEmptyRender() {\n\n}\n\nfunction mountComponent$1(\n  vm,\n  el,\n  hydrating\n) {\n  if (!vm.mpType) {//main.js 中的 new Vue\n    return vm\n  }\n  if (vm.mpType === 'app') {\n    vm.$options.render = createEmptyRender;\n  }\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyRender;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  \n  vm.mpHost !== 'mp-toutiao' && callHook(vm, 'beforeMount');\n\n  var updateComponent = function () {\n    vm._update(vm._render(), hydrating);\n  };\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before() {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n  return vm\n}\n\n/*  */\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/*  */\r\n\r\nvar MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];\r\n\r\nfunction getTarget(obj, path) {\r\n  var parts = path.split('.');\r\n  var key = parts[0];\r\n  if (key.indexOf('__$n') === 0) { //number index\r\n    key = parseInt(key.replace('__$n', ''));\r\n  }\r\n  if (parts.length === 1) {\r\n    return obj[key]\r\n  }\r\n  return getTarget(obj[key], parts.slice(1).join('.'))\r\n}\r\n\r\nfunction internalMixin(Vue) {\r\n\r\n  Vue.config.errorHandler = function(err) {\r\n    console.error(err);\r\n  };\r\n\r\n  var oldEmit = Vue.prototype.$emit;\r\n\r\n  Vue.prototype.$emit = function(event) {\r\n    if (this.$scope && event) {\r\n      this.$scope['triggerEvent'](event, {\r\n        __args__: toArray(arguments, 1)\r\n      });\r\n    }\r\n    return oldEmit.apply(this, arguments)\r\n  };\r\n\r\n  Vue.prototype.$nextTick = function(fn) {\r\n    return nextTick$1(this, fn)\r\n  };\r\n\r\n  MP_METHODS.forEach(function (method) {\r\n    Vue.prototype[method] = function(args) {\r\n      if (this.$scope) {\r\n        return this.$scope[method](args)\r\n      }\r\n    };\r\n  });\r\n\r\n  Vue.prototype.__init_provide = initProvide;\r\n\r\n  Vue.prototype.__init_injections = initInjections;\r\n\r\n  Vue.prototype.__call_hook = function(hook, args) {\r\n    var vm = this;\r\n    // #7573 disable dep collection when invoking lifecycle hooks\r\n    pushTarget();\r\n    var handlers = vm.$options[hook];\r\n    var info = hook + \" hook\";\r\n    var ret;\r\n    if (handlers) {\r\n      for (var i = 0, j = handlers.length; i < j; i++) {\r\n        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);\r\n      }\r\n    }\r\n    if (vm._hasHookEvent) {\r\n      vm.$emit('hook:' + hook);\r\n    }\r\n    popTarget();\r\n    return ret\r\n  };\r\n\r\n  Vue.prototype.__set_model = function(target, key, value, modifiers) {\r\n    if (Array.isArray(modifiers)) {\r\n      if (modifiers.indexOf('trim') !== -1) {\r\n        value = value.trim();\r\n      }\r\n      if (modifiers.indexOf('number') !== -1) {\r\n        value = this._n(value);\r\n      }\r\n    }\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__set_sync = function(target, key, value) {\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__get_orig = function(item) {\r\n    if (isPlainObject(item)) {\r\n      return item['$orig'] || item\r\n    }\r\n    return item\r\n  };\r\n\r\n  Vue.prototype.__get_value = function(dataPath, target) {\r\n    return getTarget(target || this, dataPath)\r\n  };\r\n\r\n\r\n  Vue.prototype.__get_class = function(dynamicClass, staticClass) {\r\n    return renderClass(staticClass, dynamicClass)\r\n  };\r\n\r\n  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {\r\n    if (!dynamicStyle && !staticStyle) {\r\n      return ''\r\n    }\r\n    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);\r\n    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;\r\n    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + \":\" + (styleObj[name])); }).join(';')\r\n  };\r\n\r\n  Vue.prototype.__map = function(val, iteratee) {\r\n    //TODO 暂不考虑 string,number\r\n    var ret, i, l, keys, key;\r\n    if (Array.isArray(val)) {\r\n      ret = new Array(val.length);\r\n      for (i = 0, l = val.length; i < l; i++) {\r\n        ret[i] = iteratee(val[i], i);\r\n      }\r\n      return ret\r\n    } else if (isObject(val)) {\r\n      keys = Object.keys(val);\r\n      ret = Object.create(null);\r\n      for (i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i];\r\n        ret[key] = iteratee(val[key], key, i);\r\n      }\r\n      return ret\r\n    }\r\n    return []\r\n  };\r\n\r\n}\n\n/*  */\r\n\r\nvar LIFECYCLE_HOOKS$1 = [\r\n    //App\r\n    'onLaunch',\r\n    'onShow',\r\n    'onHide',\r\n    'onUniNViewMessage',\n    'onError',\r\n    //Page\r\n    'onLoad',\r\n    // 'onShow',\r\n    'onReady',\r\n    // 'onHide',\r\n    'onUnload',\r\n    'onPullDownRefresh',\r\n    'onReachBottom',\r\n    'onTabItemTap',\r\n    'onShareAppMessage',\n    'onResize',\r\n    'onPageScroll',\r\n    'onNavigationBarButtonTap',\r\n    'onBackPress',\r\n    'onNavigationBarSearchInputChanged',\r\n    'onNavigationBarSearchInputConfirmed',\r\n    'onNavigationBarSearchInputClicked',\r\n    //Component\r\n    // 'onReady', // 兼容旧版本，应该移除该事件\r\n    'onPageShow',\r\n    'onPageHide',\r\n    'onPageResize'\r\n];\r\nfunction lifecycleMixin$1(Vue) {\r\n\r\n    //fixed vue-class-component\r\n    var oldExtend = Vue.extend;\r\n    Vue.extend = function(extendOptions) {\r\n        extendOptions = extendOptions || {};\r\n\r\n        var methods = extendOptions.methods;\r\n        if (methods) {\r\n            Object.keys(methods).forEach(function (methodName) {\r\n                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {\r\n                    extendOptions[methodName] = methods[methodName];\r\n                    delete methods[methodName];\r\n                }\r\n            });\r\n        }\r\n\r\n        return oldExtend.call(this, extendOptions)\r\n    };\r\n\r\n    var strategies = Vue.config.optionMergeStrategies;\r\n    var mergeHook = strategies.created;\r\n    LIFECYCLE_HOOKS$1.forEach(function (hook) {\r\n        strategies[hook] = mergeHook;\r\n    });\r\n\r\n    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;\r\n}\n\n/*  */\r\n\n// install platform patch function\r\nVue.prototype.__patch__ = patch;\r\n\r\n// public mount method\r\nVue.prototype.$mount = function(\r\n    el ,\r\n    hydrating \r\n) {\r\n    return mountComponent$1(this, el, hydrating)\r\n};\r\n\r\nlifecycleMixin$1(Vue);\r\ninternalMixin(Vue);\n\n/*  */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

/***/ 362:
/*!*****************************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/components/uni-ui/uni-swipe-action/mp.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = {\n  data: function data() {\n    return {\n      position: [],\n      button: [] };\n\n  },\n  computed: {\n    pos: function pos() {\n      return JSON.stringify(this.position);\n    },\n    btn: function btn() {\n      return JSON.stringify(this.button);\n    } },\n\n  watch: {\n    show: function show(newVal) {\n      if (this.autoClose) return;\n      var valueObj = this.position[0];\n      if (!valueObj) return;\n      valueObj.show = newVal;\n      this.$set(this.position, 0, valueObj);\n    } },\n\n  mounted: function mounted() {var _this = this;\n    this.init();\n    setTimeout(function () {\n      _this.getSize();\n      _this.getButtonSize();\n    }, 50);\n\n  },\n  methods: {\n    init: function init() {var _this2 = this;\n      uni.$on('__uni__swipe__event', function (res) {\n        if (res !== _this2 && _this2.autoClose) {\n          var valueObj = _this2.position[0];\n          valueObj.show = false;\n          _this2.$set(_this2.position, 0, valueObj);\n        }\n      });\n    },\n    openSwipe: function openSwipe() {\n      uni.$emit('__uni__swipe__event', this);\n    },\n    change: function change(e) {\n      this.$emit('change', e.open);\n      var valueObj = this.position[0];\n      valueObj.show = e.open;\n      this.$set(this.position, 0, valueObj);\n      // console.log('改变', e);\n    },\n    onClick: function onClick(index, item) {\n      this.$emit('click', {\n        content: item,\n        index: index });\n\n    },\n    getSize: function getSize() {var _this3 = this;\n      var views = uni.createSelectorQuery().in(this);\n      views.\n      selectAll('.selector-query-hock').\n      boundingClientRect(function (data) {\n        if (_this3.autoClose) {\n          data[0].show = false;\n        } else {\n          data[0].show = _this3.show;\n        }\n        _this3.position = data;\n      }).\n      exec();\n    },\n    getButtonSize: function getButtonSize() {var _this4 = this;\n      var views = uni.createSelectorQuery().in(this);\n      views.\n      selectAll('.button-hock').\n      boundingClientRect(function (data) {\n        _this4.button = data;\n      }).\n      exec();\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy91bmktdWkvdW5pLXN3aXBlLWFjdGlvbi9tcC5qcyJdLCJuYW1lcyI6WyJkYXRhIiwicG9zaXRpb24iLCJidXR0b24iLCJjb21wdXRlZCIsInBvcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJidG4iLCJ3YXRjaCIsInNob3ciLCJuZXdWYWwiLCJhdXRvQ2xvc2UiLCJ2YWx1ZU9iaiIsIiRzZXQiLCJtb3VudGVkIiwiaW5pdCIsInNldFRpbWVvdXQiLCJnZXRTaXplIiwiZ2V0QnV0dG9uU2l6ZSIsIm1ldGhvZHMiLCJ1bmkiLCIkb24iLCJyZXMiLCJvcGVuU3dpcGUiLCIkZW1pdCIsImNoYW5nZSIsImUiLCJvcGVuIiwib25DbGljayIsImluZGV4IiwiaXRlbSIsImNvbnRlbnQiLCJ2aWV3cyIsImNyZWF0ZVNlbGVjdG9yUXVlcnkiLCJpbiIsInNlbGVjdEFsbCIsImJvdW5kaW5nQ2xpZW50UmVjdCIsImV4ZWMiXSwibWFwcGluZ3MiOiJpSkFBZTtBQUNkQSxNQURjLGtCQUNQO0FBQ04sV0FBTztBQUNOQyxjQUFRLEVBQUUsRUFESjtBQUVOQyxZQUFNLEVBQUUsRUFGRixFQUFQOztBQUlBLEdBTmE7QUFPZEMsVUFBUSxFQUFFO0FBQ1RDLE9BRFMsaUJBQ0g7QUFDTCxhQUFPQyxJQUFJLENBQUNDLFNBQUwsQ0FBZSxLQUFLTCxRQUFwQixDQUFQO0FBQ0EsS0FIUTtBQUlUTSxPQUpTLGlCQUlIO0FBQ0wsYUFBT0YsSUFBSSxDQUFDQyxTQUFMLENBQWUsS0FBS0osTUFBcEIsQ0FBUDtBQUNBLEtBTlEsRUFQSTs7QUFlZE0sT0FBSyxFQUFFO0FBQ05DLFFBRE0sZ0JBQ0RDLE1BREMsRUFDTztBQUNaLFVBQUksS0FBS0MsU0FBVCxFQUFvQjtBQUNwQixVQUFJQyxRQUFRLEdBQUcsS0FBS1gsUUFBTCxDQUFjLENBQWQsQ0FBZjtBQUNBLFVBQUksQ0FBQ1csUUFBTCxFQUFlO0FBQ2ZBLGNBQVEsQ0FBQ0gsSUFBVCxHQUFnQkMsTUFBaEI7QUFDQSxXQUFLRyxJQUFMLENBQVUsS0FBS1osUUFBZixFQUF5QixDQUF6QixFQUE0QlcsUUFBNUI7QUFDQSxLQVBLLEVBZk87O0FBd0JkRSxTQXhCYyxxQkF3Qko7QUFDVCxTQUFLQyxJQUFMO0FBQ0FDLGNBQVUsQ0FBQyxZQUFJO0FBQ2QsV0FBSSxDQUFDQyxPQUFMO0FBQ0EsV0FBSSxDQUFDQyxhQUFMO0FBQ0EsS0FIUyxFQUdSLEVBSFEsQ0FBVjs7QUFLQSxHQS9CYTtBQWdDZEMsU0FBTyxFQUFFO0FBQ1JKLFFBRFEsa0JBQ0Q7QUFDTkssU0FBRyxDQUFDQyxHQUFKLENBQVEscUJBQVIsRUFBK0IsVUFBQ0MsR0FBRCxFQUFTO0FBQ3ZDLFlBQUlBLEdBQUcsS0FBSyxNQUFSLElBQWdCLE1BQUksQ0FBQ1gsU0FBekIsRUFBb0M7QUFDbkMsY0FBSUMsUUFBUSxHQUFHLE1BQUksQ0FBQ1gsUUFBTCxDQUFjLENBQWQsQ0FBZjtBQUNBVyxrQkFBUSxDQUFDSCxJQUFULEdBQWdCLEtBQWhCO0FBQ0EsZ0JBQUksQ0FBQ0ksSUFBTCxDQUFVLE1BQUksQ0FBQ1osUUFBZixFQUF5QixDQUF6QixFQUE0QlcsUUFBNUI7QUFDQTtBQUNELE9BTkQ7QUFPQSxLQVRPO0FBVVJXLGFBVlEsdUJBVUk7QUFDWEgsU0FBRyxDQUFDSSxLQUFKLENBQVUscUJBQVYsRUFBaUMsSUFBakM7QUFDQSxLQVpPO0FBYVJDLFVBYlEsa0JBYURDLENBYkMsRUFhRTtBQUNULFdBQUtGLEtBQUwsQ0FBVyxRQUFYLEVBQXFCRSxDQUFDLENBQUNDLElBQXZCO0FBQ0EsVUFBSWYsUUFBUSxHQUFHLEtBQUtYLFFBQUwsQ0FBYyxDQUFkLENBQWY7QUFDQVcsY0FBUSxDQUFDSCxJQUFULEdBQWdCaUIsQ0FBQyxDQUFDQyxJQUFsQjtBQUNBLFdBQUtkLElBQUwsQ0FBVSxLQUFLWixRQUFmLEVBQXlCLENBQXpCLEVBQTRCVyxRQUE1QjtBQUNBO0FBQ0EsS0FuQk87QUFvQlJnQixXQXBCUSxtQkFvQkFDLEtBcEJBLEVBb0JPQyxJQXBCUCxFQW9CYTtBQUNwQixXQUFLTixLQUFMLENBQVcsT0FBWCxFQUFvQjtBQUNuQk8sZUFBTyxFQUFFRCxJQURVO0FBRW5CRCxhQUFLLEVBQUxBLEtBRm1CLEVBQXBCOztBQUlBLEtBekJPO0FBMEJSWixXQTFCUSxxQkEwQkU7QUFDVCxVQUFNZSxLQUFLLEdBQUdaLEdBQUcsQ0FBQ2EsbUJBQUosR0FBMEJDLEVBQTFCLENBQTZCLElBQTdCLENBQWQ7QUFDQUYsV0FBSztBQUNIRyxlQURGLENBQ1ksc0JBRFo7QUFFRUMsd0JBRkYsQ0FFcUIsVUFBQXBDLElBQUksRUFBSTtBQUMzQixZQUFJLE1BQUksQ0FBQ1csU0FBVCxFQUFvQjtBQUNuQlgsY0FBSSxDQUFDLENBQUQsQ0FBSixDQUFRUyxJQUFSLEdBQWUsS0FBZjtBQUNBLFNBRkQsTUFFTztBQUNOVCxjQUFJLENBQUMsQ0FBRCxDQUFKLENBQVFTLElBQVIsR0FBZSxNQUFJLENBQUNBLElBQXBCO0FBQ0E7QUFDRCxjQUFJLENBQUNSLFFBQUwsR0FBZ0JELElBQWhCO0FBQ0EsT0FURjtBQVVFcUMsVUFWRjtBQVdBLEtBdkNPO0FBd0NSbkIsaUJBeENRLDJCQXdDUTtBQUNmLFVBQU1jLEtBQUssR0FBR1osR0FBRyxDQUFDYSxtQkFBSixHQUEwQkMsRUFBMUIsQ0FBNkIsSUFBN0IsQ0FBZDtBQUNBRixXQUFLO0FBQ0hHLGVBREYsQ0FDWSxjQURaO0FBRUVDLHdCQUZGLENBRXFCLFVBQUFwQyxJQUFJLEVBQUk7QUFDM0IsY0FBSSxDQUFDRSxNQUFMLEdBQWNGLElBQWQ7QUFDQSxPQUpGO0FBS0VxQyxVQUxGO0FBTUEsS0FoRE8sRUFoQ0ssRSIsImZpbGUiOiIzNjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XHJcblx0ZGF0YSgpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHBvc2l0aW9uOiBbXSxcclxuXHRcdFx0YnV0dG9uOiBbXVxyXG5cdFx0fVxyXG5cdH0sXHJcblx0Y29tcHV0ZWQ6IHtcclxuXHRcdHBvcygpIHtcclxuXHRcdFx0cmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMucG9zaXRpb24pXHJcblx0XHR9LFxyXG5cdFx0YnRuKCkge1xyXG5cdFx0XHRyZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5idXR0b24pXHJcblx0XHR9XHJcblx0fSxcclxuXHR3YXRjaDoge1xyXG5cdFx0c2hvdyhuZXdWYWwpIHtcclxuXHRcdFx0aWYgKHRoaXMuYXV0b0Nsb3NlKSByZXR1cm5cclxuXHRcdFx0bGV0IHZhbHVlT2JqID0gdGhpcy5wb3NpdGlvblswXVxyXG5cdFx0XHRpZiAoIXZhbHVlT2JqKSByZXR1cm5cclxuXHRcdFx0dmFsdWVPYmouc2hvdyA9IG5ld1ZhbFxyXG5cdFx0XHR0aGlzLiRzZXQodGhpcy5wb3NpdGlvbiwgMCwgdmFsdWVPYmopXHJcblx0XHR9XHJcblx0fSxcclxuXHRtb3VudGVkKCkge1xyXG5cdFx0dGhpcy5pbml0KClcclxuXHRcdHNldFRpbWVvdXQoKCk9PntcclxuXHRcdFx0dGhpcy5nZXRTaXplKClcclxuXHRcdFx0dGhpcy5nZXRCdXR0b25TaXplKClcclxuXHRcdH0sNTApXHJcblx0XHJcblx0fSxcclxuXHRtZXRob2RzOiB7XHJcblx0XHRpbml0KCkge1xyXG5cdFx0XHR1bmkuJG9uKCdfX3VuaV9fc3dpcGVfX2V2ZW50JywgKHJlcykgPT4ge1xyXG5cdFx0XHRcdGlmIChyZXMgIT09IHRoaXMgJiYgdGhpcy5hdXRvQ2xvc2UpIHtcclxuXHRcdFx0XHRcdGxldCB2YWx1ZU9iaiA9IHRoaXMucG9zaXRpb25bMF1cclxuXHRcdFx0XHRcdHZhbHVlT2JqLnNob3cgPSBmYWxzZVxyXG5cdFx0XHRcdFx0dGhpcy4kc2V0KHRoaXMucG9zaXRpb24sIDAsIHZhbHVlT2JqKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSlcclxuXHRcdH0sXHJcblx0XHRvcGVuU3dpcGUoKSB7XHJcblx0XHRcdHVuaS4kZW1pdCgnX191bmlfX3N3aXBlX19ldmVudCcsIHRoaXMpXHJcblx0XHR9LFxyXG5cdFx0Y2hhbmdlKGUpIHtcclxuXHRcdFx0dGhpcy4kZW1pdCgnY2hhbmdlJywgZS5vcGVuKVxyXG5cdFx0XHRsZXQgdmFsdWVPYmogPSB0aGlzLnBvc2l0aW9uWzBdXHJcblx0XHRcdHZhbHVlT2JqLnNob3cgPSBlLm9wZW5cclxuXHRcdFx0dGhpcy4kc2V0KHRoaXMucG9zaXRpb24sIDAsIHZhbHVlT2JqKVxyXG5cdFx0XHQvLyBjb25zb2xlLmxvZygn5pS55Y+YJywgZSk7XHJcblx0XHR9LFxyXG5cdFx0b25DbGljayhpbmRleCwgaXRlbSkge1xyXG5cdFx0XHR0aGlzLiRlbWl0KCdjbGljaycsIHtcclxuXHRcdFx0XHRjb250ZW50OiBpdGVtLFxyXG5cdFx0XHRcdGluZGV4XHJcblx0XHRcdH0pXHJcblx0XHR9LFxyXG5cdFx0Z2V0U2l6ZSgpIHtcclxuXHRcdFx0Y29uc3Qgdmlld3MgPSB1bmkuY3JlYXRlU2VsZWN0b3JRdWVyeSgpLmluKHRoaXMpXHJcblx0XHRcdHZpZXdzXHJcblx0XHRcdFx0LnNlbGVjdEFsbCgnLnNlbGVjdG9yLXF1ZXJ5LWhvY2snKVxyXG5cdFx0XHRcdC5ib3VuZGluZ0NsaWVudFJlY3QoZGF0YSA9PiB7XHJcblx0XHRcdFx0XHRpZiAodGhpcy5hdXRvQ2xvc2UpIHtcclxuXHRcdFx0XHRcdFx0ZGF0YVswXS5zaG93ID0gZmFsc2VcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdGRhdGFbMF0uc2hvdyA9IHRoaXMuc2hvd1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0dGhpcy5wb3NpdGlvbiA9IGRhdGFcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHRcdC5leGVjKClcclxuXHRcdH0sXHJcblx0XHRnZXRCdXR0b25TaXplKCkge1xyXG5cdFx0XHRjb25zdCB2aWV3cyA9IHVuaS5jcmVhdGVTZWxlY3RvclF1ZXJ5KCkuaW4odGhpcylcclxuXHRcdFx0dmlld3NcclxuXHRcdFx0XHQuc2VsZWN0QWxsKCcuYnV0dG9uLWhvY2snKVxyXG5cdFx0XHRcdC5ib3VuZGluZ0NsaWVudFJlY3QoZGF0YSA9PiB7XHJcblx0XHRcdFx0XHR0aGlzLmJ1dHRvbiA9IGRhdGFcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHRcdC5leGVjKClcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///362\n");

/***/ }),

/***/ 372:
/*!*********************************************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/components/uni-ui/mpvue-citypicker/city-data/province.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar provinceData = [{\n  \"label\": \"北京市\",\n  \"value\": \"11\" },\n\n{\n  \"label\": \"天津市\",\n  \"value\": \"12\" },\n\n{\n  \"label\": \"河北省\",\n  \"value\": \"13\" },\n\n{\n  \"label\": \"山西省\",\n  \"value\": \"14\" },\n\n{\n  \"label\": \"内蒙古自治区\",\n  \"value\": \"15\" },\n\n{\n  \"label\": \"辽宁省\",\n  \"value\": \"21\" },\n\n{\n  \"label\": \"吉林省\",\n  \"value\": \"22\" },\n\n{\n  \"label\": \"黑龙江省\",\n  \"value\": \"23\" },\n\n{\n  \"label\": \"上海市\",\n  \"value\": \"31\" },\n\n{\n  \"label\": \"江苏省\",\n  \"value\": \"32\" },\n\n{\n  \"label\": \"浙江省\",\n  \"value\": \"33\" },\n\n{\n  \"label\": \"安徽省\",\n  \"value\": \"34\" },\n\n{\n  \"label\": \"福建省\",\n  \"value\": \"35\" },\n\n{\n  \"label\": \"江西省\",\n  \"value\": \"36\" },\n\n{\n  \"label\": \"山东省\",\n  \"value\": \"37\" },\n\n{\n  \"label\": \"河南省\",\n  \"value\": \"41\" },\n\n{\n  \"label\": \"湖北省\",\n  \"value\": \"42\" },\n\n{\n  \"label\": \"湖南省\",\n  \"value\": \"43\" },\n\n{\n  \"label\": \"广东省\",\n  \"value\": \"44\" },\n\n{\n  \"label\": \"广西壮族自治区\",\n  \"value\": \"45\" },\n\n{\n  \"label\": \"海南省\",\n  \"value\": \"46\" },\n\n{\n  \"label\": \"重庆市\",\n  \"value\": \"50\" },\n\n{\n  \"label\": \"四川省\",\n  \"value\": \"51\" },\n\n{\n  \"label\": \"贵州省\",\n  \"value\": \"52\" },\n\n{\n  \"label\": \"云南省\",\n  \"value\": \"53\" },\n\n{\n  \"label\": \"西藏自治区\",\n  \"value\": \"54\" },\n\n{\n  \"label\": \"陕西省\",\n  \"value\": \"61\" },\n\n{\n  \"label\": \"甘肃省\",\n  \"value\": \"62\" },\n\n{\n  \"label\": \"青海省\",\n  \"value\": \"63\" },\n\n{\n  \"label\": \"宁夏回族自治区\",\n  \"value\": \"64\" },\n\n{\n  \"label\": \"新疆维吾尔自治区\",\n  \"value\": \"65\" },\n\n{\n  \"label\": \"台湾\",\n  \"value\": \"66\" },\n\n{\n  \"label\": \"香港\",\n  \"value\": \"67\" },\n\n{\n  \"label\": \"澳门\",\n  \"value\": \"68\" }];var _default =\n\n\nprovinceData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy91bmktdWkvbXB2dWUtY2l0eXBpY2tlci9jaXR5LWRhdGEvcHJvdmluY2UuanMiXSwibmFtZXMiOlsicHJvdmluY2VEYXRhIl0sIm1hcHBpbmdzIjoid0ZBQUE7QUFDQSxJQUFJQSxZQUFZLEdBQUcsQ0FBQztBQUNoQixXQUFTLEtBRE87QUFFaEIsV0FBUyxJQUZPLEVBQUQ7O0FBSWpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBSmlCOztBQVFqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQVJpQjs7QUFZakI7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLElBRlgsRUFaaUI7O0FBZ0JqQjtBQUNFLFdBQVMsUUFEWDtBQUVFLFdBQVMsSUFGWCxFQWhCaUI7O0FBb0JqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBCaUI7O0FBd0JqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhCaUI7O0FBNEJqQjtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsSUFGWCxFQTVCaUI7O0FBZ0NqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhDaUI7O0FBb0NqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBDaUI7O0FBd0NqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhDaUI7O0FBNENqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVDaUI7O0FBZ0RqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhEaUI7O0FBb0RqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBEaUI7O0FBd0RqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhEaUI7O0FBNERqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVEaUI7O0FBZ0VqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhFaUI7O0FBb0VqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBFaUI7O0FBd0VqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhFaUI7O0FBNEVqQjtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVFaUI7O0FBZ0ZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhGaUI7O0FBb0ZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBGaUI7O0FBd0ZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhGaUI7O0FBNEZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVGaUI7O0FBZ0dqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhHaUI7O0FBb0dqQjtBQUNFLFdBQVMsT0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBHaUI7O0FBd0dqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhHaUI7O0FBNEdqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVHaUI7O0FBZ0hqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhIaUI7O0FBb0hqQjtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBIaUI7O0FBd0hqQjtBQUNFLFdBQVMsVUFEWDtBQUVFLFdBQVMsSUFGWCxFQXhIaUI7O0FBNEhqQjtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsSUFGWCxFQTVIaUI7O0FBZ0lqQjtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsSUFGWCxFQWhJaUI7O0FBb0lqQjtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsSUFGWCxFQXBJaUIsQ0FBbkIsQzs7O0FBeUllQSxZIiwiZmlsZSI6IjM3Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgcHJvdmluY2VEYXRhID0gW3tcbiAgICBcImxhYmVsXCI6IFwi5YyX5Lqs5biCXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjExXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlpKnmtKXluIJcIixcbiAgICBcInZhbHVlXCI6IFwiMTJcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuays+WMl+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCIxM1wiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5bGx6KW/55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjE0XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlhoXokpnlj6Toh6rmsrvljLpcIixcbiAgICBcInZhbHVlXCI6IFwiMTVcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIui+veWugeecgVwiLFxuICAgIFwidmFsdWVcIjogXCIyMVwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5ZCJ5p6X55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjIyXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLpu5HpvpnmsZ/nnIFcIixcbiAgICBcInZhbHVlXCI6IFwiMjNcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuS4iua1t+W4glwiLFxuICAgIFwidmFsdWVcIjogXCIzMVwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5rGf6IuP55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjMyXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLmtZnmsZ/nnIFcIixcbiAgICBcInZhbHVlXCI6IFwiMzNcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuWuieW+veecgVwiLFxuICAgIFwidmFsdWVcIjogXCIzNFwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi56aP5bu655yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjM1XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLmsZ/opb/nnIFcIixcbiAgICBcInZhbHVlXCI6IFwiMzZcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuWxseS4nOecgVwiLFxuICAgIFwidmFsdWVcIjogXCIzN1wiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5rKz5Y2X55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjQxXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLmuZbljJfnnIFcIixcbiAgICBcInZhbHVlXCI6IFwiNDJcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIua5luWNl+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCI0M1wiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5bm/5Lic55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjQ0XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlub/opb/lo67ml4/oh6rmsrvljLpcIixcbiAgICBcInZhbHVlXCI6IFwiNDVcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIua1t+WNl+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCI0NlwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi6YeN5bqG5biCXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjUwXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlm5vlt53nnIFcIixcbiAgICBcInZhbHVlXCI6IFwiNTFcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIui0teW3nuecgVwiLFxuICAgIFwidmFsdWVcIjogXCI1MlwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5LqR5Y2X55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjUzXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLopb/ol4/oh6rmsrvljLpcIixcbiAgICBcInZhbHVlXCI6IFwiNTRcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIumZleilv+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCI2MVwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi55SY6IKD55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjYyXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLpnZLmtbfnnIFcIixcbiAgICBcInZhbHVlXCI6IFwiNjNcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuWugeWkj+WbnuaXj+iHquayu+WMulwiLFxuICAgIFwidmFsdWVcIjogXCI2NFwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5paw55aG57u05ZC+5bCU6Ieq5rK75Yy6XCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjY1XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlj7Dmub5cIixcbiAgICBcInZhbHVlXCI6IFwiNjZcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIummmea4r1wiLFxuICAgIFwidmFsdWVcIjogXCI2N1wiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5r6z6ZeoXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjY4XCJcbiAgfVxuXVxuZXhwb3J0IGRlZmF1bHQgcHJvdmluY2VEYXRhO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///372\n");

/***/ }),

/***/ 373:
/*!*****************************************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/components/uni-ui/mpvue-citypicker/city-data/city.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar cityData = [\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"1101\" }],\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"1201\" }],\n\n[{\n  \"label\": \"石家庄市\",\n  \"value\": \"1301\" },\n\n{\n  \"label\": \"唐山市\",\n  \"value\": \"1302\" },\n\n{\n  \"label\": \"秦皇岛市\",\n  \"value\": \"1303\" },\n\n{\n  \"label\": \"邯郸市\",\n  \"value\": \"1304\" },\n\n{\n  \"label\": \"邢台市\",\n  \"value\": \"1305\" },\n\n{\n  \"label\": \"保定市\",\n  \"value\": \"1306\" },\n\n{\n  \"label\": \"张家口市\",\n  \"value\": \"1307\" },\n\n{\n  \"label\": \"承德市\",\n  \"value\": \"1308\" },\n\n{\n  \"label\": \"沧州市\",\n  \"value\": \"1309\" },\n\n{\n  \"label\": \"廊坊市\",\n  \"value\": \"1310\" },\n\n{\n  \"label\": \"衡水市\",\n  \"value\": \"1311\" }],\n\n\n[{\n  \"label\": \"太原市\",\n  \"value\": \"1401\" },\n\n{\n  \"label\": \"大同市\",\n  \"value\": \"1402\" },\n\n{\n  \"label\": \"阳泉市\",\n  \"value\": \"1403\" },\n\n{\n  \"label\": \"长治市\",\n  \"value\": \"1404\" },\n\n{\n  \"label\": \"晋城市\",\n  \"value\": \"1405\" },\n\n{\n  \"label\": \"朔州市\",\n  \"value\": \"1406\" },\n\n{\n  \"label\": \"晋中市\",\n  \"value\": \"1407\" },\n\n{\n  \"label\": \"运城市\",\n  \"value\": \"1408\" },\n\n{\n  \"label\": \"忻州市\",\n  \"value\": \"1409\" },\n\n{\n  \"label\": \"临汾市\",\n  \"value\": \"1410\" },\n\n{\n  \"label\": \"吕梁市\",\n  \"value\": \"1411\" }],\n\n\n[{\n  \"label\": \"呼和浩特市\",\n  \"value\": \"1501\" },\n\n{\n  \"label\": \"包头市\",\n  \"value\": \"1502\" },\n\n{\n  \"label\": \"乌海市\",\n  \"value\": \"1503\" },\n\n{\n  \"label\": \"赤峰市\",\n  \"value\": \"1504\" },\n\n{\n  \"label\": \"通辽市\",\n  \"value\": \"1505\" },\n\n{\n  \"label\": \"鄂尔多斯市\",\n  \"value\": \"1506\" },\n\n{\n  \"label\": \"呼伦贝尔市\",\n  \"value\": \"1507\" },\n\n{\n  \"label\": \"巴彦淖尔市\",\n  \"value\": \"1508\" },\n\n{\n  \"label\": \"乌兰察布市\",\n  \"value\": \"1509\" },\n\n{\n  \"label\": \"兴安盟\",\n  \"value\": \"1522\" },\n\n{\n  \"label\": \"锡林郭勒盟\",\n  \"value\": \"1525\" },\n\n{\n  \"label\": \"阿拉善盟\",\n  \"value\": \"1529\" }],\n\n\n[{\n  \"label\": \"沈阳市\",\n  \"value\": \"2101\" },\n\n{\n  \"label\": \"大连市\",\n  \"value\": \"2102\" },\n\n{\n  \"label\": \"鞍山市\",\n  \"value\": \"2103\" },\n\n{\n  \"label\": \"抚顺市\",\n  \"value\": \"2104\" },\n\n{\n  \"label\": \"本溪市\",\n  \"value\": \"2105\" },\n\n{\n  \"label\": \"丹东市\",\n  \"value\": \"2106\" },\n\n{\n  \"label\": \"锦州市\",\n  \"value\": \"2107\" },\n\n{\n  \"label\": \"营口市\",\n  \"value\": \"2108\" },\n\n{\n  \"label\": \"阜新市\",\n  \"value\": \"2109\" },\n\n{\n  \"label\": \"辽阳市\",\n  \"value\": \"2110\" },\n\n{\n  \"label\": \"盘锦市\",\n  \"value\": \"2111\" },\n\n{\n  \"label\": \"铁岭市\",\n  \"value\": \"2112\" },\n\n{\n  \"label\": \"朝阳市\",\n  \"value\": \"2113\" },\n\n{\n  \"label\": \"葫芦岛市\",\n  \"value\": \"2114\" }],\n\n\n[{\n  \"label\": \"长春市\",\n  \"value\": \"2201\" },\n\n{\n  \"label\": \"吉林市\",\n  \"value\": \"2202\" },\n\n{\n  \"label\": \"四平市\",\n  \"value\": \"2203\" },\n\n{\n  \"label\": \"辽源市\",\n  \"value\": \"2204\" },\n\n{\n  \"label\": \"通化市\",\n  \"value\": \"2205\" },\n\n{\n  \"label\": \"白山市\",\n  \"value\": \"2206\" },\n\n{\n  \"label\": \"松原市\",\n  \"value\": \"2207\" },\n\n{\n  \"label\": \"白城市\",\n  \"value\": \"2208\" },\n\n{\n  \"label\": \"延边朝鲜族自治州\",\n  \"value\": \"2224\" }],\n\n\n[{\n  \"label\": \"哈尔滨市\",\n  \"value\": \"2301\" },\n\n{\n  \"label\": \"齐齐哈尔市\",\n  \"value\": \"2302\" },\n\n{\n  \"label\": \"鸡西市\",\n  \"value\": \"2303\" },\n\n{\n  \"label\": \"鹤岗市\",\n  \"value\": \"2304\" },\n\n{\n  \"label\": \"双鸭山市\",\n  \"value\": \"2305\" },\n\n{\n  \"label\": \"大庆市\",\n  \"value\": \"2306\" },\n\n{\n  \"label\": \"伊春市\",\n  \"value\": \"2307\" },\n\n{\n  \"label\": \"佳木斯市\",\n  \"value\": \"2308\" },\n\n{\n  \"label\": \"七台河市\",\n  \"value\": \"2309\" },\n\n{\n  \"label\": \"牡丹江市\",\n  \"value\": \"2310\" },\n\n{\n  \"label\": \"黑河市\",\n  \"value\": \"2311\" },\n\n{\n  \"label\": \"绥化市\",\n  \"value\": \"2312\" },\n\n{\n  \"label\": \"大兴安岭地区\",\n  \"value\": \"2327\" }],\n\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"3101\" }],\n\n[{\n  \"label\": \"南京市\",\n  \"value\": \"3201\" },\n\n{\n  \"label\": \"无锡市\",\n  \"value\": \"3202\" },\n\n{\n  \"label\": \"徐州市\",\n  \"value\": \"3203\" },\n\n{\n  \"label\": \"常州市\",\n  \"value\": \"3204\" },\n\n{\n  \"label\": \"苏州市\",\n  \"value\": \"3205\" },\n\n{\n  \"label\": \"南通市\",\n  \"value\": \"3206\" },\n\n{\n  \"label\": \"连云港市\",\n  \"value\": \"3207\" },\n\n{\n  \"label\": \"淮安市\",\n  \"value\": \"3208\" },\n\n{\n  \"label\": \"盐城市\",\n  \"value\": \"3209\" },\n\n{\n  \"label\": \"扬州市\",\n  \"value\": \"3210\" },\n\n{\n  \"label\": \"镇江市\",\n  \"value\": \"3211\" },\n\n{\n  \"label\": \"泰州市\",\n  \"value\": \"3212\" },\n\n{\n  \"label\": \"宿迁市\",\n  \"value\": \"3213\" }],\n\n\n[{\n  \"label\": \"杭州市\",\n  \"value\": \"3301\" },\n\n{\n  \"label\": \"宁波市\",\n  \"value\": \"3302\" },\n\n{\n  \"label\": \"温州市\",\n  \"value\": \"3303\" },\n\n{\n  \"label\": \"嘉兴市\",\n  \"value\": \"3304\" },\n\n{\n  \"label\": \"湖州市\",\n  \"value\": \"3305\" },\n\n{\n  \"label\": \"绍兴市\",\n  \"value\": \"3306\" },\n\n{\n  \"label\": \"金华市\",\n  \"value\": \"3307\" },\n\n{\n  \"label\": \"衢州市\",\n  \"value\": \"3308\" },\n\n{\n  \"label\": \"舟山市\",\n  \"value\": \"3309\" },\n\n{\n  \"label\": \"台州市\",\n  \"value\": \"3310\" },\n\n{\n  \"label\": \"丽水市\",\n  \"value\": \"3311\" }],\n\n\n[{\n  \"label\": \"合肥市\",\n  \"value\": \"3401\" },\n\n{\n  \"label\": \"芜湖市\",\n  \"value\": \"3402\" },\n\n{\n  \"label\": \"蚌埠市\",\n  \"value\": \"3403\" },\n\n{\n  \"label\": \"淮南市\",\n  \"value\": \"3404\" },\n\n{\n  \"label\": \"马鞍山市\",\n  \"value\": \"3405\" },\n\n{\n  \"label\": \"淮北市\",\n  \"value\": \"3406\" },\n\n{\n  \"label\": \"铜陵市\",\n  \"value\": \"3407\" },\n\n{\n  \"label\": \"安庆市\",\n  \"value\": \"3408\" },\n\n{\n  \"label\": \"黄山市\",\n  \"value\": \"3410\" },\n\n{\n  \"label\": \"滁州市\",\n  \"value\": \"3411\" },\n\n{\n  \"label\": \"阜阳市\",\n  \"value\": \"3412\" },\n\n{\n  \"label\": \"宿州市\",\n  \"value\": \"3413\" },\n\n{\n  \"label\": \"六安市\",\n  \"value\": \"3415\" },\n\n{\n  \"label\": \"亳州市\",\n  \"value\": \"3416\" },\n\n{\n  \"label\": \"池州市\",\n  \"value\": \"3417\" },\n\n{\n  \"label\": \"宣城市\",\n  \"value\": \"3418\" }],\n\n\n[{\n  \"label\": \"福州市\",\n  \"value\": \"3501\" },\n\n{\n  \"label\": \"厦门市\",\n  \"value\": \"3502\" },\n\n{\n  \"label\": \"莆田市\",\n  \"value\": \"3503\" },\n\n{\n  \"label\": \"三明市\",\n  \"value\": \"3504\" },\n\n{\n  \"label\": \"泉州市\",\n  \"value\": \"3505\" },\n\n{\n  \"label\": \"漳州市\",\n  \"value\": \"3506\" },\n\n{\n  \"label\": \"南平市\",\n  \"value\": \"3507\" },\n\n{\n  \"label\": \"龙岩市\",\n  \"value\": \"3508\" },\n\n{\n  \"label\": \"宁德市\",\n  \"value\": \"3509\" }],\n\n\n[{\n  \"label\": \"南昌市\",\n  \"value\": \"3601\" },\n\n{\n  \"label\": \"景德镇市\",\n  \"value\": \"3602\" },\n\n{\n  \"label\": \"萍乡市\",\n  \"value\": \"3603\" },\n\n{\n  \"label\": \"九江市\",\n  \"value\": \"3604\" },\n\n{\n  \"label\": \"新余市\",\n  \"value\": \"3605\" },\n\n{\n  \"label\": \"鹰潭市\",\n  \"value\": \"3606\" },\n\n{\n  \"label\": \"赣州市\",\n  \"value\": \"3607\" },\n\n{\n  \"label\": \"吉安市\",\n  \"value\": \"3608\" },\n\n{\n  \"label\": \"宜春市\",\n  \"value\": \"3609\" },\n\n{\n  \"label\": \"抚州市\",\n  \"value\": \"3610\" },\n\n{\n  \"label\": \"上饶市\",\n  \"value\": \"3611\" }],\n\n\n[{\n  \"label\": \"济南市\",\n  \"value\": \"3701\" },\n\n{\n  \"label\": \"青岛市\",\n  \"value\": \"3702\" },\n\n{\n  \"label\": \"淄博市\",\n  \"value\": \"3703\" },\n\n{\n  \"label\": \"枣庄市\",\n  \"value\": \"3704\" },\n\n{\n  \"label\": \"东营市\",\n  \"value\": \"3705\" },\n\n{\n  \"label\": \"烟台市\",\n  \"value\": \"3706\" },\n\n{\n  \"label\": \"潍坊市\",\n  \"value\": \"3707\" },\n\n{\n  \"label\": \"济宁市\",\n  \"value\": \"3708\" },\n\n{\n  \"label\": \"泰安市\",\n  \"value\": \"3709\" },\n\n{\n  \"label\": \"威海市\",\n  \"value\": \"3710\" },\n\n{\n  \"label\": \"日照市\",\n  \"value\": \"3711\" },\n\n{\n  \"label\": \"莱芜市\",\n  \"value\": \"3712\" },\n\n{\n  \"label\": \"临沂市\",\n  \"value\": \"3713\" },\n\n{\n  \"label\": \"德州市\",\n  \"value\": \"3714\" },\n\n{\n  \"label\": \"聊城市\",\n  \"value\": \"3715\" },\n\n{\n  \"label\": \"滨州市\",\n  \"value\": \"3716\" },\n\n{\n  \"label\": \"菏泽市\",\n  \"value\": \"3717\" }],\n\n\n[{\n  \"label\": \"郑州市\",\n  \"value\": \"4101\" },\n\n{\n  \"label\": \"开封市\",\n  \"value\": \"4102\" },\n\n{\n  \"label\": \"洛阳市\",\n  \"value\": \"4103\" },\n\n{\n  \"label\": \"平顶山市\",\n  \"value\": \"4104\" },\n\n{\n  \"label\": \"安阳市\",\n  \"value\": \"4105\" },\n\n{\n  \"label\": \"鹤壁市\",\n  \"value\": \"4106\" },\n\n{\n  \"label\": \"新乡市\",\n  \"value\": \"4107\" },\n\n{\n  \"label\": \"焦作市\",\n  \"value\": \"4108\" },\n\n{\n  \"label\": \"濮阳市\",\n  \"value\": \"4109\" },\n\n{\n  \"label\": \"许昌市\",\n  \"value\": \"4110\" },\n\n{\n  \"label\": \"漯河市\",\n  \"value\": \"4111\" },\n\n{\n  \"label\": \"三门峡市\",\n  \"value\": \"4112\" },\n\n{\n  \"label\": \"南阳市\",\n  \"value\": \"4113\" },\n\n{\n  \"label\": \"商丘市\",\n  \"value\": \"4114\" },\n\n{\n  \"label\": \"信阳市\",\n  \"value\": \"4115\" },\n\n{\n  \"label\": \"周口市\",\n  \"value\": \"4116\" },\n\n{\n  \"label\": \"驻马店市\",\n  \"value\": \"4117\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4190\" }],\n\n\n[{\n  \"label\": \"武汉市\",\n  \"value\": \"4201\" },\n\n{\n  \"label\": \"黄石市\",\n  \"value\": \"4202\" },\n\n{\n  \"label\": \"十堰市\",\n  \"value\": \"4203\" },\n\n{\n  \"label\": \"宜昌市\",\n  \"value\": \"4205\" },\n\n{\n  \"label\": \"襄阳市\",\n  \"value\": \"4206\" },\n\n{\n  \"label\": \"鄂州市\",\n  \"value\": \"4207\" },\n\n{\n  \"label\": \"荆门市\",\n  \"value\": \"4208\" },\n\n{\n  \"label\": \"孝感市\",\n  \"value\": \"4209\" },\n\n{\n  \"label\": \"荆州市\",\n  \"value\": \"4210\" },\n\n{\n  \"label\": \"黄冈市\",\n  \"value\": \"4211\" },\n\n{\n  \"label\": \"咸宁市\",\n  \"value\": \"4212\" },\n\n{\n  \"label\": \"随州市\",\n  \"value\": \"4213\" },\n\n{\n  \"label\": \"恩施土家族苗族自治州\",\n  \"value\": \"4228\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4290\" }],\n\n\n[{\n  \"label\": \"长沙市\",\n  \"value\": \"4301\" },\n\n{\n  \"label\": \"株洲市\",\n  \"value\": \"4302\" },\n\n{\n  \"label\": \"湘潭市\",\n  \"value\": \"4303\" },\n\n{\n  \"label\": \"衡阳市\",\n  \"value\": \"4304\" },\n\n{\n  \"label\": \"邵阳市\",\n  \"value\": \"4305\" },\n\n{\n  \"label\": \"岳阳市\",\n  \"value\": \"4306\" },\n\n{\n  \"label\": \"常德市\",\n  \"value\": \"4307\" },\n\n{\n  \"label\": \"张家界市\",\n  \"value\": \"4308\" },\n\n{\n  \"label\": \"益阳市\",\n  \"value\": \"4309\" },\n\n{\n  \"label\": \"郴州市\",\n  \"value\": \"4310\" },\n\n{\n  \"label\": \"永州市\",\n  \"value\": \"4311\" },\n\n{\n  \"label\": \"怀化市\",\n  \"value\": \"4312\" },\n\n{\n  \"label\": \"娄底市\",\n  \"value\": \"4313\" },\n\n{\n  \"label\": \"湘西土家族苗族自治州\",\n  \"value\": \"4331\" }],\n\n\n[{\n  \"label\": \"广州市\",\n  \"value\": \"4401\" },\n\n{\n  \"label\": \"韶关市\",\n  \"value\": \"4402\" },\n\n{\n  \"label\": \"深圳市\",\n  \"value\": \"4403\" },\n\n{\n  \"label\": \"珠海市\",\n  \"value\": \"4404\" },\n\n{\n  \"label\": \"汕头市\",\n  \"value\": \"4405\" },\n\n{\n  \"label\": \"佛山市\",\n  \"value\": \"4406\" },\n\n{\n  \"label\": \"江门市\",\n  \"value\": \"4407\" },\n\n{\n  \"label\": \"湛江市\",\n  \"value\": \"4408\" },\n\n{\n  \"label\": \"茂名市\",\n  \"value\": \"4409\" },\n\n{\n  \"label\": \"肇庆市\",\n  \"value\": \"4412\" },\n\n{\n  \"label\": \"惠州市\",\n  \"value\": \"4413\" },\n\n{\n  \"label\": \"梅州市\",\n  \"value\": \"4414\" },\n\n{\n  \"label\": \"汕尾市\",\n  \"value\": \"4415\" },\n\n{\n  \"label\": \"河源市\",\n  \"value\": \"4416\" },\n\n{\n  \"label\": \"阳江市\",\n  \"value\": \"4417\" },\n\n{\n  \"label\": \"清远市\",\n  \"value\": \"4418\" },\n\n{\n  \"label\": \"东莞市\",\n  \"value\": \"4419\" },\n\n{\n  \"label\": \"中山市\",\n  \"value\": \"4420\" },\n\n{\n  \"label\": \"潮州市\",\n  \"value\": \"4451\" },\n\n{\n  \"label\": \"揭阳市\",\n  \"value\": \"4452\" },\n\n{\n  \"label\": \"云浮市\",\n  \"value\": \"4453\" }],\n\n\n[{\n  \"label\": \"南宁市\",\n  \"value\": \"4501\" },\n\n{\n  \"label\": \"柳州市\",\n  \"value\": \"4502\" },\n\n{\n  \"label\": \"桂林市\",\n  \"value\": \"4503\" },\n\n{\n  \"label\": \"梧州市\",\n  \"value\": \"4504\" },\n\n{\n  \"label\": \"北海市\",\n  \"value\": \"4505\" },\n\n{\n  \"label\": \"防城港市\",\n  \"value\": \"4506\" },\n\n{\n  \"label\": \"钦州市\",\n  \"value\": \"4507\" },\n\n{\n  \"label\": \"贵港市\",\n  \"value\": \"4508\" },\n\n{\n  \"label\": \"玉林市\",\n  \"value\": \"4509\" },\n\n{\n  \"label\": \"百色市\",\n  \"value\": \"4510\" },\n\n{\n  \"label\": \"贺州市\",\n  \"value\": \"4511\" },\n\n{\n  \"label\": \"河池市\",\n  \"value\": \"4512\" },\n\n{\n  \"label\": \"来宾市\",\n  \"value\": \"4513\" },\n\n{\n  \"label\": \"崇左市\",\n  \"value\": \"4514\" }],\n\n\n[{\n  \"label\": \"海口市\",\n  \"value\": \"4601\" },\n\n{\n  \"label\": \"三亚市\",\n  \"value\": \"4602\" },\n\n{\n  \"label\": \"三沙市\",\n  \"value\": \"4603\" },\n\n{\n  \"label\": \"儋州市\",\n  \"value\": \"4604\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4690\" }],\n\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"5001\" },\n\n{\n  \"label\": \"县\",\n  \"value\": \"5002\" }],\n\n\n[{\n  \"label\": \"成都市\",\n  \"value\": \"5101\" },\n\n{\n  \"label\": \"自贡市\",\n  \"value\": \"5103\" },\n\n{\n  \"label\": \"攀枝花市\",\n  \"value\": \"5104\" },\n\n{\n  \"label\": \"泸州市\",\n  \"value\": \"5105\" },\n\n{\n  \"label\": \"德阳市\",\n  \"value\": \"5106\" },\n\n{\n  \"label\": \"绵阳市\",\n  \"value\": \"5107\" },\n\n{\n  \"label\": \"广元市\",\n  \"value\": \"5108\" },\n\n{\n  \"label\": \"遂宁市\",\n  \"value\": \"5109\" },\n\n{\n  \"label\": \"内江市\",\n  \"value\": \"5110\" },\n\n{\n  \"label\": \"乐山市\",\n  \"value\": \"5111\" },\n\n{\n  \"label\": \"南充市\",\n  \"value\": \"5113\" },\n\n{\n  \"label\": \"眉山市\",\n  \"value\": \"5114\" },\n\n{\n  \"label\": \"宜宾市\",\n  \"value\": \"5115\" },\n\n{\n  \"label\": \"广安市\",\n  \"value\": \"5116\" },\n\n{\n  \"label\": \"达州市\",\n  \"value\": \"5117\" },\n\n{\n  \"label\": \"雅安市\",\n  \"value\": \"5118\" },\n\n{\n  \"label\": \"巴中市\",\n  \"value\": \"5119\" },\n\n{\n  \"label\": \"资阳市\",\n  \"value\": \"5120\" },\n\n{\n  \"label\": \"阿坝藏族羌族自治州\",\n  \"value\": \"5132\" },\n\n{\n  \"label\": \"甘孜藏族自治州\",\n  \"value\": \"5133\" },\n\n{\n  \"label\": \"凉山彝族自治州\",\n  \"value\": \"5134\" }],\n\n\n[{\n  \"label\": \"贵阳市\",\n  \"value\": \"5201\" },\n\n{\n  \"label\": \"六盘水市\",\n  \"value\": \"5202\" },\n\n{\n  \"label\": \"遵义市\",\n  \"value\": \"5203\" },\n\n{\n  \"label\": \"安顺市\",\n  \"value\": \"5204\" },\n\n{\n  \"label\": \"毕节市\",\n  \"value\": \"5205\" },\n\n{\n  \"label\": \"铜仁市\",\n  \"value\": \"5206\" },\n\n{\n  \"label\": \"黔西南布依族苗族自治州\",\n  \"value\": \"5223\" },\n\n{\n  \"label\": \"黔东南苗族侗族自治州\",\n  \"value\": \"5226\" },\n\n{\n  \"label\": \"黔南布依族苗族自治州\",\n  \"value\": \"5227\" }],\n\n\n[{\n  \"label\": \"昆明市\",\n  \"value\": \"5301\" },\n\n{\n  \"label\": \"曲靖市\",\n  \"value\": \"5303\" },\n\n{\n  \"label\": \"玉溪市\",\n  \"value\": \"5304\" },\n\n{\n  \"label\": \"保山市\",\n  \"value\": \"5305\" },\n\n{\n  \"label\": \"昭通市\",\n  \"value\": \"5306\" },\n\n{\n  \"label\": \"丽江市\",\n  \"value\": \"5307\" },\n\n{\n  \"label\": \"普洱市\",\n  \"value\": \"5308\" },\n\n{\n  \"label\": \"临沧市\",\n  \"value\": \"5309\" },\n\n{\n  \"label\": \"楚雄彝族自治州\",\n  \"value\": \"5323\" },\n\n{\n  \"label\": \"红河哈尼族彝族自治州\",\n  \"value\": \"5325\" },\n\n{\n  \"label\": \"文山壮族苗族自治州\",\n  \"value\": \"5326\" },\n\n{\n  \"label\": \"西双版纳傣族自治州\",\n  \"value\": \"5328\" },\n\n{\n  \"label\": \"大理白族自治州\",\n  \"value\": \"5329\" },\n\n{\n  \"label\": \"德宏傣族景颇族自治州\",\n  \"value\": \"5331\" },\n\n{\n  \"label\": \"怒江傈僳族自治州\",\n  \"value\": \"5333\" },\n\n{\n  \"label\": \"迪庆藏族自治州\",\n  \"value\": \"5334\" }],\n\n\n[{\n  \"label\": \"拉萨市\",\n  \"value\": \"5401\" },\n\n{\n  \"label\": \"日喀则市\",\n  \"value\": \"5402\" },\n\n{\n  \"label\": \"昌都市\",\n  \"value\": \"5403\" },\n\n{\n  \"label\": \"林芝市\",\n  \"value\": \"5404\" },\n\n{\n  \"label\": \"山南市\",\n  \"value\": \"5405\" },\n\n{\n  \"label\": \"那曲地区\",\n  \"value\": \"5424\" },\n\n{\n  \"label\": \"阿里地区\",\n  \"value\": \"5425\" }],\n\n\n[{\n  \"label\": \"西安市\",\n  \"value\": \"6101\" },\n\n{\n  \"label\": \"铜川市\",\n  \"value\": \"6102\" },\n\n{\n  \"label\": \"宝鸡市\",\n  \"value\": \"6103\" },\n\n{\n  \"label\": \"咸阳市\",\n  \"value\": \"6104\" },\n\n{\n  \"label\": \"渭南市\",\n  \"value\": \"6105\" },\n\n{\n  \"label\": \"延安市\",\n  \"value\": \"6106\" },\n\n{\n  \"label\": \"汉中市\",\n  \"value\": \"6107\" },\n\n{\n  \"label\": \"榆林市\",\n  \"value\": \"6108\" },\n\n{\n  \"label\": \"安康市\",\n  \"value\": \"6109\" },\n\n{\n  \"label\": \"商洛市\",\n  \"value\": \"6110\" }],\n\n\n[{\n  \"label\": \"兰州市\",\n  \"value\": \"6201\" },\n\n{\n  \"label\": \"嘉峪关市\",\n  \"value\": \"6202\" },\n\n{\n  \"label\": \"金昌市\",\n  \"value\": \"6203\" },\n\n{\n  \"label\": \"白银市\",\n  \"value\": \"6204\" },\n\n{\n  \"label\": \"天水市\",\n  \"value\": \"6205\" },\n\n{\n  \"label\": \"武威市\",\n  \"value\": \"6206\" },\n\n{\n  \"label\": \"张掖市\",\n  \"value\": \"6207\" },\n\n{\n  \"label\": \"平凉市\",\n  \"value\": \"6208\" },\n\n{\n  \"label\": \"酒泉市\",\n  \"value\": \"6209\" },\n\n{\n  \"label\": \"庆阳市\",\n  \"value\": \"6210\" },\n\n{\n  \"label\": \"定西市\",\n  \"value\": \"6211\" },\n\n{\n  \"label\": \"陇南市\",\n  \"value\": \"6212\" },\n\n{\n  \"label\": \"临夏回族自治州\",\n  \"value\": \"6229\" },\n\n{\n  \"label\": \"甘南藏族自治州\",\n  \"value\": \"6230\" }],\n\n\n[{\n  \"label\": \"西宁市\",\n  \"value\": \"6301\" },\n\n{\n  \"label\": \"海东市\",\n  \"value\": \"6302\" },\n\n{\n  \"label\": \"海北藏族自治州\",\n  \"value\": \"6322\" },\n\n{\n  \"label\": \"黄南藏族自治州\",\n  \"value\": \"6323\" },\n\n{\n  \"label\": \"海南藏族自治州\",\n  \"value\": \"6325\" },\n\n{\n  \"label\": \"果洛藏族自治州\",\n  \"value\": \"6326\" },\n\n{\n  \"label\": \"玉树藏族自治州\",\n  \"value\": \"6327\" },\n\n{\n  \"label\": \"海西蒙古族藏族自治州\",\n  \"value\": \"6328\" }],\n\n\n[{\n  \"label\": \"银川市\",\n  \"value\": \"6401\" },\n\n{\n  \"label\": \"石嘴山市\",\n  \"value\": \"6402\" },\n\n{\n  \"label\": \"吴忠市\",\n  \"value\": \"6403\" },\n\n{\n  \"label\": \"固原市\",\n  \"value\": \"6404\" },\n\n{\n  \"label\": \"中卫市\",\n  \"value\": \"6405\" }],\n\n\n[{\n  \"label\": \"乌鲁木齐市\",\n  \"value\": \"6501\" },\n\n{\n  \"label\": \"克拉玛依市\",\n  \"value\": \"6502\" },\n\n{\n  \"label\": \"吐鲁番市\",\n  \"value\": \"6504\" },\n\n{\n  \"label\": \"哈密市\",\n  \"value\": \"6505\" },\n\n{\n  \"label\": \"昌吉回族自治州\",\n  \"value\": \"6523\" },\n\n{\n  \"label\": \"博尔塔拉蒙古自治州\",\n  \"value\": \"6527\" },\n\n{\n  \"label\": \"巴音郭楞蒙古自治州\",\n  \"value\": \"6528\" },\n\n{\n  \"label\": \"阿克苏地区\",\n  \"value\": \"6529\" },\n\n{\n  \"label\": \"克孜勒苏柯尔克孜自治州\",\n  \"value\": \"6530\" },\n\n{\n  \"label\": \"喀什地区\",\n  \"value\": \"6531\" },\n\n{\n  \"label\": \"和田地区\",\n  \"value\": \"6532\" },\n\n{\n  \"label\": \"伊犁哈萨克自治州\",\n  \"value\": \"6540\" },\n\n{\n  \"label\": \"塔城地区\",\n  \"value\": \"6542\" },\n\n{\n  \"label\": \"阿勒泰地区\",\n  \"value\": \"6543\" },\n\n{\n  \"label\": \"自治区直辖县级行政区划\",\n  \"value\": \"6590\" }],\n\n\n[{\n  \"label\": \"台北\",\n  \"value\": \"6601\" },\n\n{\n  \"label\": \"高雄\",\n  \"value\": \"6602\" },\n\n{\n  \"label\": \"基隆\",\n  \"value\": \"6603\" },\n\n{\n  \"label\": \"台中\",\n  \"value\": \"6604\" },\n\n{\n  \"label\": \"台南\",\n  \"value\": \"6605\" },\n\n{\n  \"label\": \"新竹\",\n  \"value\": \"6606\" },\n\n{\n  \"label\": \"嘉义\",\n  \"value\": \"6607\" },\n\n{\n  \"label\": \"宜兰\",\n  \"value\": \"6608\" },\n\n{\n  \"label\": \"桃园\",\n  \"value\": \"6609\" },\n\n{\n  \"label\": \"苗栗\",\n  \"value\": \"6610\" },\n\n{\n  \"label\": \"彰化\",\n  \"value\": \"6611\" },\n\n{\n  \"label\": \"南投\",\n  \"value\": \"6612\" },\n\n{\n  \"label\": \"云林\",\n  \"value\": \"6613\" },\n\n{\n  \"label\": \"屏东\",\n  \"value\": \"6614\" },\n\n{\n  \"label\": \"台东\",\n  \"value\": \"6615\" },\n\n{\n  \"label\": \"花莲\",\n  \"value\": \"6616\" },\n\n{\n  \"label\": \"澎湖\",\n  \"value\": \"6617\" }],\n\n\n[{\n  \"label\": \"香港岛\",\n  \"value\": \"6701\" },\n\n{\n  \"label\": \"九龙\",\n  \"value\": \"6702\" },\n\n{\n  \"label\": \"新界\",\n  \"value\": \"6703\" }],\n\n\n[{\n  \"label\": \"澳门半岛\",\n  \"value\": \"6801\" },\n\n{\n  \"label\": \"氹仔岛\",\n  \"value\": \"6802\" },\n\n{\n  \"label\": \"路环岛\",\n  \"value\": \"6803\" },\n\n{\n  \"label\": \"路氹城\",\n  \"value\": \"6804\" }]];var _default =\n\n\n\ncityData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///373\n");

/***/ }),

/***/ 374:
/*!*****************************************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/components/uni-ui/mpvue-citypicker/city-data/area.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar areaData = [\n[\n[{\n  \"label\": \"东城区\",\n  \"value\": \"110101\" },\n\n{\n  \"label\": \"西城区\",\n  \"value\": \"110102\" },\n\n{\n  \"label\": \"朝阳区\",\n  \"value\": \"110105\" },\n\n{\n  \"label\": \"丰台区\",\n  \"value\": \"110106\" },\n\n{\n  \"label\": \"石景山区\",\n  \"value\": \"110107\" },\n\n{\n  \"label\": \"海淀区\",\n  \"value\": \"110108\" },\n\n{\n  \"label\": \"门头沟区\",\n  \"value\": \"110109\" },\n\n{\n  \"label\": \"房山区\",\n  \"value\": \"110111\" },\n\n{\n  \"label\": \"通州区\",\n  \"value\": \"110112\" },\n\n{\n  \"label\": \"顺义区\",\n  \"value\": \"110113\" },\n\n{\n  \"label\": \"昌平区\",\n  \"value\": \"110114\" },\n\n{\n  \"label\": \"大兴区\",\n  \"value\": \"110115\" },\n\n{\n  \"label\": \"怀柔区\",\n  \"value\": \"110116\" },\n\n{\n  \"label\": \"平谷区\",\n  \"value\": \"110117\" },\n\n{\n  \"label\": \"密云区\",\n  \"value\": \"110118\" },\n\n{\n  \"label\": \"延庆区\",\n  \"value\": \"110119\" }]],\n\n\n\n[\n[{\n  \"label\": \"和平区\",\n  \"value\": \"120101\" },\n\n{\n  \"label\": \"河东区\",\n  \"value\": \"120102\" },\n\n{\n  \"label\": \"河西区\",\n  \"value\": \"120103\" },\n\n{\n  \"label\": \"南开区\",\n  \"value\": \"120104\" },\n\n{\n  \"label\": \"河北区\",\n  \"value\": \"120105\" },\n\n{\n  \"label\": \"红桥区\",\n  \"value\": \"120106\" },\n\n{\n  \"label\": \"东丽区\",\n  \"value\": \"120110\" },\n\n{\n  \"label\": \"西青区\",\n  \"value\": \"120111\" },\n\n{\n  \"label\": \"津南区\",\n  \"value\": \"120112\" },\n\n{\n  \"label\": \"北辰区\",\n  \"value\": \"120113\" },\n\n{\n  \"label\": \"武清区\",\n  \"value\": \"120114\" },\n\n{\n  \"label\": \"宝坻区\",\n  \"value\": \"120115\" },\n\n{\n  \"label\": \"滨海新区\",\n  \"value\": \"120116\" },\n\n{\n  \"label\": \"宁河区\",\n  \"value\": \"120117\" },\n\n{\n  \"label\": \"静海区\",\n  \"value\": \"120118\" },\n\n{\n  \"label\": \"蓟州区\",\n  \"value\": \"120119\" }]],\n\n\n\n[\n[{\n  \"label\": \"长安区\",\n  \"value\": \"130102\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130104\" },\n\n{\n  \"label\": \"新华区\",\n  \"value\": \"130105\" },\n\n{\n  \"label\": \"井陉矿区\",\n  \"value\": \"130107\" },\n\n{\n  \"label\": \"裕华区\",\n  \"value\": \"130108\" },\n\n{\n  \"label\": \"藁城区\",\n  \"value\": \"130109\" },\n\n{\n  \"label\": \"鹿泉区\",\n  \"value\": \"130110\" },\n\n{\n  \"label\": \"栾城区\",\n  \"value\": \"130111\" },\n\n{\n  \"label\": \"井陉县\",\n  \"value\": \"130121\" },\n\n{\n  \"label\": \"正定县\",\n  \"value\": \"130123\" },\n\n{\n  \"label\": \"行唐县\",\n  \"value\": \"130125\" },\n\n{\n  \"label\": \"灵寿县\",\n  \"value\": \"130126\" },\n\n{\n  \"label\": \"高邑县\",\n  \"value\": \"130127\" },\n\n{\n  \"label\": \"深泽县\",\n  \"value\": \"130128\" },\n\n{\n  \"label\": \"赞皇县\",\n  \"value\": \"130129\" },\n\n{\n  \"label\": \"无极县\",\n  \"value\": \"130130\" },\n\n{\n  \"label\": \"平山县\",\n  \"value\": \"130131\" },\n\n{\n  \"label\": \"元氏县\",\n  \"value\": \"130132\" },\n\n{\n  \"label\": \"赵县\",\n  \"value\": \"130133\" },\n\n{\n  \"label\": \"石家庄高新技术产业开发区\",\n  \"value\": \"130171\" },\n\n{\n  \"label\": \"石家庄循环化工园区\",\n  \"value\": \"130172\" },\n\n{\n  \"label\": \"辛集市\",\n  \"value\": \"130181\" },\n\n{\n  \"label\": \"晋州市\",\n  \"value\": \"130183\" },\n\n{\n  \"label\": \"新乐市\",\n  \"value\": \"130184\" }],\n\n\n[{\n  \"label\": \"路南区\",\n  \"value\": \"130202\" },\n\n{\n  \"label\": \"路北区\",\n  \"value\": \"130203\" },\n\n{\n  \"label\": \"古冶区\",\n  \"value\": \"130204\" },\n\n{\n  \"label\": \"开平区\",\n  \"value\": \"130205\" },\n\n{\n  \"label\": \"丰南区\",\n  \"value\": \"130207\" },\n\n{\n  \"label\": \"丰润区\",\n  \"value\": \"130208\" },\n\n{\n  \"label\": \"曹妃甸区\",\n  \"value\": \"130209\" },\n\n{\n  \"label\": \"滦县\",\n  \"value\": \"130223\" },\n\n{\n  \"label\": \"滦南县\",\n  \"value\": \"130224\" },\n\n{\n  \"label\": \"乐亭县\",\n  \"value\": \"130225\" },\n\n{\n  \"label\": \"迁西县\",\n  \"value\": \"130227\" },\n\n{\n  \"label\": \"玉田县\",\n  \"value\": \"130229\" },\n\n{\n  \"label\": \"唐山市芦台经济技术开发区\",\n  \"value\": \"130271\" },\n\n{\n  \"label\": \"唐山市汉沽管理区\",\n  \"value\": \"130272\" },\n\n{\n  \"label\": \"唐山高新技术产业开发区\",\n  \"value\": \"130273\" },\n\n{\n  \"label\": \"河北唐山海港经济开发区\",\n  \"value\": \"130274\" },\n\n{\n  \"label\": \"遵化市\",\n  \"value\": \"130281\" },\n\n{\n  \"label\": \"迁安市\",\n  \"value\": \"130283\" }],\n\n\n[{\n  \"label\": \"海港区\",\n  \"value\": \"130302\" },\n\n{\n  \"label\": \"山海关区\",\n  \"value\": \"130303\" },\n\n{\n  \"label\": \"北戴河区\",\n  \"value\": \"130304\" },\n\n{\n  \"label\": \"抚宁区\",\n  \"value\": \"130306\" },\n\n{\n  \"label\": \"青龙满族自治县\",\n  \"value\": \"130321\" },\n\n{\n  \"label\": \"昌黎县\",\n  \"value\": \"130322\" },\n\n{\n  \"label\": \"卢龙县\",\n  \"value\": \"130324\" },\n\n{\n  \"label\": \"秦皇岛市经济技术开发区\",\n  \"value\": \"130371\" },\n\n{\n  \"label\": \"北戴河新区\",\n  \"value\": \"130372\" }],\n\n\n[{\n  \"label\": \"邯山区\",\n  \"value\": \"130402\" },\n\n{\n  \"label\": \"丛台区\",\n  \"value\": \"130403\" },\n\n{\n  \"label\": \"复兴区\",\n  \"value\": \"130404\" },\n\n{\n  \"label\": \"峰峰矿区\",\n  \"value\": \"130406\" },\n\n{\n  \"label\": \"肥乡区\",\n  \"value\": \"130407\" },\n\n{\n  \"label\": \"永年区\",\n  \"value\": \"130408\" },\n\n{\n  \"label\": \"临漳县\",\n  \"value\": \"130423\" },\n\n{\n  \"label\": \"成安县\",\n  \"value\": \"130424\" },\n\n{\n  \"label\": \"大名县\",\n  \"value\": \"130425\" },\n\n{\n  \"label\": \"涉县\",\n  \"value\": \"130426\" },\n\n{\n  \"label\": \"磁县\",\n  \"value\": \"130427\" },\n\n{\n  \"label\": \"邱县\",\n  \"value\": \"130430\" },\n\n{\n  \"label\": \"鸡泽县\",\n  \"value\": \"130431\" },\n\n{\n  \"label\": \"广平县\",\n  \"value\": \"130432\" },\n\n{\n  \"label\": \"馆陶县\",\n  \"value\": \"130433\" },\n\n{\n  \"label\": \"魏县\",\n  \"value\": \"130434\" },\n\n{\n  \"label\": \"曲周县\",\n  \"value\": \"130435\" },\n\n{\n  \"label\": \"邯郸经济技术开发区\",\n  \"value\": \"130471\" },\n\n{\n  \"label\": \"邯郸冀南新区\",\n  \"value\": \"130473\" },\n\n{\n  \"label\": \"武安市\",\n  \"value\": \"130481\" }],\n\n\n[{\n  \"label\": \"桥东区\",\n  \"value\": \"130502\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130503\" },\n\n{\n  \"label\": \"邢台县\",\n  \"value\": \"130521\" },\n\n{\n  \"label\": \"临城县\",\n  \"value\": \"130522\" },\n\n{\n  \"label\": \"内丘县\",\n  \"value\": \"130523\" },\n\n{\n  \"label\": \"柏乡县\",\n  \"value\": \"130524\" },\n\n{\n  \"label\": \"隆尧县\",\n  \"value\": \"130525\" },\n\n{\n  \"label\": \"任县\",\n  \"value\": \"130526\" },\n\n{\n  \"label\": \"南和县\",\n  \"value\": \"130527\" },\n\n{\n  \"label\": \"宁晋县\",\n  \"value\": \"130528\" },\n\n{\n  \"label\": \"巨鹿县\",\n  \"value\": \"130529\" },\n\n{\n  \"label\": \"新河县\",\n  \"value\": \"130530\" },\n\n{\n  \"label\": \"广宗县\",\n  \"value\": \"130531\" },\n\n{\n  \"label\": \"平乡县\",\n  \"value\": \"130532\" },\n\n{\n  \"label\": \"威县\",\n  \"value\": \"130533\" },\n\n{\n  \"label\": \"清河县\",\n  \"value\": \"130534\" },\n\n{\n  \"label\": \"临西县\",\n  \"value\": \"130535\" },\n\n{\n  \"label\": \"河北邢台经济开发区\",\n  \"value\": \"130571\" },\n\n{\n  \"label\": \"南宫市\",\n  \"value\": \"130581\" },\n\n{\n  \"label\": \"沙河市\",\n  \"value\": \"130582\" }],\n\n\n[{\n  \"label\": \"竞秀区\",\n  \"value\": \"130602\" },\n\n{\n  \"label\": \"莲池区\",\n  \"value\": \"130606\" },\n\n{\n  \"label\": \"满城区\",\n  \"value\": \"130607\" },\n\n{\n  \"label\": \"清苑区\",\n  \"value\": \"130608\" },\n\n{\n  \"label\": \"徐水区\",\n  \"value\": \"130609\" },\n\n{\n  \"label\": \"涞水县\",\n  \"value\": \"130623\" },\n\n{\n  \"label\": \"阜平县\",\n  \"value\": \"130624\" },\n\n{\n  \"label\": \"定兴县\",\n  \"value\": \"130626\" },\n\n{\n  \"label\": \"唐县\",\n  \"value\": \"130627\" },\n\n{\n  \"label\": \"高阳县\",\n  \"value\": \"130628\" },\n\n{\n  \"label\": \"容城县\",\n  \"value\": \"130629\" },\n\n{\n  \"label\": \"涞源县\",\n  \"value\": \"130630\" },\n\n{\n  \"label\": \"望都县\",\n  \"value\": \"130631\" },\n\n{\n  \"label\": \"安新县\",\n  \"value\": \"130632\" },\n\n{\n  \"label\": \"易县\",\n  \"value\": \"130633\" },\n\n{\n  \"label\": \"曲阳县\",\n  \"value\": \"130634\" },\n\n{\n  \"label\": \"蠡县\",\n  \"value\": \"130635\" },\n\n{\n  \"label\": \"顺平县\",\n  \"value\": \"130636\" },\n\n{\n  \"label\": \"博野县\",\n  \"value\": \"130637\" },\n\n{\n  \"label\": \"雄县\",\n  \"value\": \"130638\" },\n\n{\n  \"label\": \"保定高新技术产业开发区\",\n  \"value\": \"130671\" },\n\n{\n  \"label\": \"保定白沟新城\",\n  \"value\": \"130672\" },\n\n{\n  \"label\": \"涿州市\",\n  \"value\": \"130681\" },\n\n{\n  \"label\": \"定州市\",\n  \"value\": \"130682\" },\n\n{\n  \"label\": \"安国市\",\n  \"value\": \"130683\" },\n\n{\n  \"label\": \"高碑店市\",\n  \"value\": \"130684\" }],\n\n\n[{\n  \"label\": \"桥东区\",\n  \"value\": \"130702\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130703\" },\n\n{\n  \"label\": \"宣化区\",\n  \"value\": \"130705\" },\n\n{\n  \"label\": \"下花园区\",\n  \"value\": \"130706\" },\n\n{\n  \"label\": \"万全区\",\n  \"value\": \"130708\" },\n\n{\n  \"label\": \"崇礼区\",\n  \"value\": \"130709\" },\n\n{\n  \"label\": \"张北县\",\n  \"value\": \"130722\" },\n\n{\n  \"label\": \"康保县\",\n  \"value\": \"130723\" },\n\n{\n  \"label\": \"沽源县\",\n  \"value\": \"130724\" },\n\n{\n  \"label\": \"尚义县\",\n  \"value\": \"130725\" },\n\n{\n  \"label\": \"蔚县\",\n  \"value\": \"130726\" },\n\n{\n  \"label\": \"阳原县\",\n  \"value\": \"130727\" },\n\n{\n  \"label\": \"怀安县\",\n  \"value\": \"130728\" },\n\n{\n  \"label\": \"怀来县\",\n  \"value\": \"130730\" },\n\n{\n  \"label\": \"涿鹿县\",\n  \"value\": \"130731\" },\n\n{\n  \"label\": \"赤城县\",\n  \"value\": \"130732\" },\n\n{\n  \"label\": \"张家口市高新技术产业开发区\",\n  \"value\": \"130771\" },\n\n{\n  \"label\": \"张家口市察北管理区\",\n  \"value\": \"130772\" },\n\n{\n  \"label\": \"张家口市塞北管理区\",\n  \"value\": \"130773\" }],\n\n\n[{\n  \"label\": \"双桥区\",\n  \"value\": \"130802\" },\n\n{\n  \"label\": \"双滦区\",\n  \"value\": \"130803\" },\n\n{\n  \"label\": \"鹰手营子矿区\",\n  \"value\": \"130804\" },\n\n{\n  \"label\": \"承德县\",\n  \"value\": \"130821\" },\n\n{\n  \"label\": \"兴隆县\",\n  \"value\": \"130822\" },\n\n{\n  \"label\": \"滦平县\",\n  \"value\": \"130824\" },\n\n{\n  \"label\": \"隆化县\",\n  \"value\": \"130825\" },\n\n{\n  \"label\": \"丰宁满族自治县\",\n  \"value\": \"130826\" },\n\n{\n  \"label\": \"宽城满族自治县\",\n  \"value\": \"130827\" },\n\n{\n  \"label\": \"围场满族蒙古族自治县\",\n  \"value\": \"130828\" },\n\n{\n  \"label\": \"承德高新技术产业开发区\",\n  \"value\": \"130871\" },\n\n{\n  \"label\": \"平泉市\",\n  \"value\": \"130881\" }],\n\n\n[{\n  \"label\": \"新华区\",\n  \"value\": \"130902\" },\n\n{\n  \"label\": \"运河区\",\n  \"value\": \"130903\" },\n\n{\n  \"label\": \"沧县\",\n  \"value\": \"130921\" },\n\n{\n  \"label\": \"青县\",\n  \"value\": \"130922\" },\n\n{\n  \"label\": \"东光县\",\n  \"value\": \"130923\" },\n\n{\n  \"label\": \"海兴县\",\n  \"value\": \"130924\" },\n\n{\n  \"label\": \"盐山县\",\n  \"value\": \"130925\" },\n\n{\n  \"label\": \"肃宁县\",\n  \"value\": \"130926\" },\n\n{\n  \"label\": \"南皮县\",\n  \"value\": \"130927\" },\n\n{\n  \"label\": \"吴桥县\",\n  \"value\": \"130928\" },\n\n{\n  \"label\": \"献县\",\n  \"value\": \"130929\" },\n\n{\n  \"label\": \"孟村回族自治县\",\n  \"value\": \"130930\" },\n\n{\n  \"label\": \"河北沧州经济开发区\",\n  \"value\": \"130971\" },\n\n{\n  \"label\": \"沧州高新技术产业开发区\",\n  \"value\": \"130972\" },\n\n{\n  \"label\": \"沧州渤海新区\",\n  \"value\": \"130973\" },\n\n{\n  \"label\": \"泊头市\",\n  \"value\": \"130981\" },\n\n{\n  \"label\": \"任丘市\",\n  \"value\": \"130982\" },\n\n{\n  \"label\": \"黄骅市\",\n  \"value\": \"130983\" },\n\n{\n  \"label\": \"河间市\",\n  \"value\": \"130984\" }],\n\n\n[{\n  \"label\": \"安次区\",\n  \"value\": \"131002\" },\n\n{\n  \"label\": \"广阳区\",\n  \"value\": \"131003\" },\n\n{\n  \"label\": \"固安县\",\n  \"value\": \"131022\" },\n\n{\n  \"label\": \"永清县\",\n  \"value\": \"131023\" },\n\n{\n  \"label\": \"香河县\",\n  \"value\": \"131024\" },\n\n{\n  \"label\": \"大城县\",\n  \"value\": \"131025\" },\n\n{\n  \"label\": \"文安县\",\n  \"value\": \"131026\" },\n\n{\n  \"label\": \"大厂回族自治县\",\n  \"value\": \"131028\" },\n\n{\n  \"label\": \"廊坊经济技术开发区\",\n  \"value\": \"131071\" },\n\n{\n  \"label\": \"霸州市\",\n  \"value\": \"131081\" },\n\n{\n  \"label\": \"三河市\",\n  \"value\": \"131082\" }],\n\n\n[{\n  \"label\": \"桃城区\",\n  \"value\": \"131102\" },\n\n{\n  \"label\": \"冀州区\",\n  \"value\": \"131103\" },\n\n{\n  \"label\": \"枣强县\",\n  \"value\": \"131121\" },\n\n{\n  \"label\": \"武邑县\",\n  \"value\": \"131122\" },\n\n{\n  \"label\": \"武强县\",\n  \"value\": \"131123\" },\n\n{\n  \"label\": \"饶阳县\",\n  \"value\": \"131124\" },\n\n{\n  \"label\": \"安平县\",\n  \"value\": \"131125\" },\n\n{\n  \"label\": \"故城县\",\n  \"value\": \"131126\" },\n\n{\n  \"label\": \"景县\",\n  \"value\": \"131127\" },\n\n{\n  \"label\": \"阜城县\",\n  \"value\": \"131128\" },\n\n{\n  \"label\": \"河北衡水经济开发区\",\n  \"value\": \"131171\" },\n\n{\n  \"label\": \"衡水滨湖新区\",\n  \"value\": \"131172\" },\n\n{\n  \"label\": \"深州市\",\n  \"value\": \"131182\" }]],\n\n\n\n[\n[{\n  \"label\": \"小店区\",\n  \"value\": \"140105\" },\n\n{\n  \"label\": \"迎泽区\",\n  \"value\": \"140106\" },\n\n{\n  \"label\": \"杏花岭区\",\n  \"value\": \"140107\" },\n\n{\n  \"label\": \"尖草坪区\",\n  \"value\": \"140108\" },\n\n{\n  \"label\": \"万柏林区\",\n  \"value\": \"140109\" },\n\n{\n  \"label\": \"晋源区\",\n  \"value\": \"140110\" },\n\n{\n  \"label\": \"清徐县\",\n  \"value\": \"140121\" },\n\n{\n  \"label\": \"阳曲县\",\n  \"value\": \"140122\" },\n\n{\n  \"label\": \"娄烦县\",\n  \"value\": \"140123\" },\n\n{\n  \"label\": \"山西转型综合改革示范区\",\n  \"value\": \"140171\" },\n\n{\n  \"label\": \"古交市\",\n  \"value\": \"140181\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140202\" },\n\n{\n  \"label\": \"矿区\",\n  \"value\": \"140203\" },\n\n{\n  \"label\": \"南郊区\",\n  \"value\": \"140211\" },\n\n{\n  \"label\": \"新荣区\",\n  \"value\": \"140212\" },\n\n{\n  \"label\": \"阳高县\",\n  \"value\": \"140221\" },\n\n{\n  \"label\": \"天镇县\",\n  \"value\": \"140222\" },\n\n{\n  \"label\": \"广灵县\",\n  \"value\": \"140223\" },\n\n{\n  \"label\": \"灵丘县\",\n  \"value\": \"140224\" },\n\n{\n  \"label\": \"浑源县\",\n  \"value\": \"140225\" },\n\n{\n  \"label\": \"左云县\",\n  \"value\": \"140226\" },\n\n{\n  \"label\": \"大同县\",\n  \"value\": \"140227\" },\n\n{\n  \"label\": \"山西大同经济开发区\",\n  \"value\": \"140271\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140302\" },\n\n{\n  \"label\": \"矿区\",\n  \"value\": \"140303\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"140311\" },\n\n{\n  \"label\": \"平定县\",\n  \"value\": \"140321\" },\n\n{\n  \"label\": \"盂县\",\n  \"value\": \"140322\" },\n\n{\n  \"label\": \"山西阳泉经济开发区\",\n  \"value\": \"140371\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140402\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"140411\" },\n\n{\n  \"label\": \"长治县\",\n  \"value\": \"140421\" },\n\n{\n  \"label\": \"襄垣县\",\n  \"value\": \"140423\" },\n\n{\n  \"label\": \"屯留县\",\n  \"value\": \"140424\" },\n\n{\n  \"label\": \"平顺县\",\n  \"value\": \"140425\" },\n\n{\n  \"label\": \"黎城县\",\n  \"value\": \"140426\" },\n\n{\n  \"label\": \"壶关县\",\n  \"value\": \"140427\" },\n\n{\n  \"label\": \"长子县\",\n  \"value\": \"140428\" },\n\n{\n  \"label\": \"武乡县\",\n  \"value\": \"140429\" },\n\n{\n  \"label\": \"沁县\",\n  \"value\": \"140430\" },\n\n{\n  \"label\": \"沁源县\",\n  \"value\": \"140431\" },\n\n{\n  \"label\": \"山西长治高新技术产业园区\",\n  \"value\": \"140471\" },\n\n{\n  \"label\": \"潞城市\",\n  \"value\": \"140481\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140502\" },\n\n{\n  \"label\": \"沁水县\",\n  \"value\": \"140521\" },\n\n{\n  \"label\": \"阳城县\",\n  \"value\": \"140522\" },\n\n{\n  \"label\": \"陵川县\",\n  \"value\": \"140524\" },\n\n{\n  \"label\": \"泽州县\",\n  \"value\": \"140525\" },\n\n{\n  \"label\": \"高平市\",\n  \"value\": \"140581\" }],\n\n\n[{\n  \"label\": \"朔城区\",\n  \"value\": \"140602\" },\n\n{\n  \"label\": \"平鲁区\",\n  \"value\": \"140603\" },\n\n{\n  \"label\": \"山阴县\",\n  \"value\": \"140621\" },\n\n{\n  \"label\": \"应县\",\n  \"value\": \"140622\" },\n\n{\n  \"label\": \"右玉县\",\n  \"value\": \"140623\" },\n\n{\n  \"label\": \"怀仁县\",\n  \"value\": \"140624\" },\n\n{\n  \"label\": \"山西朔州经济开发区\",\n  \"value\": \"140671\" }],\n\n\n[{\n  \"label\": \"榆次区\",\n  \"value\": \"140702\" },\n\n{\n  \"label\": \"榆社县\",\n  \"value\": \"140721\" },\n\n{\n  \"label\": \"左权县\",\n  \"value\": \"140722\" },\n\n{\n  \"label\": \"和顺县\",\n  \"value\": \"140723\" },\n\n{\n  \"label\": \"昔阳县\",\n  \"value\": \"140724\" },\n\n{\n  \"label\": \"寿阳县\",\n  \"value\": \"140725\" },\n\n{\n  \"label\": \"太谷县\",\n  \"value\": \"140726\" },\n\n{\n  \"label\": \"祁县\",\n  \"value\": \"140727\" },\n\n{\n  \"label\": \"平遥县\",\n  \"value\": \"140728\" },\n\n{\n  \"label\": \"灵石县\",\n  \"value\": \"140729\" },\n\n{\n  \"label\": \"介休市\",\n  \"value\": \"140781\" }],\n\n\n[{\n  \"label\": \"盐湖区\",\n  \"value\": \"140802\" },\n\n{\n  \"label\": \"临猗县\",\n  \"value\": \"140821\" },\n\n{\n  \"label\": \"万荣县\",\n  \"value\": \"140822\" },\n\n{\n  \"label\": \"闻喜县\",\n  \"value\": \"140823\" },\n\n{\n  \"label\": \"稷山县\",\n  \"value\": \"140824\" },\n\n{\n  \"label\": \"新绛县\",\n  \"value\": \"140825\" },\n\n{\n  \"label\": \"绛县\",\n  \"value\": \"140826\" },\n\n{\n  \"label\": \"垣曲县\",\n  \"value\": \"140827\" },\n\n{\n  \"label\": \"夏县\",\n  \"value\": \"140828\" },\n\n{\n  \"label\": \"平陆县\",\n  \"value\": \"140829\" },\n\n{\n  \"label\": \"芮城县\",\n  \"value\": \"140830\" },\n\n{\n  \"label\": \"永济市\",\n  \"value\": \"140881\" },\n\n{\n  \"label\": \"河津市\",\n  \"value\": \"140882\" }],\n\n\n[{\n  \"label\": \"忻府区\",\n  \"value\": \"140902\" },\n\n{\n  \"label\": \"定襄县\",\n  \"value\": \"140921\" },\n\n{\n  \"label\": \"五台县\",\n  \"value\": \"140922\" },\n\n{\n  \"label\": \"代县\",\n  \"value\": \"140923\" },\n\n{\n  \"label\": \"繁峙县\",\n  \"value\": \"140924\" },\n\n{\n  \"label\": \"宁武县\",\n  \"value\": \"140925\" },\n\n{\n  \"label\": \"静乐县\",\n  \"value\": \"140926\" },\n\n{\n  \"label\": \"神池县\",\n  \"value\": \"140927\" },\n\n{\n  \"label\": \"五寨县\",\n  \"value\": \"140928\" },\n\n{\n  \"label\": \"岢岚县\",\n  \"value\": \"140929\" },\n\n{\n  \"label\": \"河曲县\",\n  \"value\": \"140930\" },\n\n{\n  \"label\": \"保德县\",\n  \"value\": \"140931\" },\n\n{\n  \"label\": \"偏关县\",\n  \"value\": \"140932\" },\n\n{\n  \"label\": \"五台山风景名胜区\",\n  \"value\": \"140971\" },\n\n{\n  \"label\": \"原平市\",\n  \"value\": \"140981\" }],\n\n\n[{\n  \"label\": \"尧都区\",\n  \"value\": \"141002\" },\n\n{\n  \"label\": \"曲沃县\",\n  \"value\": \"141021\" },\n\n{\n  \"label\": \"翼城县\",\n  \"value\": \"141022\" },\n\n{\n  \"label\": \"襄汾县\",\n  \"value\": \"141023\" },\n\n{\n  \"label\": \"洪洞县\",\n  \"value\": \"141024\" },\n\n{\n  \"label\": \"古县\",\n  \"value\": \"141025\" },\n\n{\n  \"label\": \"安泽县\",\n  \"value\": \"141026\" },\n\n{\n  \"label\": \"浮山县\",\n  \"value\": \"141027\" },\n\n{\n  \"label\": \"吉县\",\n  \"value\": \"141028\" },\n\n{\n  \"label\": \"乡宁县\",\n  \"value\": \"141029\" },\n\n{\n  \"label\": \"大宁县\",\n  \"value\": \"141030\" },\n\n{\n  \"label\": \"隰县\",\n  \"value\": \"141031\" },\n\n{\n  \"label\": \"永和县\",\n  \"value\": \"141032\" },\n\n{\n  \"label\": \"蒲县\",\n  \"value\": \"141033\" },\n\n{\n  \"label\": \"汾西县\",\n  \"value\": \"141034\" },\n\n{\n  \"label\": \"侯马市\",\n  \"value\": \"141081\" },\n\n{\n  \"label\": \"霍州市\",\n  \"value\": \"141082\" }],\n\n\n[{\n  \"label\": \"离石区\",\n  \"value\": \"141102\" },\n\n{\n  \"label\": \"文水县\",\n  \"value\": \"141121\" },\n\n{\n  \"label\": \"交城县\",\n  \"value\": \"141122\" },\n\n{\n  \"label\": \"兴县\",\n  \"value\": \"141123\" },\n\n{\n  \"label\": \"临县\",\n  \"value\": \"141124\" },\n\n{\n  \"label\": \"柳林县\",\n  \"value\": \"141125\" },\n\n{\n  \"label\": \"石楼县\",\n  \"value\": \"141126\" },\n\n{\n  \"label\": \"岚县\",\n  \"value\": \"141127\" },\n\n{\n  \"label\": \"方山县\",\n  \"value\": \"141128\" },\n\n{\n  \"label\": \"中阳县\",\n  \"value\": \"141129\" },\n\n{\n  \"label\": \"交口县\",\n  \"value\": \"141130\" },\n\n{\n  \"label\": \"孝义市\",\n  \"value\": \"141181\" },\n\n{\n  \"label\": \"汾阳市\",\n  \"value\": \"141182\" }]],\n\n\n\n[\n[{\n  \"label\": \"新城区\",\n  \"value\": \"150102\" },\n\n{\n  \"label\": \"回民区\",\n  \"value\": \"150103\" },\n\n{\n  \"label\": \"玉泉区\",\n  \"value\": \"150104\" },\n\n{\n  \"label\": \"赛罕区\",\n  \"value\": \"150105\" },\n\n{\n  \"label\": \"土默特左旗\",\n  \"value\": \"150121\" },\n\n{\n  \"label\": \"托克托县\",\n  \"value\": \"150122\" },\n\n{\n  \"label\": \"和林格尔县\",\n  \"value\": \"150123\" },\n\n{\n  \"label\": \"清水河县\",\n  \"value\": \"150124\" },\n\n{\n  \"label\": \"武川县\",\n  \"value\": \"150125\" },\n\n{\n  \"label\": \"呼和浩特金海工业园区\",\n  \"value\": \"150171\" },\n\n{\n  \"label\": \"呼和浩特经济技术开发区\",\n  \"value\": \"150172\" }],\n\n\n[{\n  \"label\": \"东河区\",\n  \"value\": \"150202\" },\n\n{\n  \"label\": \"昆都仑区\",\n  \"value\": \"150203\" },\n\n{\n  \"label\": \"青山区\",\n  \"value\": \"150204\" },\n\n{\n  \"label\": \"石拐区\",\n  \"value\": \"150205\" },\n\n{\n  \"label\": \"白云鄂博矿区\",\n  \"value\": \"150206\" },\n\n{\n  \"label\": \"九原区\",\n  \"value\": \"150207\" },\n\n{\n  \"label\": \"土默特右旗\",\n  \"value\": \"150221\" },\n\n{\n  \"label\": \"固阳县\",\n  \"value\": \"150222\" },\n\n{\n  \"label\": \"达尔罕茂明安联合旗\",\n  \"value\": \"150223\" },\n\n{\n  \"label\": \"包头稀土高新技术产业开发区\",\n  \"value\": \"150271\" }],\n\n\n[{\n  \"label\": \"海勃湾区\",\n  \"value\": \"150302\" },\n\n{\n  \"label\": \"海南区\",\n  \"value\": \"150303\" },\n\n{\n  \"label\": \"乌达区\",\n  \"value\": \"150304\" }],\n\n\n[{\n  \"label\": \"红山区\",\n  \"value\": \"150402\" },\n\n{\n  \"label\": \"元宝山区\",\n  \"value\": \"150403\" },\n\n{\n  \"label\": \"松山区\",\n  \"value\": \"150404\" },\n\n{\n  \"label\": \"阿鲁科尔沁旗\",\n  \"value\": \"150421\" },\n\n{\n  \"label\": \"巴林左旗\",\n  \"value\": \"150422\" },\n\n{\n  \"label\": \"巴林右旗\",\n  \"value\": \"150423\" },\n\n{\n  \"label\": \"林西县\",\n  \"value\": \"150424\" },\n\n{\n  \"label\": \"克什克腾旗\",\n  \"value\": \"150425\" },\n\n{\n  \"label\": \"翁牛特旗\",\n  \"value\": \"150426\" },\n\n{\n  \"label\": \"喀喇沁旗\",\n  \"value\": \"150428\" },\n\n{\n  \"label\": \"宁城县\",\n  \"value\": \"150429\" },\n\n{\n  \"label\": \"敖汉旗\",\n  \"value\": \"150430\" }],\n\n\n[{\n  \"label\": \"科尔沁区\",\n  \"value\": \"150502\" },\n\n{\n  \"label\": \"科尔沁左翼中旗\",\n  \"value\": \"150521\" },\n\n{\n  \"label\": \"科尔沁左翼后旗\",\n  \"value\": \"150522\" },\n\n{\n  \"label\": \"开鲁县\",\n  \"value\": \"150523\" },\n\n{\n  \"label\": \"库伦旗\",\n  \"value\": \"150524\" },\n\n{\n  \"label\": \"奈曼旗\",\n  \"value\": \"150525\" },\n\n{\n  \"label\": \"扎鲁特旗\",\n  \"value\": \"150526\" },\n\n{\n  \"label\": \"通辽经济技术开发区\",\n  \"value\": \"150571\" },\n\n{\n  \"label\": \"霍林郭勒市\",\n  \"value\": \"150581\" }],\n\n\n[{\n  \"label\": \"东胜区\",\n  \"value\": \"150602\" },\n\n{\n  \"label\": \"康巴什区\",\n  \"value\": \"150603\" },\n\n{\n  \"label\": \"达拉特旗\",\n  \"value\": \"150621\" },\n\n{\n  \"label\": \"准格尔旗\",\n  \"value\": \"150622\" },\n\n{\n  \"label\": \"鄂托克前旗\",\n  \"value\": \"150623\" },\n\n{\n  \"label\": \"鄂托克旗\",\n  \"value\": \"150624\" },\n\n{\n  \"label\": \"杭锦旗\",\n  \"value\": \"150625\" },\n\n{\n  \"label\": \"乌审旗\",\n  \"value\": \"150626\" },\n\n{\n  \"label\": \"伊金霍洛旗\",\n  \"value\": \"150627\" }],\n\n\n[{\n  \"label\": \"海拉尔区\",\n  \"value\": \"150702\" },\n\n{\n  \"label\": \"扎赉诺尔区\",\n  \"value\": \"150703\" },\n\n{\n  \"label\": \"阿荣旗\",\n  \"value\": \"150721\" },\n\n{\n  \"label\": \"莫力达瓦达斡尔族自治旗\",\n  \"value\": \"150722\" },\n\n{\n  \"label\": \"鄂伦春自治旗\",\n  \"value\": \"150723\" },\n\n{\n  \"label\": \"鄂温克族自治旗\",\n  \"value\": \"150724\" },\n\n{\n  \"label\": \"陈巴尔虎旗\",\n  \"value\": \"150725\" },\n\n{\n  \"label\": \"新巴尔虎左旗\",\n  \"value\": \"150726\" },\n\n{\n  \"label\": \"新巴尔虎右旗\",\n  \"value\": \"150727\" },\n\n{\n  \"label\": \"满洲里市\",\n  \"value\": \"150781\" },\n\n{\n  \"label\": \"牙克石市\",\n  \"value\": \"150782\" },\n\n{\n  \"label\": \"扎兰屯市\",\n  \"value\": \"150783\" },\n\n{\n  \"label\": \"额尔古纳市\",\n  \"value\": \"150784\" },\n\n{\n  \"label\": \"根河市\",\n  \"value\": \"150785\" }],\n\n\n[{\n  \"label\": \"临河区\",\n  \"value\": \"150802\" },\n\n{\n  \"label\": \"五原县\",\n  \"value\": \"150821\" },\n\n{\n  \"label\": \"磴口县\",\n  \"value\": \"150822\" },\n\n{\n  \"label\": \"乌拉特前旗\",\n  \"value\": \"150823\" },\n\n{\n  \"label\": \"乌拉特中旗\",\n  \"value\": \"150824\" },\n\n{\n  \"label\": \"乌拉特后旗\",\n  \"value\": \"150825\" },\n\n{\n  \"label\": \"杭锦后旗\",\n  \"value\": \"150826\" }],\n\n\n[{\n  \"label\": \"集宁区\",\n  \"value\": \"150902\" },\n\n{\n  \"label\": \"卓资县\",\n  \"value\": \"150921\" },\n\n{\n  \"label\": \"化德县\",\n  \"value\": \"150922\" },\n\n{\n  \"label\": \"商都县\",\n  \"value\": \"150923\" },\n\n{\n  \"label\": \"兴和县\",\n  \"value\": \"150924\" },\n\n{\n  \"label\": \"凉城县\",\n  \"value\": \"150925\" },\n\n{\n  \"label\": \"察哈尔右翼前旗\",\n  \"value\": \"150926\" },\n\n{\n  \"label\": \"察哈尔右翼中旗\",\n  \"value\": \"150927\" },\n\n{\n  \"label\": \"察哈尔右翼后旗\",\n  \"value\": \"150928\" },\n\n{\n  \"label\": \"四子王旗\",\n  \"value\": \"150929\" },\n\n{\n  \"label\": \"丰镇市\",\n  \"value\": \"150981\" }],\n\n\n[{\n  \"label\": \"乌兰浩特市\",\n  \"value\": \"152201\" },\n\n{\n  \"label\": \"阿尔山市\",\n  \"value\": \"152202\" },\n\n{\n  \"label\": \"科尔沁右翼前旗\",\n  \"value\": \"152221\" },\n\n{\n  \"label\": \"科尔沁右翼中旗\",\n  \"value\": \"152222\" },\n\n{\n  \"label\": \"扎赉特旗\",\n  \"value\": \"152223\" },\n\n{\n  \"label\": \"突泉县\",\n  \"value\": \"152224\" }],\n\n\n[{\n  \"label\": \"二连浩特市\",\n  \"value\": \"152501\" },\n\n{\n  \"label\": \"锡林浩特市\",\n  \"value\": \"152502\" },\n\n{\n  \"label\": \"阿巴嘎旗\",\n  \"value\": \"152522\" },\n\n{\n  \"label\": \"苏尼特左旗\",\n  \"value\": \"152523\" },\n\n{\n  \"label\": \"苏尼特右旗\",\n  \"value\": \"152524\" },\n\n{\n  \"label\": \"东乌珠穆沁旗\",\n  \"value\": \"152525\" },\n\n{\n  \"label\": \"西乌珠穆沁旗\",\n  \"value\": \"152526\" },\n\n{\n  \"label\": \"太仆寺旗\",\n  \"value\": \"152527\" },\n\n{\n  \"label\": \"镶黄旗\",\n  \"value\": \"152528\" },\n\n{\n  \"label\": \"正镶白旗\",\n  \"value\": \"152529\" },\n\n{\n  \"label\": \"正蓝旗\",\n  \"value\": \"152530\" },\n\n{\n  \"label\": \"多伦县\",\n  \"value\": \"152531\" },\n\n{\n  \"label\": \"乌拉盖管委会\",\n  \"value\": \"152571\" }],\n\n\n[{\n  \"label\": \"阿拉善左旗\",\n  \"value\": \"152921\" },\n\n{\n  \"label\": \"阿拉善右旗\",\n  \"value\": \"152922\" },\n\n{\n  \"label\": \"额济纳旗\",\n  \"value\": \"152923\" },\n\n{\n  \"label\": \"内蒙古阿拉善经济开发区\",\n  \"value\": \"152971\" }]],\n\n\n\n[\n[{\n  \"label\": \"和平区\",\n  \"value\": \"210102\" },\n\n{\n  \"label\": \"沈河区\",\n  \"value\": \"210103\" },\n\n{\n  \"label\": \"大东区\",\n  \"value\": \"210104\" },\n\n{\n  \"label\": \"皇姑区\",\n  \"value\": \"210105\" },\n\n{\n  \"label\": \"铁西区\",\n  \"value\": \"210106\" },\n\n{\n  \"label\": \"苏家屯区\",\n  \"value\": \"210111\" },\n\n{\n  \"label\": \"浑南区\",\n  \"value\": \"210112\" },\n\n{\n  \"label\": \"沈北新区\",\n  \"value\": \"210113\" },\n\n{\n  \"label\": \"于洪区\",\n  \"value\": \"210114\" },\n\n{\n  \"label\": \"辽中区\",\n  \"value\": \"210115\" },\n\n{\n  \"label\": \"康平县\",\n  \"value\": \"210123\" },\n\n{\n  \"label\": \"法库县\",\n  \"value\": \"210124\" },\n\n{\n  \"label\": \"新民市\",\n  \"value\": \"210181\" }],\n\n\n[{\n  \"label\": \"中山区\",\n  \"value\": \"210202\" },\n\n{\n  \"label\": \"西岗区\",\n  \"value\": \"210203\" },\n\n{\n  \"label\": \"沙河口区\",\n  \"value\": \"210204\" },\n\n{\n  \"label\": \"甘井子区\",\n  \"value\": \"210211\" },\n\n{\n  \"label\": \"旅顺口区\",\n  \"value\": \"210212\" },\n\n{\n  \"label\": \"金州区\",\n  \"value\": \"210213\" },\n\n{\n  \"label\": \"普兰店区\",\n  \"value\": \"210214\" },\n\n{\n  \"label\": \"长海县\",\n  \"value\": \"210224\" },\n\n{\n  \"label\": \"瓦房店市\",\n  \"value\": \"210281\" },\n\n{\n  \"label\": \"庄河市\",\n  \"value\": \"210283\" }],\n\n\n[{\n  \"label\": \"铁东区\",\n  \"value\": \"210302\" },\n\n{\n  \"label\": \"铁西区\",\n  \"value\": \"210303\" },\n\n{\n  \"label\": \"立山区\",\n  \"value\": \"210304\" },\n\n{\n  \"label\": \"千山区\",\n  \"value\": \"210311\" },\n\n{\n  \"label\": \"台安县\",\n  \"value\": \"210321\" },\n\n{\n  \"label\": \"岫岩满族自治县\",\n  \"value\": \"210323\" },\n\n{\n  \"label\": \"海城市\",\n  \"value\": \"210381\" }],\n\n\n[{\n  \"label\": \"新抚区\",\n  \"value\": \"210402\" },\n\n{\n  \"label\": \"东洲区\",\n  \"value\": \"210403\" },\n\n{\n  \"label\": \"望花区\",\n  \"value\": \"210404\" },\n\n{\n  \"label\": \"顺城区\",\n  \"value\": \"210411\" },\n\n{\n  \"label\": \"抚顺县\",\n  \"value\": \"210421\" },\n\n{\n  \"label\": \"新宾满族自治县\",\n  \"value\": \"210422\" },\n\n{\n  \"label\": \"清原满族自治县\",\n  \"value\": \"210423\" }],\n\n\n[{\n  \"label\": \"平山区\",\n  \"value\": \"210502\" },\n\n{\n  \"label\": \"溪湖区\",\n  \"value\": \"210503\" },\n\n{\n  \"label\": \"明山区\",\n  \"value\": \"210504\" },\n\n{\n  \"label\": \"南芬区\",\n  \"value\": \"210505\" },\n\n{\n  \"label\": \"本溪满族自治县\",\n  \"value\": \"210521\" },\n\n{\n  \"label\": \"桓仁满族自治县\",\n  \"value\": \"210522\" }],\n\n\n[{\n  \"label\": \"元宝区\",\n  \"value\": \"210602\" },\n\n{\n  \"label\": \"振兴区\",\n  \"value\": \"210603\" },\n\n{\n  \"label\": \"振安区\",\n  \"value\": \"210604\" },\n\n{\n  \"label\": \"宽甸满族自治县\",\n  \"value\": \"210624\" },\n\n{\n  \"label\": \"东港市\",\n  \"value\": \"210681\" },\n\n{\n  \"label\": \"凤城市\",\n  \"value\": \"210682\" }],\n\n\n[{\n  \"label\": \"古塔区\",\n  \"value\": \"210702\" },\n\n{\n  \"label\": \"凌河区\",\n  \"value\": \"210703\" },\n\n{\n  \"label\": \"太和区\",\n  \"value\": \"210711\" },\n\n{\n  \"label\": \"黑山县\",\n  \"value\": \"210726\" },\n\n{\n  \"label\": \"义县\",\n  \"value\": \"210727\" },\n\n{\n  \"label\": \"凌海市\",\n  \"value\": \"210781\" },\n\n{\n  \"label\": \"北镇市\",\n  \"value\": \"210782\" }],\n\n\n[{\n  \"label\": \"站前区\",\n  \"value\": \"210802\" },\n\n{\n  \"label\": \"西市区\",\n  \"value\": \"210803\" },\n\n{\n  \"label\": \"鲅鱼圈区\",\n  \"value\": \"210804\" },\n\n{\n  \"label\": \"老边区\",\n  \"value\": \"210811\" },\n\n{\n  \"label\": \"盖州市\",\n  \"value\": \"210881\" },\n\n{\n  \"label\": \"大石桥市\",\n  \"value\": \"210882\" }],\n\n\n[{\n  \"label\": \"海州区\",\n  \"value\": \"210902\" },\n\n{\n  \"label\": \"新邱区\",\n  \"value\": \"210903\" },\n\n{\n  \"label\": \"太平区\",\n  \"value\": \"210904\" },\n\n{\n  \"label\": \"清河门区\",\n  \"value\": \"210905\" },\n\n{\n  \"label\": \"细河区\",\n  \"value\": \"210911\" },\n\n{\n  \"label\": \"阜新蒙古族自治县\",\n  \"value\": \"210921\" },\n\n{\n  \"label\": \"彰武县\",\n  \"value\": \"210922\" }],\n\n\n[{\n  \"label\": \"白塔区\",\n  \"value\": \"211002\" },\n\n{\n  \"label\": \"文圣区\",\n  \"value\": \"211003\" },\n\n{\n  \"label\": \"宏伟区\",\n  \"value\": \"211004\" },\n\n{\n  \"label\": \"弓长岭区\",\n  \"value\": \"211005\" },\n\n{\n  \"label\": \"太子河区\",\n  \"value\": \"211011\" },\n\n{\n  \"label\": \"辽阳县\",\n  \"value\": \"211021\" },\n\n{\n  \"label\": \"灯塔市\",\n  \"value\": \"211081\" }],\n\n\n[{\n  \"label\": \"双台子区\",\n  \"value\": \"211102\" },\n\n{\n  \"label\": \"兴隆台区\",\n  \"value\": \"211103\" },\n\n{\n  \"label\": \"大洼区\",\n  \"value\": \"211104\" },\n\n{\n  \"label\": \"盘山县\",\n  \"value\": \"211122\" }],\n\n\n[{\n  \"label\": \"银州区\",\n  \"value\": \"211202\" },\n\n{\n  \"label\": \"清河区\",\n  \"value\": \"211204\" },\n\n{\n  \"label\": \"铁岭县\",\n  \"value\": \"211221\" },\n\n{\n  \"label\": \"西丰县\",\n  \"value\": \"211223\" },\n\n{\n  \"label\": \"昌图县\",\n  \"value\": \"211224\" },\n\n{\n  \"label\": \"调兵山市\",\n  \"value\": \"211281\" },\n\n{\n  \"label\": \"开原市\",\n  \"value\": \"211282\" }],\n\n\n[{\n  \"label\": \"双塔区\",\n  \"value\": \"211302\" },\n\n{\n  \"label\": \"龙城区\",\n  \"value\": \"211303\" },\n\n{\n  \"label\": \"朝阳县\",\n  \"value\": \"211321\" },\n\n{\n  \"label\": \"建平县\",\n  \"value\": \"211322\" },\n\n{\n  \"label\": \"喀喇沁左翼蒙古族自治县\",\n  \"value\": \"211324\" },\n\n{\n  \"label\": \"北票市\",\n  \"value\": \"211381\" },\n\n{\n  \"label\": \"凌源市\",\n  \"value\": \"211382\" }],\n\n\n[{\n  \"label\": \"连山区\",\n  \"value\": \"211402\" },\n\n{\n  \"label\": \"龙港区\",\n  \"value\": \"211403\" },\n\n{\n  \"label\": \"南票区\",\n  \"value\": \"211404\" },\n\n{\n  \"label\": \"绥中县\",\n  \"value\": \"211421\" },\n\n{\n  \"label\": \"建昌县\",\n  \"value\": \"211422\" },\n\n{\n  \"label\": \"兴城市\",\n  \"value\": \"211481\" }]],\n\n\n\n[\n[{\n  \"label\": \"南关区\",\n  \"value\": \"220102\" },\n\n{\n  \"label\": \"宽城区\",\n  \"value\": \"220103\" },\n\n{\n  \"label\": \"朝阳区\",\n  \"value\": \"220104\" },\n\n{\n  \"label\": \"二道区\",\n  \"value\": \"220105\" },\n\n{\n  \"label\": \"绿园区\",\n  \"value\": \"220106\" },\n\n{\n  \"label\": \"双阳区\",\n  \"value\": \"220112\" },\n\n{\n  \"label\": \"九台区\",\n  \"value\": \"220113\" },\n\n{\n  \"label\": \"农安县\",\n  \"value\": \"220122\" },\n\n{\n  \"label\": \"长春经济技术开发区\",\n  \"value\": \"220171\" },\n\n{\n  \"label\": \"长春净月高新技术产业开发区\",\n  \"value\": \"220172\" },\n\n{\n  \"label\": \"长春高新技术产业开发区\",\n  \"value\": \"220173\" },\n\n{\n  \"label\": \"长春汽车经济技术开发区\",\n  \"value\": \"220174\" },\n\n{\n  \"label\": \"榆树市\",\n  \"value\": \"220182\" },\n\n{\n  \"label\": \"德惠市\",\n  \"value\": \"220183\" }],\n\n\n[{\n  \"label\": \"昌邑区\",\n  \"value\": \"220202\" },\n\n{\n  \"label\": \"龙潭区\",\n  \"value\": \"220203\" },\n\n{\n  \"label\": \"船营区\",\n  \"value\": \"220204\" },\n\n{\n  \"label\": \"丰满区\",\n  \"value\": \"220211\" },\n\n{\n  \"label\": \"永吉县\",\n  \"value\": \"220221\" },\n\n{\n  \"label\": \"吉林经济开发区\",\n  \"value\": \"220271\" },\n\n{\n  \"label\": \"吉林高新技术产业开发区\",\n  \"value\": \"220272\" },\n\n{\n  \"label\": \"吉林中国新加坡食品区\",\n  \"value\": \"220273\" },\n\n{\n  \"label\": \"蛟河市\",\n  \"value\": \"220281\" },\n\n{\n  \"label\": \"桦甸市\",\n  \"value\": \"220282\" },\n\n{\n  \"label\": \"舒兰市\",\n  \"value\": \"220283\" },\n\n{\n  \"label\": \"磐石市\",\n  \"value\": \"220284\" }],\n\n\n[{\n  \"label\": \"铁西区\",\n  \"value\": \"220302\" },\n\n{\n  \"label\": \"铁东区\",\n  \"value\": \"220303\" },\n\n{\n  \"label\": \"梨树县\",\n  \"value\": \"220322\" },\n\n{\n  \"label\": \"伊通满族自治县\",\n  \"value\": \"220323\" },\n\n{\n  \"label\": \"公主岭市\",\n  \"value\": \"220381\" },\n\n{\n  \"label\": \"双辽市\",\n  \"value\": \"220382\" }],\n\n\n[{\n  \"label\": \"龙山区\",\n  \"value\": \"220402\" },\n\n{\n  \"label\": \"西安区\",\n  \"value\": \"220403\" },\n\n{\n  \"label\": \"东丰县\",\n  \"value\": \"220421\" },\n\n{\n  \"label\": \"东辽县\",\n  \"value\": \"220422\" }],\n\n\n[{\n  \"label\": \"东昌区\",\n  \"value\": \"220502\" },\n\n{\n  \"label\": \"二道江区\",\n  \"value\": \"220503\" },\n\n{\n  \"label\": \"通化县\",\n  \"value\": \"220521\" },\n\n{\n  \"label\": \"辉南县\",\n  \"value\": \"220523\" },\n\n{\n  \"label\": \"柳河县\",\n  \"value\": \"220524\" },\n\n{\n  \"label\": \"梅河口市\",\n  \"value\": \"220581\" },\n\n{\n  \"label\": \"集安市\",\n  \"value\": \"220582\" }],\n\n\n[{\n  \"label\": \"浑江区\",\n  \"value\": \"220602\" },\n\n{\n  \"label\": \"江源区\",\n  \"value\": \"220605\" },\n\n{\n  \"label\": \"抚松县\",\n  \"value\": \"220621\" },\n\n{\n  \"label\": \"靖宇县\",\n  \"value\": \"220622\" },\n\n{\n  \"label\": \"长白朝鲜族自治县\",\n  \"value\": \"220623\" },\n\n{\n  \"label\": \"临江市\",\n  \"value\": \"220681\" }],\n\n\n[{\n  \"label\": \"宁江区\",\n  \"value\": \"220702\" },\n\n{\n  \"label\": \"前郭尔罗斯蒙古族自治县\",\n  \"value\": \"220721\" },\n\n{\n  \"label\": \"长岭县\",\n  \"value\": \"220722\" },\n\n{\n  \"label\": \"乾安县\",\n  \"value\": \"220723\" },\n\n{\n  \"label\": \"吉林松原经济开发区\",\n  \"value\": \"220771\" },\n\n{\n  \"label\": \"扶余市\",\n  \"value\": \"220781\" }],\n\n\n[{\n  \"label\": \"洮北区\",\n  \"value\": \"220802\" },\n\n{\n  \"label\": \"镇赉县\",\n  \"value\": \"220821\" },\n\n{\n  \"label\": \"通榆县\",\n  \"value\": \"220822\" },\n\n{\n  \"label\": \"吉林白城经济开发区\",\n  \"value\": \"220871\" },\n\n{\n  \"label\": \"洮南市\",\n  \"value\": \"220881\" },\n\n{\n  \"label\": \"大安市\",\n  \"value\": \"220882\" }],\n\n\n[{\n  \"label\": \"延吉市\",\n  \"value\": \"222401\" },\n\n{\n  \"label\": \"图们市\",\n  \"value\": \"222402\" },\n\n{\n  \"label\": \"敦化市\",\n  \"value\": \"222403\" },\n\n{\n  \"label\": \"珲春市\",\n  \"value\": \"222404\" },\n\n{\n  \"label\": \"龙井市\",\n  \"value\": \"222405\" },\n\n{\n  \"label\": \"和龙市\",\n  \"value\": \"222406\" },\n\n{\n  \"label\": \"汪清县\",\n  \"value\": \"222424\" },\n\n{\n  \"label\": \"安图县\",\n  \"value\": \"222426\" }]],\n\n\n\n[\n[{\n  \"label\": \"道里区\",\n  \"value\": \"230102\" },\n\n{\n  \"label\": \"南岗区\",\n  \"value\": \"230103\" },\n\n{\n  \"label\": \"道外区\",\n  \"value\": \"230104\" },\n\n{\n  \"label\": \"平房区\",\n  \"value\": \"230108\" },\n\n{\n  \"label\": \"松北区\",\n  \"value\": \"230109\" },\n\n{\n  \"label\": \"香坊区\",\n  \"value\": \"230110\" },\n\n{\n  \"label\": \"呼兰区\",\n  \"value\": \"230111\" },\n\n{\n  \"label\": \"阿城区\",\n  \"value\": \"230112\" },\n\n{\n  \"label\": \"双城区\",\n  \"value\": \"230113\" },\n\n{\n  \"label\": \"依兰县\",\n  \"value\": \"230123\" },\n\n{\n  \"label\": \"方正县\",\n  \"value\": \"230124\" },\n\n{\n  \"label\": \"宾县\",\n  \"value\": \"230125\" },\n\n{\n  \"label\": \"巴彦县\",\n  \"value\": \"230126\" },\n\n{\n  \"label\": \"木兰县\",\n  \"value\": \"230127\" },\n\n{\n  \"label\": \"通河县\",\n  \"value\": \"230128\" },\n\n{\n  \"label\": \"延寿县\",\n  \"value\": \"230129\" },\n\n{\n  \"label\": \"尚志市\",\n  \"value\": \"230183\" },\n\n{\n  \"label\": \"五常市\",\n  \"value\": \"230184\" }],\n\n\n[{\n  \"label\": \"龙沙区\",\n  \"value\": \"230202\" },\n\n{\n  \"label\": \"建华区\",\n  \"value\": \"230203\" },\n\n{\n  \"label\": \"铁锋区\",\n  \"value\": \"230204\" },\n\n{\n  \"label\": \"昂昂溪区\",\n  \"value\": \"230205\" },\n\n{\n  \"label\": \"富拉尔基区\",\n  \"value\": \"230206\" },\n\n{\n  \"label\": \"碾子山区\",\n  \"value\": \"230207\" },\n\n{\n  \"label\": \"梅里斯达斡尔族区\",\n  \"value\": \"230208\" },\n\n{\n  \"label\": \"龙江县\",\n  \"value\": \"230221\" },\n\n{\n  \"label\": \"依安县\",\n  \"value\": \"230223\" },\n\n{\n  \"label\": \"泰来县\",\n  \"value\": \"230224\" },\n\n{\n  \"label\": \"甘南县\",\n  \"value\": \"230225\" },\n\n{\n  \"label\": \"富裕县\",\n  \"value\": \"230227\" },\n\n{\n  \"label\": \"克山县\",\n  \"value\": \"230229\" },\n\n{\n  \"label\": \"克东县\",\n  \"value\": \"230230\" },\n\n{\n  \"label\": \"拜泉县\",\n  \"value\": \"230231\" },\n\n{\n  \"label\": \"讷河市\",\n  \"value\": \"230281\" }],\n\n\n[{\n  \"label\": \"鸡冠区\",\n  \"value\": \"230302\" },\n\n{\n  \"label\": \"恒山区\",\n  \"value\": \"230303\" },\n\n{\n  \"label\": \"滴道区\",\n  \"value\": \"230304\" },\n\n{\n  \"label\": \"梨树区\",\n  \"value\": \"230305\" },\n\n{\n  \"label\": \"城子河区\",\n  \"value\": \"230306\" },\n\n{\n  \"label\": \"麻山区\",\n  \"value\": \"230307\" },\n\n{\n  \"label\": \"鸡东县\",\n  \"value\": \"230321\" },\n\n{\n  \"label\": \"虎林市\",\n  \"value\": \"230381\" },\n\n{\n  \"label\": \"密山市\",\n  \"value\": \"230382\" }],\n\n\n[{\n  \"label\": \"向阳区\",\n  \"value\": \"230402\" },\n\n{\n  \"label\": \"工农区\",\n  \"value\": \"230403\" },\n\n{\n  \"label\": \"南山区\",\n  \"value\": \"230404\" },\n\n{\n  \"label\": \"兴安区\",\n  \"value\": \"230405\" },\n\n{\n  \"label\": \"东山区\",\n  \"value\": \"230406\" },\n\n{\n  \"label\": \"兴山区\",\n  \"value\": \"230407\" },\n\n{\n  \"label\": \"萝北县\",\n  \"value\": \"230421\" },\n\n{\n  \"label\": \"绥滨县\",\n  \"value\": \"230422\" }],\n\n\n[{\n  \"label\": \"尖山区\",\n  \"value\": \"230502\" },\n\n{\n  \"label\": \"岭东区\",\n  \"value\": \"230503\" },\n\n{\n  \"label\": \"四方台区\",\n  \"value\": \"230505\" },\n\n{\n  \"label\": \"宝山区\",\n  \"value\": \"230506\" },\n\n{\n  \"label\": \"集贤县\",\n  \"value\": \"230521\" },\n\n{\n  \"label\": \"友谊县\",\n  \"value\": \"230522\" },\n\n{\n  \"label\": \"宝清县\",\n  \"value\": \"230523\" },\n\n{\n  \"label\": \"饶河县\",\n  \"value\": \"230524\" }],\n\n\n[{\n  \"label\": \"萨尔图区\",\n  \"value\": \"230602\" },\n\n{\n  \"label\": \"龙凤区\",\n  \"value\": \"230603\" },\n\n{\n  \"label\": \"让胡路区\",\n  \"value\": \"230604\" },\n\n{\n  \"label\": \"红岗区\",\n  \"value\": \"230605\" },\n\n{\n  \"label\": \"大同区\",\n  \"value\": \"230606\" },\n\n{\n  \"label\": \"肇州县\",\n  \"value\": \"230621\" },\n\n{\n  \"label\": \"肇源县\",\n  \"value\": \"230622\" },\n\n{\n  \"label\": \"林甸县\",\n  \"value\": \"230623\" },\n\n{\n  \"label\": \"杜尔伯特蒙古族自治县\",\n  \"value\": \"230624\" },\n\n{\n  \"label\": \"大庆高新技术产业开发区\",\n  \"value\": \"230671\" }],\n\n\n[{\n  \"label\": \"伊春区\",\n  \"value\": \"230702\" },\n\n{\n  \"label\": \"南岔区\",\n  \"value\": \"230703\" },\n\n{\n  \"label\": \"友好区\",\n  \"value\": \"230704\" },\n\n{\n  \"label\": \"西林区\",\n  \"value\": \"230705\" },\n\n{\n  \"label\": \"翠峦区\",\n  \"value\": \"230706\" },\n\n{\n  \"label\": \"新青区\",\n  \"value\": \"230707\" },\n\n{\n  \"label\": \"美溪区\",\n  \"value\": \"230708\" },\n\n{\n  \"label\": \"金山屯区\",\n  \"value\": \"230709\" },\n\n{\n  \"label\": \"五营区\",\n  \"value\": \"230710\" },\n\n{\n  \"label\": \"乌马河区\",\n  \"value\": \"230711\" },\n\n{\n  \"label\": \"汤旺河区\",\n  \"value\": \"230712\" },\n\n{\n  \"label\": \"带岭区\",\n  \"value\": \"230713\" },\n\n{\n  \"label\": \"乌伊岭区\",\n  \"value\": \"230714\" },\n\n{\n  \"label\": \"红星区\",\n  \"value\": \"230715\" },\n\n{\n  \"label\": \"上甘岭区\",\n  \"value\": \"230716\" },\n\n{\n  \"label\": \"嘉荫县\",\n  \"value\": \"230722\" },\n\n{\n  \"label\": \"铁力市\",\n  \"value\": \"230781\" }],\n\n\n[{\n  \"label\": \"向阳区\",\n  \"value\": \"230803\" },\n\n{\n  \"label\": \"前进区\",\n  \"value\": \"230804\" },\n\n{\n  \"label\": \"东风区\",\n  \"value\": \"230805\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"230811\" },\n\n{\n  \"label\": \"桦南县\",\n  \"value\": \"230822\" },\n\n{\n  \"label\": \"桦川县\",\n  \"value\": \"230826\" },\n\n{\n  \"label\": \"汤原县\",\n  \"value\": \"230828\" },\n\n{\n  \"label\": \"同江市\",\n  \"value\": \"230881\" },\n\n{\n  \"label\": \"富锦市\",\n  \"value\": \"230882\" },\n\n{\n  \"label\": \"抚远市\",\n  \"value\": \"230883\" }],\n\n\n[{\n  \"label\": \"新兴区\",\n  \"value\": \"230902\" },\n\n{\n  \"label\": \"桃山区\",\n  \"value\": \"230903\" },\n\n{\n  \"label\": \"茄子河区\",\n  \"value\": \"230904\" },\n\n{\n  \"label\": \"勃利县\",\n  \"value\": \"230921\" }],\n\n\n[{\n  \"label\": \"东安区\",\n  \"value\": \"231002\" },\n\n{\n  \"label\": \"阳明区\",\n  \"value\": \"231003\" },\n\n{\n  \"label\": \"爱民区\",\n  \"value\": \"231004\" },\n\n{\n  \"label\": \"西安区\",\n  \"value\": \"231005\" },\n\n{\n  \"label\": \"林口县\",\n  \"value\": \"231025\" },\n\n{\n  \"label\": \"牡丹江经济技术开发区\",\n  \"value\": \"231071\" },\n\n{\n  \"label\": \"绥芬河市\",\n  \"value\": \"231081\" },\n\n{\n  \"label\": \"海林市\",\n  \"value\": \"231083\" },\n\n{\n  \"label\": \"宁安市\",\n  \"value\": \"231084\" },\n\n{\n  \"label\": \"穆棱市\",\n  \"value\": \"231085\" },\n\n{\n  \"label\": \"东宁市\",\n  \"value\": \"231086\" }],\n\n\n[{\n  \"label\": \"爱辉区\",\n  \"value\": \"231102\" },\n\n{\n  \"label\": \"嫩江县\",\n  \"value\": \"231121\" },\n\n{\n  \"label\": \"逊克县\",\n  \"value\": \"231123\" },\n\n{\n  \"label\": \"孙吴县\",\n  \"value\": \"231124\" },\n\n{\n  \"label\": \"北安市\",\n  \"value\": \"231181\" },\n\n{\n  \"label\": \"五大连池市\",\n  \"value\": \"231182\" }],\n\n\n[{\n  \"label\": \"北林区\",\n  \"value\": \"231202\" },\n\n{\n  \"label\": \"望奎县\",\n  \"value\": \"231221\" },\n\n{\n  \"label\": \"兰西县\",\n  \"value\": \"231222\" },\n\n{\n  \"label\": \"青冈县\",\n  \"value\": \"231223\" },\n\n{\n  \"label\": \"庆安县\",\n  \"value\": \"231224\" },\n\n{\n  \"label\": \"明水县\",\n  \"value\": \"231225\" },\n\n{\n  \"label\": \"绥棱县\",\n  \"value\": \"231226\" },\n\n{\n  \"label\": \"安达市\",\n  \"value\": \"231281\" },\n\n{\n  \"label\": \"肇东市\",\n  \"value\": \"231282\" },\n\n{\n  \"label\": \"海伦市\",\n  \"value\": \"231283\" }],\n\n\n[{\n  \"label\": \"加格达奇区\",\n  \"value\": \"232701\" },\n\n{\n  \"label\": \"松岭区\",\n  \"value\": \"232702\" },\n\n{\n  \"label\": \"新林区\",\n  \"value\": \"232703\" },\n\n{\n  \"label\": \"呼中区\",\n  \"value\": \"232704\" },\n\n{\n  \"label\": \"呼玛县\",\n  \"value\": \"232721\" },\n\n{\n  \"label\": \"塔河县\",\n  \"value\": \"232722\" },\n\n{\n  \"label\": \"漠河县\",\n  \"value\": \"232723\" }]],\n\n\n\n[\n[{\n  \"label\": \"黄浦区\",\n  \"value\": \"310101\" },\n\n{\n  \"label\": \"徐汇区\",\n  \"value\": \"310104\" },\n\n{\n  \"label\": \"长宁区\",\n  \"value\": \"310105\" },\n\n{\n  \"label\": \"静安区\",\n  \"value\": \"310106\" },\n\n{\n  \"label\": \"普陀区\",\n  \"value\": \"310107\" },\n\n{\n  \"label\": \"虹口区\",\n  \"value\": \"310109\" },\n\n{\n  \"label\": \"杨浦区\",\n  \"value\": \"310110\" },\n\n{\n  \"label\": \"闵行区\",\n  \"value\": \"310112\" },\n\n{\n  \"label\": \"宝山区\",\n  \"value\": \"310113\" },\n\n{\n  \"label\": \"嘉定区\",\n  \"value\": \"310114\" },\n\n{\n  \"label\": \"浦东新区\",\n  \"value\": \"310115\" },\n\n{\n  \"label\": \"金山区\",\n  \"value\": \"310116\" },\n\n{\n  \"label\": \"松江区\",\n  \"value\": \"310117\" },\n\n{\n  \"label\": \"青浦区\",\n  \"value\": \"310118\" },\n\n{\n  \"label\": \"奉贤区\",\n  \"value\": \"310120\" },\n\n{\n  \"label\": \"崇明区\",\n  \"value\": \"310151\" }]],\n\n\n\n[\n[{\n  \"label\": \"玄武区\",\n  \"value\": \"320102\" },\n\n{\n  \"label\": \"秦淮区\",\n  \"value\": \"320104\" },\n\n{\n  \"label\": \"建邺区\",\n  \"value\": \"320105\" },\n\n{\n  \"label\": \"鼓楼区\",\n  \"value\": \"320106\" },\n\n{\n  \"label\": \"浦口区\",\n  \"value\": \"320111\" },\n\n{\n  \"label\": \"栖霞区\",\n  \"value\": \"320113\" },\n\n{\n  \"label\": \"雨花台区\",\n  \"value\": \"320114\" },\n\n{\n  \"label\": \"江宁区\",\n  \"value\": \"320115\" },\n\n{\n  \"label\": \"六合区\",\n  \"value\": \"320116\" },\n\n{\n  \"label\": \"溧水区\",\n  \"value\": \"320117\" },\n\n{\n  \"label\": \"高淳区\",\n  \"value\": \"320118\" }],\n\n\n[{\n  \"label\": \"锡山区\",\n  \"value\": \"320205\" },\n\n{\n  \"label\": \"惠山区\",\n  \"value\": \"320206\" },\n\n{\n  \"label\": \"滨湖区\",\n  \"value\": \"320211\" },\n\n{\n  \"label\": \"梁溪区\",\n  \"value\": \"320213\" },\n\n{\n  \"label\": \"新吴区\",\n  \"value\": \"320214\" },\n\n{\n  \"label\": \"江阴市\",\n  \"value\": \"320281\" },\n\n{\n  \"label\": \"宜兴市\",\n  \"value\": \"320282\" }],\n\n\n[{\n  \"label\": \"鼓楼区\",\n  \"value\": \"320302\" },\n\n{\n  \"label\": \"云龙区\",\n  \"value\": \"320303\" },\n\n{\n  \"label\": \"贾汪区\",\n  \"value\": \"320305\" },\n\n{\n  \"label\": \"泉山区\",\n  \"value\": \"320311\" },\n\n{\n  \"label\": \"铜山区\",\n  \"value\": \"320312\" },\n\n{\n  \"label\": \"丰县\",\n  \"value\": \"320321\" },\n\n{\n  \"label\": \"沛县\",\n  \"value\": \"320322\" },\n\n{\n  \"label\": \"睢宁县\",\n  \"value\": \"320324\" },\n\n{\n  \"label\": \"徐州经济技术开发区\",\n  \"value\": \"320371\" },\n\n{\n  \"label\": \"新沂市\",\n  \"value\": \"320381\" },\n\n{\n  \"label\": \"邳州市\",\n  \"value\": \"320382\" }],\n\n\n[{\n  \"label\": \"天宁区\",\n  \"value\": \"320402\" },\n\n{\n  \"label\": \"钟楼区\",\n  \"value\": \"320404\" },\n\n{\n  \"label\": \"新北区\",\n  \"value\": \"320411\" },\n\n{\n  \"label\": \"武进区\",\n  \"value\": \"320412\" },\n\n{\n  \"label\": \"金坛区\",\n  \"value\": \"320413\" },\n\n{\n  \"label\": \"溧阳市\",\n  \"value\": \"320481\" }],\n\n\n[{\n  \"label\": \"虎丘区\",\n  \"value\": \"320505\" },\n\n{\n  \"label\": \"吴中区\",\n  \"value\": \"320506\" },\n\n{\n  \"label\": \"相城区\",\n  \"value\": \"320507\" },\n\n{\n  \"label\": \"姑苏区\",\n  \"value\": \"320508\" },\n\n{\n  \"label\": \"吴江区\",\n  \"value\": \"320509\" },\n\n{\n  \"label\": \"苏州工业园区\",\n  \"value\": \"320571\" },\n\n{\n  \"label\": \"常熟市\",\n  \"value\": \"320581\" },\n\n{\n  \"label\": \"张家港市\",\n  \"value\": \"320582\" },\n\n{\n  \"label\": \"昆山市\",\n  \"value\": \"320583\" },\n\n{\n  \"label\": \"太仓市\",\n  \"value\": \"320585\" }],\n\n\n[{\n  \"label\": \"崇川区\",\n  \"value\": \"320602\" },\n\n{\n  \"label\": \"港闸区\",\n  \"value\": \"320611\" },\n\n{\n  \"label\": \"通州区\",\n  \"value\": \"320612\" },\n\n{\n  \"label\": \"海安县\",\n  \"value\": \"320621\" },\n\n{\n  \"label\": \"如东县\",\n  \"value\": \"320623\" },\n\n{\n  \"label\": \"南通经济技术开发区\",\n  \"value\": \"320671\" },\n\n{\n  \"label\": \"启东市\",\n  \"value\": \"320681\" },\n\n{\n  \"label\": \"如皋市\",\n  \"value\": \"320682\" },\n\n{\n  \"label\": \"海门市\",\n  \"value\": \"320684\" }],\n\n\n[{\n  \"label\": \"连云区\",\n  \"value\": \"320703\" },\n\n{\n  \"label\": \"海州区\",\n  \"value\": \"320706\" },\n\n{\n  \"label\": \"赣榆区\",\n  \"value\": \"320707\" },\n\n{\n  \"label\": \"东海县\",\n  \"value\": \"320722\" },\n\n{\n  \"label\": \"灌云县\",\n  \"value\": \"320723\" },\n\n{\n  \"label\": \"灌南县\",\n  \"value\": \"320724\" },\n\n{\n  \"label\": \"连云港经济技术开发区\",\n  \"value\": \"320771\" },\n\n{\n  \"label\": \"连云港高新技术产业开发区\",\n  \"value\": \"320772\" }],\n\n\n[{\n  \"label\": \"淮安区\",\n  \"value\": \"320803\" },\n\n{\n  \"label\": \"淮阴区\",\n  \"value\": \"320804\" },\n\n{\n  \"label\": \"清江浦区\",\n  \"value\": \"320812\" },\n\n{\n  \"label\": \"洪泽区\",\n  \"value\": \"320813\" },\n\n{\n  \"label\": \"涟水县\",\n  \"value\": \"320826\" },\n\n{\n  \"label\": \"盱眙县\",\n  \"value\": \"320830\" },\n\n{\n  \"label\": \"金湖县\",\n  \"value\": \"320831\" },\n\n{\n  \"label\": \"淮安经济技术开发区\",\n  \"value\": \"320871\" }],\n\n\n[{\n  \"label\": \"亭湖区\",\n  \"value\": \"320902\" },\n\n{\n  \"label\": \"盐都区\",\n  \"value\": \"320903\" },\n\n{\n  \"label\": \"大丰区\",\n  \"value\": \"320904\" },\n\n{\n  \"label\": \"响水县\",\n  \"value\": \"320921\" },\n\n{\n  \"label\": \"滨海县\",\n  \"value\": \"320922\" },\n\n{\n  \"label\": \"阜宁县\",\n  \"value\": \"320923\" },\n\n{\n  \"label\": \"射阳县\",\n  \"value\": \"320924\" },\n\n{\n  \"label\": \"建湖县\",\n  \"value\": \"320925\" },\n\n{\n  \"label\": \"盐城经济技术开发区\",\n  \"value\": \"320971\" },\n\n{\n  \"label\": \"东台市\",\n  \"value\": \"320981\" }],\n\n\n[{\n  \"label\": \"广陵区\",\n  \"value\": \"321002\" },\n\n{\n  \"label\": \"邗江区\",\n  \"value\": \"321003\" },\n\n{\n  \"label\": \"江都区\",\n  \"value\": \"321012\" },\n\n{\n  \"label\": \"宝应县\",\n  \"value\": \"321023\" },\n\n{\n  \"label\": \"扬州经济技术开发区\",\n  \"value\": \"321071\" },\n\n{\n  \"label\": \"仪征市\",\n  \"value\": \"321081\" },\n\n{\n  \"label\": \"高邮市\",\n  \"value\": \"321084\" }],\n\n\n[{\n  \"label\": \"京口区\",\n  \"value\": \"321102\" },\n\n{\n  \"label\": \"润州区\",\n  \"value\": \"321111\" },\n\n{\n  \"label\": \"丹徒区\",\n  \"value\": \"321112\" },\n\n{\n  \"label\": \"镇江新区\",\n  \"value\": \"321171\" },\n\n{\n  \"label\": \"丹阳市\",\n  \"value\": \"321181\" },\n\n{\n  \"label\": \"扬中市\",\n  \"value\": \"321182\" },\n\n{\n  \"label\": \"句容市\",\n  \"value\": \"321183\" }],\n\n\n[{\n  \"label\": \"海陵区\",\n  \"value\": \"321202\" },\n\n{\n  \"label\": \"高港区\",\n  \"value\": \"321203\" },\n\n{\n  \"label\": \"姜堰区\",\n  \"value\": \"321204\" },\n\n{\n  \"label\": \"泰州医药高新技术产业开发区\",\n  \"value\": \"321271\" },\n\n{\n  \"label\": \"兴化市\",\n  \"value\": \"321281\" },\n\n{\n  \"label\": \"靖江市\",\n  \"value\": \"321282\" },\n\n{\n  \"label\": \"泰兴市\",\n  \"value\": \"321283\" }],\n\n\n[{\n  \"label\": \"宿城区\",\n  \"value\": \"321302\" },\n\n{\n  \"label\": \"宿豫区\",\n  \"value\": \"321311\" },\n\n{\n  \"label\": \"沭阳县\",\n  \"value\": \"321322\" },\n\n{\n  \"label\": \"泗阳县\",\n  \"value\": \"321323\" },\n\n{\n  \"label\": \"泗洪县\",\n  \"value\": \"321324\" },\n\n{\n  \"label\": \"宿迁经济技术开发区\",\n  \"value\": \"321371\" }]],\n\n\n\n[\n[{\n  \"label\": \"上城区\",\n  \"value\": \"330102\" },\n\n{\n  \"label\": \"下城区\",\n  \"value\": \"330103\" },\n\n{\n  \"label\": \"江干区\",\n  \"value\": \"330104\" },\n\n{\n  \"label\": \"拱墅区\",\n  \"value\": \"330105\" },\n\n{\n  \"label\": \"西湖区\",\n  \"value\": \"330106\" },\n\n{\n  \"label\": \"滨江区\",\n  \"value\": \"330108\" },\n\n{\n  \"label\": \"萧山区\",\n  \"value\": \"330109\" },\n\n{\n  \"label\": \"余杭区\",\n  \"value\": \"330110\" },\n\n{\n  \"label\": \"富阳区\",\n  \"value\": \"330111\" },\n\n{\n  \"label\": \"临安区\",\n  \"value\": \"330112\" },\n\n{\n  \"label\": \"桐庐县\",\n  \"value\": \"330122\" },\n\n{\n  \"label\": \"淳安县\",\n  \"value\": \"330127\" },\n\n{\n  \"label\": \"建德市\",\n  \"value\": \"330182\" }],\n\n\n[{\n  \"label\": \"海曙区\",\n  \"value\": \"330203\" },\n\n{\n  \"label\": \"江北区\",\n  \"value\": \"330205\" },\n\n{\n  \"label\": \"北仑区\",\n  \"value\": \"330206\" },\n\n{\n  \"label\": \"镇海区\",\n  \"value\": \"330211\" },\n\n{\n  \"label\": \"鄞州区\",\n  \"value\": \"330212\" },\n\n{\n  \"label\": \"奉化区\",\n  \"value\": \"330213\" },\n\n{\n  \"label\": \"象山县\",\n  \"value\": \"330225\" },\n\n{\n  \"label\": \"宁海县\",\n  \"value\": \"330226\" },\n\n{\n  \"label\": \"余姚市\",\n  \"value\": \"330281\" },\n\n{\n  \"label\": \"慈溪市\",\n  \"value\": \"330282\" }],\n\n\n[{\n  \"label\": \"鹿城区\",\n  \"value\": \"330302\" },\n\n{\n  \"label\": \"龙湾区\",\n  \"value\": \"330303\" },\n\n{\n  \"label\": \"瓯海区\",\n  \"value\": \"330304\" },\n\n{\n  \"label\": \"洞头区\",\n  \"value\": \"330305\" },\n\n{\n  \"label\": \"永嘉县\",\n  \"value\": \"330324\" },\n\n{\n  \"label\": \"平阳县\",\n  \"value\": \"330326\" },\n\n{\n  \"label\": \"苍南县\",\n  \"value\": \"330327\" },\n\n{\n  \"label\": \"文成县\",\n  \"value\": \"330328\" },\n\n{\n  \"label\": \"泰顺县\",\n  \"value\": \"330329\" },\n\n{\n  \"label\": \"温州经济技术开发区\",\n  \"value\": \"330371\" },\n\n{\n  \"label\": \"瑞安市\",\n  \"value\": \"330381\" },\n\n{\n  \"label\": \"乐清市\",\n  \"value\": \"330382\" }],\n\n\n[{\n  \"label\": \"南湖区\",\n  \"value\": \"330402\" },\n\n{\n  \"label\": \"秀洲区\",\n  \"value\": \"330411\" },\n\n{\n  \"label\": \"嘉善县\",\n  \"value\": \"330421\" },\n\n{\n  \"label\": \"海盐县\",\n  \"value\": \"330424\" },\n\n{\n  \"label\": \"海宁市\",\n  \"value\": \"330481\" },\n\n{\n  \"label\": \"平湖市\",\n  \"value\": \"330482\" },\n\n{\n  \"label\": \"桐乡市\",\n  \"value\": \"330483\" }],\n\n\n[{\n  \"label\": \"吴兴区\",\n  \"value\": \"330502\" },\n\n{\n  \"label\": \"南浔区\",\n  \"value\": \"330503\" },\n\n{\n  \"label\": \"德清县\",\n  \"value\": \"330521\" },\n\n{\n  \"label\": \"长兴县\",\n  \"value\": \"330522\" },\n\n{\n  \"label\": \"安吉县\",\n  \"value\": \"330523\" }],\n\n\n[{\n  \"label\": \"越城区\",\n  \"value\": \"330602\" },\n\n{\n  \"label\": \"柯桥区\",\n  \"value\": \"330603\" },\n\n{\n  \"label\": \"上虞区\",\n  \"value\": \"330604\" },\n\n{\n  \"label\": \"新昌县\",\n  \"value\": \"330624\" },\n\n{\n  \"label\": \"诸暨市\",\n  \"value\": \"330681\" },\n\n{\n  \"label\": \"嵊州市\",\n  \"value\": \"330683\" }],\n\n\n[{\n  \"label\": \"婺城区\",\n  \"value\": \"330702\" },\n\n{\n  \"label\": \"金东区\",\n  \"value\": \"330703\" },\n\n{\n  \"label\": \"武义县\",\n  \"value\": \"330723\" },\n\n{\n  \"label\": \"浦江县\",\n  \"value\": \"330726\" },\n\n{\n  \"label\": \"磐安县\",\n  \"value\": \"330727\" },\n\n{\n  \"label\": \"兰溪市\",\n  \"value\": \"330781\" },\n\n{\n  \"label\": \"义乌市\",\n  \"value\": \"330782\" },\n\n{\n  \"label\": \"东阳市\",\n  \"value\": \"330783\" },\n\n{\n  \"label\": \"永康市\",\n  \"value\": \"330784\" }],\n\n\n[{\n  \"label\": \"柯城区\",\n  \"value\": \"330802\" },\n\n{\n  \"label\": \"衢江区\",\n  \"value\": \"330803\" },\n\n{\n  \"label\": \"常山县\",\n  \"value\": \"330822\" },\n\n{\n  \"label\": \"开化县\",\n  \"value\": \"330824\" },\n\n{\n  \"label\": \"龙游县\",\n  \"value\": \"330825\" },\n\n{\n  \"label\": \"江山市\",\n  \"value\": \"330881\" }],\n\n\n[{\n  \"label\": \"定海区\",\n  \"value\": \"330902\" },\n\n{\n  \"label\": \"普陀区\",\n  \"value\": \"330903\" },\n\n{\n  \"label\": \"岱山县\",\n  \"value\": \"330921\" },\n\n{\n  \"label\": \"嵊泗县\",\n  \"value\": \"330922\" }],\n\n\n[{\n  \"label\": \"椒江区\",\n  \"value\": \"331002\" },\n\n{\n  \"label\": \"黄岩区\",\n  \"value\": \"331003\" },\n\n{\n  \"label\": \"路桥区\",\n  \"value\": \"331004\" },\n\n{\n  \"label\": \"三门县\",\n  \"value\": \"331022\" },\n\n{\n  \"label\": \"天台县\",\n  \"value\": \"331023\" },\n\n{\n  \"label\": \"仙居县\",\n  \"value\": \"331024\" },\n\n{\n  \"label\": \"温岭市\",\n  \"value\": \"331081\" },\n\n{\n  \"label\": \"临海市\",\n  \"value\": \"331082\" },\n\n{\n  \"label\": \"玉环市\",\n  \"value\": \"331083\" }],\n\n\n[{\n  \"label\": \"莲都区\",\n  \"value\": \"331102\" },\n\n{\n  \"label\": \"青田县\",\n  \"value\": \"331121\" },\n\n{\n  \"label\": \"缙云县\",\n  \"value\": \"331122\" },\n\n{\n  \"label\": \"遂昌县\",\n  \"value\": \"331123\" },\n\n{\n  \"label\": \"松阳县\",\n  \"value\": \"331124\" },\n\n{\n  \"label\": \"云和县\",\n  \"value\": \"331125\" },\n\n{\n  \"label\": \"庆元县\",\n  \"value\": \"331126\" },\n\n{\n  \"label\": \"景宁畲族自治县\",\n  \"value\": \"331127\" },\n\n{\n  \"label\": \"龙泉市\",\n  \"value\": \"331181\" }]],\n\n\n\n[\n[{\n  \"label\": \"瑶海区\",\n  \"value\": \"340102\" },\n\n{\n  \"label\": \"庐阳区\",\n  \"value\": \"340103\" },\n\n{\n  \"label\": \"蜀山区\",\n  \"value\": \"340104\" },\n\n{\n  \"label\": \"包河区\",\n  \"value\": \"340111\" },\n\n{\n  \"label\": \"长丰县\",\n  \"value\": \"340121\" },\n\n{\n  \"label\": \"肥东县\",\n  \"value\": \"340122\" },\n\n{\n  \"label\": \"肥西县\",\n  \"value\": \"340123\" },\n\n{\n  \"label\": \"庐江县\",\n  \"value\": \"340124\" },\n\n{\n  \"label\": \"合肥高新技术产业开发区\",\n  \"value\": \"340171\" },\n\n{\n  \"label\": \"合肥经济技术开发区\",\n  \"value\": \"340172\" },\n\n{\n  \"label\": \"合肥新站高新技术产业开发区\",\n  \"value\": \"340173\" },\n\n{\n  \"label\": \"巢湖市\",\n  \"value\": \"340181\" }],\n\n\n[{\n  \"label\": \"镜湖区\",\n  \"value\": \"340202\" },\n\n{\n  \"label\": \"弋江区\",\n  \"value\": \"340203\" },\n\n{\n  \"label\": \"鸠江区\",\n  \"value\": \"340207\" },\n\n{\n  \"label\": \"三山区\",\n  \"value\": \"340208\" },\n\n{\n  \"label\": \"芜湖县\",\n  \"value\": \"340221\" },\n\n{\n  \"label\": \"繁昌县\",\n  \"value\": \"340222\" },\n\n{\n  \"label\": \"南陵县\",\n  \"value\": \"340223\" },\n\n{\n  \"label\": \"无为县\",\n  \"value\": \"340225\" },\n\n{\n  \"label\": \"芜湖经济技术开发区\",\n  \"value\": \"340271\" },\n\n{\n  \"label\": \"安徽芜湖长江大桥经济开发区\",\n  \"value\": \"340272\" }],\n\n\n[{\n  \"label\": \"龙子湖区\",\n  \"value\": \"340302\" },\n\n{\n  \"label\": \"蚌山区\",\n  \"value\": \"340303\" },\n\n{\n  \"label\": \"禹会区\",\n  \"value\": \"340304\" },\n\n{\n  \"label\": \"淮上区\",\n  \"value\": \"340311\" },\n\n{\n  \"label\": \"怀远县\",\n  \"value\": \"340321\" },\n\n{\n  \"label\": \"五河县\",\n  \"value\": \"340322\" },\n\n{\n  \"label\": \"固镇县\",\n  \"value\": \"340323\" },\n\n{\n  \"label\": \"蚌埠市高新技术开发区\",\n  \"value\": \"340371\" },\n\n{\n  \"label\": \"蚌埠市经济开发区\",\n  \"value\": \"340372\" }],\n\n\n[{\n  \"label\": \"大通区\",\n  \"value\": \"340402\" },\n\n{\n  \"label\": \"田家庵区\",\n  \"value\": \"340403\" },\n\n{\n  \"label\": \"谢家集区\",\n  \"value\": \"340404\" },\n\n{\n  \"label\": \"八公山区\",\n  \"value\": \"340405\" },\n\n{\n  \"label\": \"潘集区\",\n  \"value\": \"340406\" },\n\n{\n  \"label\": \"凤台县\",\n  \"value\": \"340421\" },\n\n{\n  \"label\": \"寿县\",\n  \"value\": \"340422\" }],\n\n\n[{\n  \"label\": \"花山区\",\n  \"value\": \"340503\" },\n\n{\n  \"label\": \"雨山区\",\n  \"value\": \"340504\" },\n\n{\n  \"label\": \"博望区\",\n  \"value\": \"340506\" },\n\n{\n  \"label\": \"当涂县\",\n  \"value\": \"340521\" },\n\n{\n  \"label\": \"含山县\",\n  \"value\": \"340522\" },\n\n{\n  \"label\": \"和县\",\n  \"value\": \"340523\" }],\n\n\n[{\n  \"label\": \"杜集区\",\n  \"value\": \"340602\" },\n\n{\n  \"label\": \"相山区\",\n  \"value\": \"340603\" },\n\n{\n  \"label\": \"烈山区\",\n  \"value\": \"340604\" },\n\n{\n  \"label\": \"濉溪县\",\n  \"value\": \"340621\" }],\n\n\n[{\n  \"label\": \"铜官区\",\n  \"value\": \"340705\" },\n\n{\n  \"label\": \"义安区\",\n  \"value\": \"340706\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"340711\" },\n\n{\n  \"label\": \"枞阳县\",\n  \"value\": \"340722\" }],\n\n\n[{\n  \"label\": \"迎江区\",\n  \"value\": \"340802\" },\n\n{\n  \"label\": \"大观区\",\n  \"value\": \"340803\" },\n\n{\n  \"label\": \"宜秀区\",\n  \"value\": \"340811\" },\n\n{\n  \"label\": \"怀宁县\",\n  \"value\": \"340822\" },\n\n{\n  \"label\": \"潜山县\",\n  \"value\": \"340824\" },\n\n{\n  \"label\": \"太湖县\",\n  \"value\": \"340825\" },\n\n{\n  \"label\": \"宿松县\",\n  \"value\": \"340826\" },\n\n{\n  \"label\": \"望江县\",\n  \"value\": \"340827\" },\n\n{\n  \"label\": \"岳西县\",\n  \"value\": \"340828\" },\n\n{\n  \"label\": \"安徽安庆经济开发区\",\n  \"value\": \"340871\" },\n\n{\n  \"label\": \"桐城市\",\n  \"value\": \"340881\" }],\n\n\n[{\n  \"label\": \"屯溪区\",\n  \"value\": \"341002\" },\n\n{\n  \"label\": \"黄山区\",\n  \"value\": \"341003\" },\n\n{\n  \"label\": \"徽州区\",\n  \"value\": \"341004\" },\n\n{\n  \"label\": \"歙县\",\n  \"value\": \"341021\" },\n\n{\n  \"label\": \"休宁县\",\n  \"value\": \"341022\" },\n\n{\n  \"label\": \"黟县\",\n  \"value\": \"341023\" },\n\n{\n  \"label\": \"祁门县\",\n  \"value\": \"341024\" }],\n\n\n[{\n  \"label\": \"琅琊区\",\n  \"value\": \"341102\" },\n\n{\n  \"label\": \"南谯区\",\n  \"value\": \"341103\" },\n\n{\n  \"label\": \"来安县\",\n  \"value\": \"341122\" },\n\n{\n  \"label\": \"全椒县\",\n  \"value\": \"341124\" },\n\n{\n  \"label\": \"定远县\",\n  \"value\": \"341125\" },\n\n{\n  \"label\": \"凤阳县\",\n  \"value\": \"341126\" },\n\n{\n  \"label\": \"苏滁现代产业园\",\n  \"value\": \"341171\" },\n\n{\n  \"label\": \"滁州经济技术开发区\",\n  \"value\": \"341172\" },\n\n{\n  \"label\": \"天长市\",\n  \"value\": \"341181\" },\n\n{\n  \"label\": \"明光市\",\n  \"value\": \"341182\" }],\n\n\n[{\n  \"label\": \"颍州区\",\n  \"value\": \"341202\" },\n\n{\n  \"label\": \"颍东区\",\n  \"value\": \"341203\" },\n\n{\n  \"label\": \"颍泉区\",\n  \"value\": \"341204\" },\n\n{\n  \"label\": \"临泉县\",\n  \"value\": \"341221\" },\n\n{\n  \"label\": \"太和县\",\n  \"value\": \"341222\" },\n\n{\n  \"label\": \"阜南县\",\n  \"value\": \"341225\" },\n\n{\n  \"label\": \"颍上县\",\n  \"value\": \"341226\" },\n\n{\n  \"label\": \"阜阳合肥现代产业园区\",\n  \"value\": \"341271\" },\n\n{\n  \"label\": \"阜阳经济技术开发区\",\n  \"value\": \"341272\" },\n\n{\n  \"label\": \"界首市\",\n  \"value\": \"341282\" }],\n\n\n[{\n  \"label\": \"埇桥区\",\n  \"value\": \"341302\" },\n\n{\n  \"label\": \"砀山县\",\n  \"value\": \"341321\" },\n\n{\n  \"label\": \"萧县\",\n  \"value\": \"341322\" },\n\n{\n  \"label\": \"灵璧县\",\n  \"value\": \"341323\" },\n\n{\n  \"label\": \"泗县\",\n  \"value\": \"341324\" },\n\n{\n  \"label\": \"宿州马鞍山现代产业园区\",\n  \"value\": \"341371\" },\n\n{\n  \"label\": \"宿州经济技术开发区\",\n  \"value\": \"341372\" }],\n\n\n[{\n  \"label\": \"金安区\",\n  \"value\": \"341502\" },\n\n{\n  \"label\": \"裕安区\",\n  \"value\": \"341503\" },\n\n{\n  \"label\": \"叶集区\",\n  \"value\": \"341504\" },\n\n{\n  \"label\": \"霍邱县\",\n  \"value\": \"341522\" },\n\n{\n  \"label\": \"舒城县\",\n  \"value\": \"341523\" },\n\n{\n  \"label\": \"金寨县\",\n  \"value\": \"341524\" },\n\n{\n  \"label\": \"霍山县\",\n  \"value\": \"341525\" }],\n\n\n[{\n  \"label\": \"谯城区\",\n  \"value\": \"341602\" },\n\n{\n  \"label\": \"涡阳县\",\n  \"value\": \"341621\" },\n\n{\n  \"label\": \"蒙城县\",\n  \"value\": \"341622\" },\n\n{\n  \"label\": \"利辛县\",\n  \"value\": \"341623\" }],\n\n\n[{\n  \"label\": \"贵池区\",\n  \"value\": \"341702\" },\n\n{\n  \"label\": \"东至县\",\n  \"value\": \"341721\" },\n\n{\n  \"label\": \"石台县\",\n  \"value\": \"341722\" },\n\n{\n  \"label\": \"青阳县\",\n  \"value\": \"341723\" }],\n\n\n[{\n  \"label\": \"宣州区\",\n  \"value\": \"341802\" },\n\n{\n  \"label\": \"郎溪县\",\n  \"value\": \"341821\" },\n\n{\n  \"label\": \"广德县\",\n  \"value\": \"341822\" },\n\n{\n  \"label\": \"泾县\",\n  \"value\": \"341823\" },\n\n{\n  \"label\": \"绩溪县\",\n  \"value\": \"341824\" },\n\n{\n  \"label\": \"旌德县\",\n  \"value\": \"341825\" },\n\n{\n  \"label\": \"宣城市经济开发区\",\n  \"value\": \"341871\" },\n\n{\n  \"label\": \"宁国市\",\n  \"value\": \"341881\" }]],\n\n\n\n[\n[{\n  \"label\": \"鼓楼区\",\n  \"value\": \"350102\" },\n\n{\n  \"label\": \"台江区\",\n  \"value\": \"350103\" },\n\n{\n  \"label\": \"仓山区\",\n  \"value\": \"350104\" },\n\n{\n  \"label\": \"马尾区\",\n  \"value\": \"350105\" },\n\n{\n  \"label\": \"晋安区\",\n  \"value\": \"350111\" },\n\n{\n  \"label\": \"闽侯县\",\n  \"value\": \"350121\" },\n\n{\n  \"label\": \"连江县\",\n  \"value\": \"350122\" },\n\n{\n  \"label\": \"罗源县\",\n  \"value\": \"350123\" },\n\n{\n  \"label\": \"闽清县\",\n  \"value\": \"350124\" },\n\n{\n  \"label\": \"永泰县\",\n  \"value\": \"350125\" },\n\n{\n  \"label\": \"平潭县\",\n  \"value\": \"350128\" },\n\n{\n  \"label\": \"福清市\",\n  \"value\": \"350181\" },\n\n{\n  \"label\": \"长乐市\",\n  \"value\": \"350182\" }],\n\n\n[{\n  \"label\": \"思明区\",\n  \"value\": \"350203\" },\n\n{\n  \"label\": \"海沧区\",\n  \"value\": \"350205\" },\n\n{\n  \"label\": \"湖里区\",\n  \"value\": \"350206\" },\n\n{\n  \"label\": \"集美区\",\n  \"value\": \"350211\" },\n\n{\n  \"label\": \"同安区\",\n  \"value\": \"350212\" },\n\n{\n  \"label\": \"翔安区\",\n  \"value\": \"350213\" }],\n\n\n[{\n  \"label\": \"城厢区\",\n  \"value\": \"350302\" },\n\n{\n  \"label\": \"涵江区\",\n  \"value\": \"350303\" },\n\n{\n  \"label\": \"荔城区\",\n  \"value\": \"350304\" },\n\n{\n  \"label\": \"秀屿区\",\n  \"value\": \"350305\" },\n\n{\n  \"label\": \"仙游县\",\n  \"value\": \"350322\" }],\n\n\n[{\n  \"label\": \"梅列区\",\n  \"value\": \"350402\" },\n\n{\n  \"label\": \"三元区\",\n  \"value\": \"350403\" },\n\n{\n  \"label\": \"明溪县\",\n  \"value\": \"350421\" },\n\n{\n  \"label\": \"清流县\",\n  \"value\": \"350423\" },\n\n{\n  \"label\": \"宁化县\",\n  \"value\": \"350424\" },\n\n{\n  \"label\": \"大田县\",\n  \"value\": \"350425\" },\n\n{\n  \"label\": \"尤溪县\",\n  \"value\": \"350426\" },\n\n{\n  \"label\": \"沙县\",\n  \"value\": \"350427\" },\n\n{\n  \"label\": \"将乐县\",\n  \"value\": \"350428\" },\n\n{\n  \"label\": \"泰宁县\",\n  \"value\": \"350429\" },\n\n{\n  \"label\": \"建宁县\",\n  \"value\": \"350430\" },\n\n{\n  \"label\": \"永安市\",\n  \"value\": \"350481\" }],\n\n\n[{\n  \"label\": \"鲤城区\",\n  \"value\": \"350502\" },\n\n{\n  \"label\": \"丰泽区\",\n  \"value\": \"350503\" },\n\n{\n  \"label\": \"洛江区\",\n  \"value\": \"350504\" },\n\n{\n  \"label\": \"泉港区\",\n  \"value\": \"350505\" },\n\n{\n  \"label\": \"惠安县\",\n  \"value\": \"350521\" },\n\n{\n  \"label\": \"安溪县\",\n  \"value\": \"350524\" },\n\n{\n  \"label\": \"永春县\",\n  \"value\": \"350525\" },\n\n{\n  \"label\": \"德化县\",\n  \"value\": \"350526\" },\n\n{\n  \"label\": \"金门县\",\n  \"value\": \"350527\" },\n\n{\n  \"label\": \"石狮市\",\n  \"value\": \"350581\" },\n\n{\n  \"label\": \"晋江市\",\n  \"value\": \"350582\" },\n\n{\n  \"label\": \"南安市\",\n  \"value\": \"350583\" }],\n\n\n[{\n  \"label\": \"芗城区\",\n  \"value\": \"350602\" },\n\n{\n  \"label\": \"龙文区\",\n  \"value\": \"350603\" },\n\n{\n  \"label\": \"云霄县\",\n  \"value\": \"350622\" },\n\n{\n  \"label\": \"漳浦县\",\n  \"value\": \"350623\" },\n\n{\n  \"label\": \"诏安县\",\n  \"value\": \"350624\" },\n\n{\n  \"label\": \"长泰县\",\n  \"value\": \"350625\" },\n\n{\n  \"label\": \"东山县\",\n  \"value\": \"350626\" },\n\n{\n  \"label\": \"南靖县\",\n  \"value\": \"350627\" },\n\n{\n  \"label\": \"平和县\",\n  \"value\": \"350628\" },\n\n{\n  \"label\": \"华安县\",\n  \"value\": \"350629\" },\n\n{\n  \"label\": \"龙海市\",\n  \"value\": \"350681\" }],\n\n\n[{\n  \"label\": \"延平区\",\n  \"value\": \"350702\" },\n\n{\n  \"label\": \"建阳区\",\n  \"value\": \"350703\" },\n\n{\n  \"label\": \"顺昌县\",\n  \"value\": \"350721\" },\n\n{\n  \"label\": \"浦城县\",\n  \"value\": \"350722\" },\n\n{\n  \"label\": \"光泽县\",\n  \"value\": \"350723\" },\n\n{\n  \"label\": \"松溪县\",\n  \"value\": \"350724\" },\n\n{\n  \"label\": \"政和县\",\n  \"value\": \"350725\" },\n\n{\n  \"label\": \"邵武市\",\n  \"value\": \"350781\" },\n\n{\n  \"label\": \"武夷山市\",\n  \"value\": \"350782\" },\n\n{\n  \"label\": \"建瓯市\",\n  \"value\": \"350783\" }],\n\n\n[{\n  \"label\": \"新罗区\",\n  \"value\": \"350802\" },\n\n{\n  \"label\": \"永定区\",\n  \"value\": \"350803\" },\n\n{\n  \"label\": \"长汀县\",\n  \"value\": \"350821\" },\n\n{\n  \"label\": \"上杭县\",\n  \"value\": \"350823\" },\n\n{\n  \"label\": \"武平县\",\n  \"value\": \"350824\" },\n\n{\n  \"label\": \"连城县\",\n  \"value\": \"350825\" },\n\n{\n  \"label\": \"漳平市\",\n  \"value\": \"350881\" }],\n\n\n[{\n  \"label\": \"蕉城区\",\n  \"value\": \"350902\" },\n\n{\n  \"label\": \"霞浦县\",\n  \"value\": \"350921\" },\n\n{\n  \"label\": \"古田县\",\n  \"value\": \"350922\" },\n\n{\n  \"label\": \"屏南县\",\n  \"value\": \"350923\" },\n\n{\n  \"label\": \"寿宁县\",\n  \"value\": \"350924\" },\n\n{\n  \"label\": \"周宁县\",\n  \"value\": \"350925\" },\n\n{\n  \"label\": \"柘荣县\",\n  \"value\": \"350926\" },\n\n{\n  \"label\": \"福安市\",\n  \"value\": \"350981\" },\n\n{\n  \"label\": \"福鼎市\",\n  \"value\": \"350982\" }]],\n\n\n\n[\n[{\n  \"label\": \"东湖区\",\n  \"value\": \"360102\" },\n\n{\n  \"label\": \"西湖区\",\n  \"value\": \"360103\" },\n\n{\n  \"label\": \"青云谱区\",\n  \"value\": \"360104\" },\n\n{\n  \"label\": \"湾里区\",\n  \"value\": \"360105\" },\n\n{\n  \"label\": \"青山湖区\",\n  \"value\": \"360111\" },\n\n{\n  \"label\": \"新建区\",\n  \"value\": \"360112\" },\n\n{\n  \"label\": \"南昌县\",\n  \"value\": \"360121\" },\n\n{\n  \"label\": \"安义县\",\n  \"value\": \"360123\" },\n\n{\n  \"label\": \"进贤县\",\n  \"value\": \"360124\" }],\n\n\n[{\n  \"label\": \"昌江区\",\n  \"value\": \"360202\" },\n\n{\n  \"label\": \"珠山区\",\n  \"value\": \"360203\" },\n\n{\n  \"label\": \"浮梁县\",\n  \"value\": \"360222\" },\n\n{\n  \"label\": \"乐平市\",\n  \"value\": \"360281\" }],\n\n\n[{\n  \"label\": \"安源区\",\n  \"value\": \"360302\" },\n\n{\n  \"label\": \"湘东区\",\n  \"value\": \"360313\" },\n\n{\n  \"label\": \"莲花县\",\n  \"value\": \"360321\" },\n\n{\n  \"label\": \"上栗县\",\n  \"value\": \"360322\" },\n\n{\n  \"label\": \"芦溪县\",\n  \"value\": \"360323\" }],\n\n\n[{\n  \"label\": \"濂溪区\",\n  \"value\": \"360402\" },\n\n{\n  \"label\": \"浔阳区\",\n  \"value\": \"360403\" },\n\n{\n  \"label\": \"柴桑区\",\n  \"value\": \"360404\" },\n\n{\n  \"label\": \"武宁县\",\n  \"value\": \"360423\" },\n\n{\n  \"label\": \"修水县\",\n  \"value\": \"360424\" },\n\n{\n  \"label\": \"永修县\",\n  \"value\": \"360425\" },\n\n{\n  \"label\": \"德安县\",\n  \"value\": \"360426\" },\n\n{\n  \"label\": \"都昌县\",\n  \"value\": \"360428\" },\n\n{\n  \"label\": \"湖口县\",\n  \"value\": \"360429\" },\n\n{\n  \"label\": \"彭泽县\",\n  \"value\": \"360430\" },\n\n{\n  \"label\": \"瑞昌市\",\n  \"value\": \"360481\" },\n\n{\n  \"label\": \"共青城市\",\n  \"value\": \"360482\" },\n\n{\n  \"label\": \"庐山市\",\n  \"value\": \"360483\" }],\n\n\n[{\n  \"label\": \"渝水区\",\n  \"value\": \"360502\" },\n\n{\n  \"label\": \"分宜县\",\n  \"value\": \"360521\" }],\n\n\n[{\n  \"label\": \"月湖区\",\n  \"value\": \"360602\" },\n\n{\n  \"label\": \"余江县\",\n  \"value\": \"360622\" },\n\n{\n  \"label\": \"贵溪市\",\n  \"value\": \"360681\" }],\n\n\n[{\n  \"label\": \"章贡区\",\n  \"value\": \"360702\" },\n\n{\n  \"label\": \"南康区\",\n  \"value\": \"360703\" },\n\n{\n  \"label\": \"赣县区\",\n  \"value\": \"360704\" },\n\n{\n  \"label\": \"信丰县\",\n  \"value\": \"360722\" },\n\n{\n  \"label\": \"大余县\",\n  \"value\": \"360723\" },\n\n{\n  \"label\": \"上犹县\",\n  \"value\": \"360724\" },\n\n{\n  \"label\": \"崇义县\",\n  \"value\": \"360725\" },\n\n{\n  \"label\": \"安远县\",\n  \"value\": \"360726\" },\n\n{\n  \"label\": \"龙南县\",\n  \"value\": \"360727\" },\n\n{\n  \"label\": \"定南县\",\n  \"value\": \"360728\" },\n\n{\n  \"label\": \"全南县\",\n  \"value\": \"360729\" },\n\n{\n  \"label\": \"宁都县\",\n  \"value\": \"360730\" },\n\n{\n  \"label\": \"于都县\",\n  \"value\": \"360731\" },\n\n{\n  \"label\": \"兴国县\",\n  \"value\": \"360732\" },\n\n{\n  \"label\": \"会昌县\",\n  \"value\": \"360733\" },\n\n{\n  \"label\": \"寻乌县\",\n  \"value\": \"360734\" },\n\n{\n  \"label\": \"石城县\",\n  \"value\": \"360735\" },\n\n{\n  \"label\": \"瑞金市\",\n  \"value\": \"360781\" }],\n\n\n[{\n  \"label\": \"吉州区\",\n  \"value\": \"360802\" },\n\n{\n  \"label\": \"青原区\",\n  \"value\": \"360803\" },\n\n{\n  \"label\": \"吉安县\",\n  \"value\": \"360821\" },\n\n{\n  \"label\": \"吉水县\",\n  \"value\": \"360822\" },\n\n{\n  \"label\": \"峡江县\",\n  \"value\": \"360823\" },\n\n{\n  \"label\": \"新干县\",\n  \"value\": \"360824\" },\n\n{\n  \"label\": \"永丰县\",\n  \"value\": \"360825\" },\n\n{\n  \"label\": \"泰和县\",\n  \"value\": \"360826\" },\n\n{\n  \"label\": \"遂川县\",\n  \"value\": \"360827\" },\n\n{\n  \"label\": \"万安县\",\n  \"value\": \"360828\" },\n\n{\n  \"label\": \"安福县\",\n  \"value\": \"360829\" },\n\n{\n  \"label\": \"永新县\",\n  \"value\": \"360830\" },\n\n{\n  \"label\": \"井冈山市\",\n  \"value\": \"360881\" }],\n\n\n[{\n  \"label\": \"袁州区\",\n  \"value\": \"360902\" },\n\n{\n  \"label\": \"奉新县\",\n  \"value\": \"360921\" },\n\n{\n  \"label\": \"万载县\",\n  \"value\": \"360922\" },\n\n{\n  \"label\": \"上高县\",\n  \"value\": \"360923\" },\n\n{\n  \"label\": \"宜丰县\",\n  \"value\": \"360924\" },\n\n{\n  \"label\": \"靖安县\",\n  \"value\": \"360925\" },\n\n{\n  \"label\": \"铜鼓县\",\n  \"value\": \"360926\" },\n\n{\n  \"label\": \"丰城市\",\n  \"value\": \"360981\" },\n\n{\n  \"label\": \"樟树市\",\n  \"value\": \"360982\" },\n\n{\n  \"label\": \"高安市\",\n  \"value\": \"360983\" }],\n\n\n[{\n  \"label\": \"临川区\",\n  \"value\": \"361002\" },\n\n{\n  \"label\": \"东乡区\",\n  \"value\": \"361003\" },\n\n{\n  \"label\": \"南城县\",\n  \"value\": \"361021\" },\n\n{\n  \"label\": \"黎川县\",\n  \"value\": \"361022\" },\n\n{\n  \"label\": \"南丰县\",\n  \"value\": \"361023\" },\n\n{\n  \"label\": \"崇仁县\",\n  \"value\": \"361024\" },\n\n{\n  \"label\": \"乐安县\",\n  \"value\": \"361025\" },\n\n{\n  \"label\": \"宜黄县\",\n  \"value\": \"361026\" },\n\n{\n  \"label\": \"金溪县\",\n  \"value\": \"361027\" },\n\n{\n  \"label\": \"资溪县\",\n  \"value\": \"361028\" },\n\n{\n  \"label\": \"广昌县\",\n  \"value\": \"361030\" }],\n\n\n[{\n  \"label\": \"信州区\",\n  \"value\": \"361102\" },\n\n{\n  \"label\": \"广丰区\",\n  \"value\": \"361103\" },\n\n{\n  \"label\": \"上饶县\",\n  \"value\": \"361121\" },\n\n{\n  \"label\": \"玉山县\",\n  \"value\": \"361123\" },\n\n{\n  \"label\": \"铅山县\",\n  \"value\": \"361124\" },\n\n{\n  \"label\": \"横峰县\",\n  \"value\": \"361125\" },\n\n{\n  \"label\": \"弋阳县\",\n  \"value\": \"361126\" },\n\n{\n  \"label\": \"余干县\",\n  \"value\": \"361127\" },\n\n{\n  \"label\": \"鄱阳县\",\n  \"value\": \"361128\" },\n\n{\n  \"label\": \"万年县\",\n  \"value\": \"361129\" },\n\n{\n  \"label\": \"婺源县\",\n  \"value\": \"361130\" },\n\n{\n  \"label\": \"德兴市\",\n  \"value\": \"361181\" }]],\n\n\n\n[\n[{\n  \"label\": \"历下区\",\n  \"value\": \"370102\" },\n\n{\n  \"label\": \"市中区\",\n  \"value\": \"370103\" },\n\n{\n  \"label\": \"槐荫区\",\n  \"value\": \"370104\" },\n\n{\n  \"label\": \"天桥区\",\n  \"value\": \"370105\" },\n\n{\n  \"label\": \"历城区\",\n  \"value\": \"370112\" },\n\n{\n  \"label\": \"长清区\",\n  \"value\": \"370113\" },\n\n{\n  \"label\": \"章丘区\",\n  \"value\": \"370114\" },\n\n{\n  \"label\": \"平阴县\",\n  \"value\": \"370124\" },\n\n{\n  \"label\": \"济阳县\",\n  \"value\": \"370125\" },\n\n{\n  \"label\": \"商河县\",\n  \"value\": \"370126\" },\n\n{\n  \"label\": \"济南高新技术产业开发区\",\n  \"value\": \"370171\" }],\n\n\n[{\n  \"label\": \"市南区\",\n  \"value\": \"370202\" },\n\n{\n  \"label\": \"市北区\",\n  \"value\": \"370203\" },\n\n{\n  \"label\": \"黄岛区\",\n  \"value\": \"370211\" },\n\n{\n  \"label\": \"崂山区\",\n  \"value\": \"370212\" },\n\n{\n  \"label\": \"李沧区\",\n  \"value\": \"370213\" },\n\n{\n  \"label\": \"城阳区\",\n  \"value\": \"370214\" },\n\n{\n  \"label\": \"即墨区\",\n  \"value\": \"370215\" },\n\n{\n  \"label\": \"青岛高新技术产业开发区\",\n  \"value\": \"370271\" },\n\n{\n  \"label\": \"胶州市\",\n  \"value\": \"370281\" },\n\n{\n  \"label\": \"平度市\",\n  \"value\": \"370283\" },\n\n{\n  \"label\": \"莱西市\",\n  \"value\": \"370285\" }],\n\n\n[{\n  \"label\": \"淄川区\",\n  \"value\": \"370302\" },\n\n{\n  \"label\": \"张店区\",\n  \"value\": \"370303\" },\n\n{\n  \"label\": \"博山区\",\n  \"value\": \"370304\" },\n\n{\n  \"label\": \"临淄区\",\n  \"value\": \"370305\" },\n\n{\n  \"label\": \"周村区\",\n  \"value\": \"370306\" },\n\n{\n  \"label\": \"桓台县\",\n  \"value\": \"370321\" },\n\n{\n  \"label\": \"高青县\",\n  \"value\": \"370322\" },\n\n{\n  \"label\": \"沂源县\",\n  \"value\": \"370323\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"370402\" },\n\n{\n  \"label\": \"薛城区\",\n  \"value\": \"370403\" },\n\n{\n  \"label\": \"峄城区\",\n  \"value\": \"370404\" },\n\n{\n  \"label\": \"台儿庄区\",\n  \"value\": \"370405\" },\n\n{\n  \"label\": \"山亭区\",\n  \"value\": \"370406\" },\n\n{\n  \"label\": \"滕州市\",\n  \"value\": \"370481\" }],\n\n\n[{\n  \"label\": \"东营区\",\n  \"value\": \"370502\" },\n\n{\n  \"label\": \"河口区\",\n  \"value\": \"370503\" },\n\n{\n  \"label\": \"垦利区\",\n  \"value\": \"370505\" },\n\n{\n  \"label\": \"利津县\",\n  \"value\": \"370522\" },\n\n{\n  \"label\": \"广饶县\",\n  \"value\": \"370523\" },\n\n{\n  \"label\": \"东营经济技术开发区\",\n  \"value\": \"370571\" },\n\n{\n  \"label\": \"东营港经济开发区\",\n  \"value\": \"370572\" }],\n\n\n[{\n  \"label\": \"芝罘区\",\n  \"value\": \"370602\" },\n\n{\n  \"label\": \"福山区\",\n  \"value\": \"370611\" },\n\n{\n  \"label\": \"牟平区\",\n  \"value\": \"370612\" },\n\n{\n  \"label\": \"莱山区\",\n  \"value\": \"370613\" },\n\n{\n  \"label\": \"长岛县\",\n  \"value\": \"370634\" },\n\n{\n  \"label\": \"烟台高新技术产业开发区\",\n  \"value\": \"370671\" },\n\n{\n  \"label\": \"烟台经济技术开发区\",\n  \"value\": \"370672\" },\n\n{\n  \"label\": \"龙口市\",\n  \"value\": \"370681\" },\n\n{\n  \"label\": \"莱阳市\",\n  \"value\": \"370682\" },\n\n{\n  \"label\": \"莱州市\",\n  \"value\": \"370683\" },\n\n{\n  \"label\": \"蓬莱市\",\n  \"value\": \"370684\" },\n\n{\n  \"label\": \"招远市\",\n  \"value\": \"370685\" },\n\n{\n  \"label\": \"栖霞市\",\n  \"value\": \"370686\" },\n\n{\n  \"label\": \"海阳市\",\n  \"value\": \"370687\" }],\n\n\n[{\n  \"label\": \"潍城区\",\n  \"value\": \"370702\" },\n\n{\n  \"label\": \"寒亭区\",\n  \"value\": \"370703\" },\n\n{\n  \"label\": \"坊子区\",\n  \"value\": \"370704\" },\n\n{\n  \"label\": \"奎文区\",\n  \"value\": \"370705\" },\n\n{\n  \"label\": \"临朐县\",\n  \"value\": \"370724\" },\n\n{\n  \"label\": \"昌乐县\",\n  \"value\": \"370725\" },\n\n{\n  \"label\": \"潍坊滨海经济技术开发区\",\n  \"value\": \"370772\" },\n\n{\n  \"label\": \"青州市\",\n  \"value\": \"370781\" },\n\n{\n  \"label\": \"诸城市\",\n  \"value\": \"370782\" },\n\n{\n  \"label\": \"寿光市\",\n  \"value\": \"370783\" },\n\n{\n  \"label\": \"安丘市\",\n  \"value\": \"370784\" },\n\n{\n  \"label\": \"高密市\",\n  \"value\": \"370785\" },\n\n{\n  \"label\": \"昌邑市\",\n  \"value\": \"370786\" }],\n\n\n[{\n  \"label\": \"任城区\",\n  \"value\": \"370811\" },\n\n{\n  \"label\": \"兖州区\",\n  \"value\": \"370812\" },\n\n{\n  \"label\": \"微山县\",\n  \"value\": \"370826\" },\n\n{\n  \"label\": \"鱼台县\",\n  \"value\": \"370827\" },\n\n{\n  \"label\": \"金乡县\",\n  \"value\": \"370828\" },\n\n{\n  \"label\": \"嘉祥县\",\n  \"value\": \"370829\" },\n\n{\n  \"label\": \"汶上县\",\n  \"value\": \"370830\" },\n\n{\n  \"label\": \"泗水县\",\n  \"value\": \"370831\" },\n\n{\n  \"label\": \"梁山县\",\n  \"value\": \"370832\" },\n\n{\n  \"label\": \"济宁高新技术产业开发区\",\n  \"value\": \"370871\" },\n\n{\n  \"label\": \"曲阜市\",\n  \"value\": \"370881\" },\n\n{\n  \"label\": \"邹城市\",\n  \"value\": \"370883\" }],\n\n\n[{\n  \"label\": \"泰山区\",\n  \"value\": \"370902\" },\n\n{\n  \"label\": \"岱岳区\",\n  \"value\": \"370911\" },\n\n{\n  \"label\": \"宁阳县\",\n  \"value\": \"370921\" },\n\n{\n  \"label\": \"东平县\",\n  \"value\": \"370923\" },\n\n{\n  \"label\": \"新泰市\",\n  \"value\": \"370982\" },\n\n{\n  \"label\": \"肥城市\",\n  \"value\": \"370983\" }],\n\n\n[{\n  \"label\": \"环翠区\",\n  \"value\": \"371002\" },\n\n{\n  \"label\": \"文登区\",\n  \"value\": \"371003\" },\n\n{\n  \"label\": \"威海火炬高技术产业开发区\",\n  \"value\": \"371071\" },\n\n{\n  \"label\": \"威海经济技术开发区\",\n  \"value\": \"371072\" },\n\n{\n  \"label\": \"威海临港经济技术开发区\",\n  \"value\": \"371073\" },\n\n{\n  \"label\": \"荣成市\",\n  \"value\": \"371082\" },\n\n{\n  \"label\": \"乳山市\",\n  \"value\": \"371083\" }],\n\n\n[{\n  \"label\": \"东港区\",\n  \"value\": \"371102\" },\n\n{\n  \"label\": \"岚山区\",\n  \"value\": \"371103\" },\n\n{\n  \"label\": \"五莲县\",\n  \"value\": \"371121\" },\n\n{\n  \"label\": \"莒县\",\n  \"value\": \"371122\" },\n\n{\n  \"label\": \"日照经济技术开发区\",\n  \"value\": \"371171\" },\n\n{\n  \"label\": \"日照国际海洋城\",\n  \"value\": \"371172\" }],\n\n\n[{\n  \"label\": \"莱城区\",\n  \"value\": \"371202\" },\n\n{\n  \"label\": \"钢城区\",\n  \"value\": \"371203\" }],\n\n\n[{\n  \"label\": \"兰山区\",\n  \"value\": \"371302\" },\n\n{\n  \"label\": \"罗庄区\",\n  \"value\": \"371311\" },\n\n{\n  \"label\": \"河东区\",\n  \"value\": \"371312\" },\n\n{\n  \"label\": \"沂南县\",\n  \"value\": \"371321\" },\n\n{\n  \"label\": \"郯城县\",\n  \"value\": \"371322\" },\n\n{\n  \"label\": \"沂水县\",\n  \"value\": \"371323\" },\n\n{\n  \"label\": \"兰陵县\",\n  \"value\": \"371324\" },\n\n{\n  \"label\": \"费县\",\n  \"value\": \"371325\" },\n\n{\n  \"label\": \"平邑县\",\n  \"value\": \"371326\" },\n\n{\n  \"label\": \"莒南县\",\n  \"value\": \"371327\" },\n\n{\n  \"label\": \"蒙阴县\",\n  \"value\": \"371328\" },\n\n{\n  \"label\": \"临沭县\",\n  \"value\": \"371329\" },\n\n{\n  \"label\": \"临沂高新技术产业开发区\",\n  \"value\": \"371371\" },\n\n{\n  \"label\": \"临沂经济技术开发区\",\n  \"value\": \"371372\" },\n\n{\n  \"label\": \"临沂临港经济开发区\",\n  \"value\": \"371373\" }],\n\n\n[{\n  \"label\": \"德城区\",\n  \"value\": \"371402\" },\n\n{\n  \"label\": \"陵城区\",\n  \"value\": \"371403\" },\n\n{\n  \"label\": \"宁津县\",\n  \"value\": \"371422\" },\n\n{\n  \"label\": \"庆云县\",\n  \"value\": \"371423\" },\n\n{\n  \"label\": \"临邑县\",\n  \"value\": \"371424\" },\n\n{\n  \"label\": \"齐河县\",\n  \"value\": \"371425\" },\n\n{\n  \"label\": \"平原县\",\n  \"value\": \"371426\" },\n\n{\n  \"label\": \"夏津县\",\n  \"value\": \"371427\" },\n\n{\n  \"label\": \"武城县\",\n  \"value\": \"371428\" },\n\n{\n  \"label\": \"德州经济技术开发区\",\n  \"value\": \"371471\" },\n\n{\n  \"label\": \"德州运河经济开发区\",\n  \"value\": \"371472\" },\n\n{\n  \"label\": \"乐陵市\",\n  \"value\": \"371481\" },\n\n{\n  \"label\": \"禹城市\",\n  \"value\": \"371482\" }],\n\n\n[{\n  \"label\": \"东昌府区\",\n  \"value\": \"371502\" },\n\n{\n  \"label\": \"阳谷县\",\n  \"value\": \"371521\" },\n\n{\n  \"label\": \"莘县\",\n  \"value\": \"371522\" },\n\n{\n  \"label\": \"茌平县\",\n  \"value\": \"371523\" },\n\n{\n  \"label\": \"东阿县\",\n  \"value\": \"371524\" },\n\n{\n  \"label\": \"冠县\",\n  \"value\": \"371525\" },\n\n{\n  \"label\": \"高唐县\",\n  \"value\": \"371526\" },\n\n{\n  \"label\": \"临清市\",\n  \"value\": \"371581\" }],\n\n\n[{\n  \"label\": \"滨城区\",\n  \"value\": \"371602\" },\n\n{\n  \"label\": \"沾化区\",\n  \"value\": \"371603\" },\n\n{\n  \"label\": \"惠民县\",\n  \"value\": \"371621\" },\n\n{\n  \"label\": \"阳信县\",\n  \"value\": \"371622\" },\n\n{\n  \"label\": \"无棣县\",\n  \"value\": \"371623\" },\n\n{\n  \"label\": \"博兴县\",\n  \"value\": \"371625\" },\n\n{\n  \"label\": \"邹平县\",\n  \"value\": \"371626\" }],\n\n\n[{\n  \"label\": \"牡丹区\",\n  \"value\": \"371702\" },\n\n{\n  \"label\": \"定陶区\",\n  \"value\": \"371703\" },\n\n{\n  \"label\": \"曹县\",\n  \"value\": \"371721\" },\n\n{\n  \"label\": \"单县\",\n  \"value\": \"371722\" },\n\n{\n  \"label\": \"成武县\",\n  \"value\": \"371723\" },\n\n{\n  \"label\": \"巨野县\",\n  \"value\": \"371724\" },\n\n{\n  \"label\": \"郓城县\",\n  \"value\": \"371725\" },\n\n{\n  \"label\": \"鄄城县\",\n  \"value\": \"371726\" },\n\n{\n  \"label\": \"东明县\",\n  \"value\": \"371728\" },\n\n{\n  \"label\": \"菏泽经济技术开发区\",\n  \"value\": \"371771\" },\n\n{\n  \"label\": \"菏泽高新技术开发区\",\n  \"value\": \"371772\" }]],\n\n\n\n[\n[{\n  \"label\": \"中原区\",\n  \"value\": \"410102\" },\n\n{\n  \"label\": \"二七区\",\n  \"value\": \"410103\" },\n\n{\n  \"label\": \"管城回族区\",\n  \"value\": \"410104\" },\n\n{\n  \"label\": \"金水区\",\n  \"value\": \"410105\" },\n\n{\n  \"label\": \"上街区\",\n  \"value\": \"410106\" },\n\n{\n  \"label\": \"惠济区\",\n  \"value\": \"410108\" },\n\n{\n  \"label\": \"中牟县\",\n  \"value\": \"410122\" },\n\n{\n  \"label\": \"郑州经济技术开发区\",\n  \"value\": \"410171\" },\n\n{\n  \"label\": \"郑州高新技术产业开发区\",\n  \"value\": \"410172\" },\n\n{\n  \"label\": \"郑州航空港经济综合实验区\",\n  \"value\": \"410173\" },\n\n{\n  \"label\": \"巩义市\",\n  \"value\": \"410181\" },\n\n{\n  \"label\": \"荥阳市\",\n  \"value\": \"410182\" },\n\n{\n  \"label\": \"新密市\",\n  \"value\": \"410183\" },\n\n{\n  \"label\": \"新郑市\",\n  \"value\": \"410184\" },\n\n{\n  \"label\": \"登封市\",\n  \"value\": \"410185\" }],\n\n\n[{\n  \"label\": \"龙亭区\",\n  \"value\": \"410202\" },\n\n{\n  \"label\": \"顺河回族区\",\n  \"value\": \"410203\" },\n\n{\n  \"label\": \"鼓楼区\",\n  \"value\": \"410204\" },\n\n{\n  \"label\": \"禹王台区\",\n  \"value\": \"410205\" },\n\n{\n  \"label\": \"祥符区\",\n  \"value\": \"410212\" },\n\n{\n  \"label\": \"杞县\",\n  \"value\": \"410221\" },\n\n{\n  \"label\": \"通许县\",\n  \"value\": \"410222\" },\n\n{\n  \"label\": \"尉氏县\",\n  \"value\": \"410223\" },\n\n{\n  \"label\": \"兰考县\",\n  \"value\": \"410225\" }],\n\n\n[{\n  \"label\": \"老城区\",\n  \"value\": \"410302\" },\n\n{\n  \"label\": \"西工区\",\n  \"value\": \"410303\" },\n\n{\n  \"label\": \"瀍河回族区\",\n  \"value\": \"410304\" },\n\n{\n  \"label\": \"涧西区\",\n  \"value\": \"410305\" },\n\n{\n  \"label\": \"吉利区\",\n  \"value\": \"410306\" },\n\n{\n  \"label\": \"洛龙区\",\n  \"value\": \"410311\" },\n\n{\n  \"label\": \"孟津县\",\n  \"value\": \"410322\" },\n\n{\n  \"label\": \"新安县\",\n  \"value\": \"410323\" },\n\n{\n  \"label\": \"栾川县\",\n  \"value\": \"410324\" },\n\n{\n  \"label\": \"嵩县\",\n  \"value\": \"410325\" },\n\n{\n  \"label\": \"汝阳县\",\n  \"value\": \"410326\" },\n\n{\n  \"label\": \"宜阳县\",\n  \"value\": \"410327\" },\n\n{\n  \"label\": \"洛宁县\",\n  \"value\": \"410328\" },\n\n{\n  \"label\": \"伊川县\",\n  \"value\": \"410329\" },\n\n{\n  \"label\": \"洛阳高新技术产业开发区\",\n  \"value\": \"410371\" },\n\n{\n  \"label\": \"偃师市\",\n  \"value\": \"410381\" }],\n\n\n[{\n  \"label\": \"新华区\",\n  \"value\": \"410402\" },\n\n{\n  \"label\": \"卫东区\",\n  \"value\": \"410403\" },\n\n{\n  \"label\": \"石龙区\",\n  \"value\": \"410404\" },\n\n{\n  \"label\": \"湛河区\",\n  \"value\": \"410411\" },\n\n{\n  \"label\": \"宝丰县\",\n  \"value\": \"410421\" },\n\n{\n  \"label\": \"叶县\",\n  \"value\": \"410422\" },\n\n{\n  \"label\": \"鲁山县\",\n  \"value\": \"410423\" },\n\n{\n  \"label\": \"郏县\",\n  \"value\": \"410425\" },\n\n{\n  \"label\": \"平顶山高新技术产业开发区\",\n  \"value\": \"410471\" },\n\n{\n  \"label\": \"平顶山市新城区\",\n  \"value\": \"410472\" },\n\n{\n  \"label\": \"舞钢市\",\n  \"value\": \"410481\" },\n\n{\n  \"label\": \"汝州市\",\n  \"value\": \"410482\" }],\n\n\n[{\n  \"label\": \"文峰区\",\n  \"value\": \"410502\" },\n\n{\n  \"label\": \"北关区\",\n  \"value\": \"410503\" },\n\n{\n  \"label\": \"殷都区\",\n  \"value\": \"410505\" },\n\n{\n  \"label\": \"龙安区\",\n  \"value\": \"410506\" },\n\n{\n  \"label\": \"安阳县\",\n  \"value\": \"410522\" },\n\n{\n  \"label\": \"汤阴县\",\n  \"value\": \"410523\" },\n\n{\n  \"label\": \"滑县\",\n  \"value\": \"410526\" },\n\n{\n  \"label\": \"内黄县\",\n  \"value\": \"410527\" },\n\n{\n  \"label\": \"安阳高新技术产业开发区\",\n  \"value\": \"410571\" },\n\n{\n  \"label\": \"林州市\",\n  \"value\": \"410581\" }],\n\n\n[{\n  \"label\": \"鹤山区\",\n  \"value\": \"410602\" },\n\n{\n  \"label\": \"山城区\",\n  \"value\": \"410603\" },\n\n{\n  \"label\": \"淇滨区\",\n  \"value\": \"410611\" },\n\n{\n  \"label\": \"浚县\",\n  \"value\": \"410621\" },\n\n{\n  \"label\": \"淇县\",\n  \"value\": \"410622\" },\n\n{\n  \"label\": \"鹤壁经济技术开发区\",\n  \"value\": \"410671\" }],\n\n\n[{\n  \"label\": \"红旗区\",\n  \"value\": \"410702\" },\n\n{\n  \"label\": \"卫滨区\",\n  \"value\": \"410703\" },\n\n{\n  \"label\": \"凤泉区\",\n  \"value\": \"410704\" },\n\n{\n  \"label\": \"牧野区\",\n  \"value\": \"410711\" },\n\n{\n  \"label\": \"新乡县\",\n  \"value\": \"410721\" },\n\n{\n  \"label\": \"获嘉县\",\n  \"value\": \"410724\" },\n\n{\n  \"label\": \"原阳县\",\n  \"value\": \"410725\" },\n\n{\n  \"label\": \"延津县\",\n  \"value\": \"410726\" },\n\n{\n  \"label\": \"封丘县\",\n  \"value\": \"410727\" },\n\n{\n  \"label\": \"长垣县\",\n  \"value\": \"410728\" },\n\n{\n  \"label\": \"新乡高新技术产业开发区\",\n  \"value\": \"410771\" },\n\n{\n  \"label\": \"新乡经济技术开发区\",\n  \"value\": \"410772\" },\n\n{\n  \"label\": \"新乡市平原城乡一体化示范区\",\n  \"value\": \"410773\" },\n\n{\n  \"label\": \"卫辉市\",\n  \"value\": \"410781\" },\n\n{\n  \"label\": \"辉县市\",\n  \"value\": \"410782\" }],\n\n\n[{\n  \"label\": \"解放区\",\n  \"value\": \"410802\" },\n\n{\n  \"label\": \"中站区\",\n  \"value\": \"410803\" },\n\n{\n  \"label\": \"马村区\",\n  \"value\": \"410804\" },\n\n{\n  \"label\": \"山阳区\",\n  \"value\": \"410811\" },\n\n{\n  \"label\": \"修武县\",\n  \"value\": \"410821\" },\n\n{\n  \"label\": \"博爱县\",\n  \"value\": \"410822\" },\n\n{\n  \"label\": \"武陟县\",\n  \"value\": \"410823\" },\n\n{\n  \"label\": \"温县\",\n  \"value\": \"410825\" },\n\n{\n  \"label\": \"焦作城乡一体化示范区\",\n  \"value\": \"410871\" },\n\n{\n  \"label\": \"沁阳市\",\n  \"value\": \"410882\" },\n\n{\n  \"label\": \"孟州市\",\n  \"value\": \"410883\" }],\n\n\n[{\n  \"label\": \"华龙区\",\n  \"value\": \"410902\" },\n\n{\n  \"label\": \"清丰县\",\n  \"value\": \"410922\" },\n\n{\n  \"label\": \"南乐县\",\n  \"value\": \"410923\" },\n\n{\n  \"label\": \"范县\",\n  \"value\": \"410926\" },\n\n{\n  \"label\": \"台前县\",\n  \"value\": \"410927\" },\n\n{\n  \"label\": \"濮阳县\",\n  \"value\": \"410928\" },\n\n{\n  \"label\": \"河南濮阳工业园区\",\n  \"value\": \"410971\" },\n\n{\n  \"label\": \"濮阳经济技术开发区\",\n  \"value\": \"410972\" }],\n\n\n[{\n  \"label\": \"魏都区\",\n  \"value\": \"411002\" },\n\n{\n  \"label\": \"建安区\",\n  \"value\": \"411003\" },\n\n{\n  \"label\": \"鄢陵县\",\n  \"value\": \"411024\" },\n\n{\n  \"label\": \"襄城县\",\n  \"value\": \"411025\" },\n\n{\n  \"label\": \"许昌经济技术开发区\",\n  \"value\": \"411071\" },\n\n{\n  \"label\": \"禹州市\",\n  \"value\": \"411081\" },\n\n{\n  \"label\": \"长葛市\",\n  \"value\": \"411082\" }],\n\n\n[{\n  \"label\": \"源汇区\",\n  \"value\": \"411102\" },\n\n{\n  \"label\": \"郾城区\",\n  \"value\": \"411103\" },\n\n{\n  \"label\": \"召陵区\",\n  \"value\": \"411104\" },\n\n{\n  \"label\": \"舞阳县\",\n  \"value\": \"411121\" },\n\n{\n  \"label\": \"临颍县\",\n  \"value\": \"411122\" },\n\n{\n  \"label\": \"漯河经济技术开发区\",\n  \"value\": \"411171\" }],\n\n\n[{\n  \"label\": \"湖滨区\",\n  \"value\": \"411202\" },\n\n{\n  \"label\": \"陕州区\",\n  \"value\": \"411203\" },\n\n{\n  \"label\": \"渑池县\",\n  \"value\": \"411221\" },\n\n{\n  \"label\": \"卢氏县\",\n  \"value\": \"411224\" },\n\n{\n  \"label\": \"河南三门峡经济开发区\",\n  \"value\": \"411271\" },\n\n{\n  \"label\": \"义马市\",\n  \"value\": \"411281\" },\n\n{\n  \"label\": \"灵宝市\",\n  \"value\": \"411282\" }],\n\n\n[{\n  \"label\": \"宛城区\",\n  \"value\": \"411302\" },\n\n{\n  \"label\": \"卧龙区\",\n  \"value\": \"411303\" },\n\n{\n  \"label\": \"南召县\",\n  \"value\": \"411321\" },\n\n{\n  \"label\": \"方城县\",\n  \"value\": \"411322\" },\n\n{\n  \"label\": \"西峡县\",\n  \"value\": \"411323\" },\n\n{\n  \"label\": \"镇平县\",\n  \"value\": \"411324\" },\n\n{\n  \"label\": \"内乡县\",\n  \"value\": \"411325\" },\n\n{\n  \"label\": \"淅川县\",\n  \"value\": \"411326\" },\n\n{\n  \"label\": \"社旗县\",\n  \"value\": \"411327\" },\n\n{\n  \"label\": \"唐河县\",\n  \"value\": \"411328\" },\n\n{\n  \"label\": \"新野县\",\n  \"value\": \"411329\" },\n\n{\n  \"label\": \"桐柏县\",\n  \"value\": \"411330\" },\n\n{\n  \"label\": \"南阳高新技术产业开发区\",\n  \"value\": \"411371\" },\n\n{\n  \"label\": \"南阳市城乡一体化示范区\",\n  \"value\": \"411372\" },\n\n{\n  \"label\": \"邓州市\",\n  \"value\": \"411381\" }],\n\n\n[{\n  \"label\": \"梁园区\",\n  \"value\": \"411402\" },\n\n{\n  \"label\": \"睢阳区\",\n  \"value\": \"411403\" },\n\n{\n  \"label\": \"民权县\",\n  \"value\": \"411421\" },\n\n{\n  \"label\": \"睢县\",\n  \"value\": \"411422\" },\n\n{\n  \"label\": \"宁陵县\",\n  \"value\": \"411423\" },\n\n{\n  \"label\": \"柘城县\",\n  \"value\": \"411424\" },\n\n{\n  \"label\": \"虞城县\",\n  \"value\": \"411425\" },\n\n{\n  \"label\": \"夏邑县\",\n  \"value\": \"411426\" },\n\n{\n  \"label\": \"豫东综合物流产业聚集区\",\n  \"value\": \"411471\" },\n\n{\n  \"label\": \"河南商丘经济开发区\",\n  \"value\": \"411472\" },\n\n{\n  \"label\": \"永城市\",\n  \"value\": \"411481\" }],\n\n\n[{\n  \"label\": \"浉河区\",\n  \"value\": \"411502\" },\n\n{\n  \"label\": \"平桥区\",\n  \"value\": \"411503\" },\n\n{\n  \"label\": \"罗山县\",\n  \"value\": \"411521\" },\n\n{\n  \"label\": \"光山县\",\n  \"value\": \"411522\" },\n\n{\n  \"label\": \"新县\",\n  \"value\": \"411523\" },\n\n{\n  \"label\": \"商城县\",\n  \"value\": \"411524\" },\n\n{\n  \"label\": \"固始县\",\n  \"value\": \"411525\" },\n\n{\n  \"label\": \"潢川县\",\n  \"value\": \"411526\" },\n\n{\n  \"label\": \"淮滨县\",\n  \"value\": \"411527\" },\n\n{\n  \"label\": \"息县\",\n  \"value\": \"411528\" },\n\n{\n  \"label\": \"信阳高新技术产业开发区\",\n  \"value\": \"411571\" }],\n\n\n[{\n  \"label\": \"川汇区\",\n  \"value\": \"411602\" },\n\n{\n  \"label\": \"扶沟县\",\n  \"value\": \"411621\" },\n\n{\n  \"label\": \"西华县\",\n  \"value\": \"411622\" },\n\n{\n  \"label\": \"商水县\",\n  \"value\": \"411623\" },\n\n{\n  \"label\": \"沈丘县\",\n  \"value\": \"411624\" },\n\n{\n  \"label\": \"郸城县\",\n  \"value\": \"411625\" },\n\n{\n  \"label\": \"淮阳县\",\n  \"value\": \"411626\" },\n\n{\n  \"label\": \"太康县\",\n  \"value\": \"411627\" },\n\n{\n  \"label\": \"鹿邑县\",\n  \"value\": \"411628\" },\n\n{\n  \"label\": \"河南周口经济开发区\",\n  \"value\": \"411671\" },\n\n{\n  \"label\": \"项城市\",\n  \"value\": \"411681\" }],\n\n\n[{\n  \"label\": \"驿城区\",\n  \"value\": \"411702\" },\n\n{\n  \"label\": \"西平县\",\n  \"value\": \"411721\" },\n\n{\n  \"label\": \"上蔡县\",\n  \"value\": \"411722\" },\n\n{\n  \"label\": \"平舆县\",\n  \"value\": \"411723\" },\n\n{\n  \"label\": \"正阳县\",\n  \"value\": \"411724\" },\n\n{\n  \"label\": \"确山县\",\n  \"value\": \"411725\" },\n\n{\n  \"label\": \"泌阳县\",\n  \"value\": \"411726\" },\n\n{\n  \"label\": \"汝南县\",\n  \"value\": \"411727\" },\n\n{\n  \"label\": \"遂平县\",\n  \"value\": \"411728\" },\n\n{\n  \"label\": \"新蔡县\",\n  \"value\": \"411729\" },\n\n{\n  \"label\": \"河南驻马店经济开发区\",\n  \"value\": \"411771\" }],\n\n\n[{\n  \"label\": \"济源市\",\n  \"value\": \"419001\" }]],\n\n\n[\n[{\n  \"label\": \"江岸区\",\n  \"value\": \"420102\" },\n\n{\n  \"label\": \"江汉区\",\n  \"value\": \"420103\" },\n\n{\n  \"label\": \"硚口区\",\n  \"value\": \"420104\" },\n\n{\n  \"label\": \"汉阳区\",\n  \"value\": \"420105\" },\n\n{\n  \"label\": \"武昌区\",\n  \"value\": \"420106\" },\n\n{\n  \"label\": \"青山区\",\n  \"value\": \"420107\" },\n\n{\n  \"label\": \"洪山区\",\n  \"value\": \"420111\" },\n\n{\n  \"label\": \"东西湖区\",\n  \"value\": \"420112\" },\n\n{\n  \"label\": \"汉南区\",\n  \"value\": \"420113\" },\n\n{\n  \"label\": \"蔡甸区\",\n  \"value\": \"420114\" },\n\n{\n  \"label\": \"江夏区\",\n  \"value\": \"420115\" },\n\n{\n  \"label\": \"黄陂区\",\n  \"value\": \"420116\" },\n\n{\n  \"label\": \"新洲区\",\n  \"value\": \"420117\" }],\n\n\n[{\n  \"label\": \"黄石港区\",\n  \"value\": \"420202\" },\n\n{\n  \"label\": \"西塞山区\",\n  \"value\": \"420203\" },\n\n{\n  \"label\": \"下陆区\",\n  \"value\": \"420204\" },\n\n{\n  \"label\": \"铁山区\",\n  \"value\": \"420205\" },\n\n{\n  \"label\": \"阳新县\",\n  \"value\": \"420222\" },\n\n{\n  \"label\": \"大冶市\",\n  \"value\": \"420281\" }],\n\n\n[{\n  \"label\": \"茅箭区\",\n  \"value\": \"420302\" },\n\n{\n  \"label\": \"张湾区\",\n  \"value\": \"420303\" },\n\n{\n  \"label\": \"郧阳区\",\n  \"value\": \"420304\" },\n\n{\n  \"label\": \"郧西县\",\n  \"value\": \"420322\" },\n\n{\n  \"label\": \"竹山县\",\n  \"value\": \"420323\" },\n\n{\n  \"label\": \"竹溪县\",\n  \"value\": \"420324\" },\n\n{\n  \"label\": \"房县\",\n  \"value\": \"420325\" },\n\n{\n  \"label\": \"丹江口市\",\n  \"value\": \"420381\" }],\n\n\n[{\n  \"label\": \"西陵区\",\n  \"value\": \"420502\" },\n\n{\n  \"label\": \"伍家岗区\",\n  \"value\": \"420503\" },\n\n{\n  \"label\": \"点军区\",\n  \"value\": \"420504\" },\n\n{\n  \"label\": \"猇亭区\",\n  \"value\": \"420505\" },\n\n{\n  \"label\": \"夷陵区\",\n  \"value\": \"420506\" },\n\n{\n  \"label\": \"远安县\",\n  \"value\": \"420525\" },\n\n{\n  \"label\": \"兴山县\",\n  \"value\": \"420526\" },\n\n{\n  \"label\": \"秭归县\",\n  \"value\": \"420527\" },\n\n{\n  \"label\": \"长阳土家族自治县\",\n  \"value\": \"420528\" },\n\n{\n  \"label\": \"五峰土家族自治县\",\n  \"value\": \"420529\" },\n\n{\n  \"label\": \"宜都市\",\n  \"value\": \"420581\" },\n\n{\n  \"label\": \"当阳市\",\n  \"value\": \"420582\" },\n\n{\n  \"label\": \"枝江市\",\n  \"value\": \"420583\" }],\n\n\n[{\n  \"label\": \"襄城区\",\n  \"value\": \"420602\" },\n\n{\n  \"label\": \"樊城区\",\n  \"value\": \"420606\" },\n\n{\n  \"label\": \"襄州区\",\n  \"value\": \"420607\" },\n\n{\n  \"label\": \"南漳县\",\n  \"value\": \"420624\" },\n\n{\n  \"label\": \"谷城县\",\n  \"value\": \"420625\" },\n\n{\n  \"label\": \"保康县\",\n  \"value\": \"420626\" },\n\n{\n  \"label\": \"老河口市\",\n  \"value\": \"420682\" },\n\n{\n  \"label\": \"枣阳市\",\n  \"value\": \"420683\" },\n\n{\n  \"label\": \"宜城市\",\n  \"value\": \"420684\" }],\n\n\n[{\n  \"label\": \"梁子湖区\",\n  \"value\": \"420702\" },\n\n{\n  \"label\": \"华容区\",\n  \"value\": \"420703\" },\n\n{\n  \"label\": \"鄂城区\",\n  \"value\": \"420704\" }],\n\n\n[{\n  \"label\": \"东宝区\",\n  \"value\": \"420802\" },\n\n{\n  \"label\": \"掇刀区\",\n  \"value\": \"420804\" },\n\n{\n  \"label\": \"京山县\",\n  \"value\": \"420821\" },\n\n{\n  \"label\": \"沙洋县\",\n  \"value\": \"420822\" },\n\n{\n  \"label\": \"钟祥市\",\n  \"value\": \"420881\" }],\n\n\n[{\n  \"label\": \"孝南区\",\n  \"value\": \"420902\" },\n\n{\n  \"label\": \"孝昌县\",\n  \"value\": \"420921\" },\n\n{\n  \"label\": \"大悟县\",\n  \"value\": \"420922\" },\n\n{\n  \"label\": \"云梦县\",\n  \"value\": \"420923\" },\n\n{\n  \"label\": \"应城市\",\n  \"value\": \"420981\" },\n\n{\n  \"label\": \"安陆市\",\n  \"value\": \"420982\" },\n\n{\n  \"label\": \"汉川市\",\n  \"value\": \"420984\" }],\n\n\n[{\n  \"label\": \"沙市区\",\n  \"value\": \"421002\" },\n\n{\n  \"label\": \"荆州区\",\n  \"value\": \"421003\" },\n\n{\n  \"label\": \"公安县\",\n  \"value\": \"421022\" },\n\n{\n  \"label\": \"监利县\",\n  \"value\": \"421023\" },\n\n{\n  \"label\": \"江陵县\",\n  \"value\": \"421024\" },\n\n{\n  \"label\": \"荆州经济技术开发区\",\n  \"value\": \"421071\" },\n\n{\n  \"label\": \"石首市\",\n  \"value\": \"421081\" },\n\n{\n  \"label\": \"洪湖市\",\n  \"value\": \"421083\" },\n\n{\n  \"label\": \"松滋市\",\n  \"value\": \"421087\" }],\n\n\n[{\n  \"label\": \"黄州区\",\n  \"value\": \"421102\" },\n\n{\n  \"label\": \"团风县\",\n  \"value\": \"421121\" },\n\n{\n  \"label\": \"红安县\",\n  \"value\": \"421122\" },\n\n{\n  \"label\": \"罗田县\",\n  \"value\": \"421123\" },\n\n{\n  \"label\": \"英山县\",\n  \"value\": \"421124\" },\n\n{\n  \"label\": \"浠水县\",\n  \"value\": \"421125\" },\n\n{\n  \"label\": \"蕲春县\",\n  \"value\": \"421126\" },\n\n{\n  \"label\": \"黄梅县\",\n  \"value\": \"421127\" },\n\n{\n  \"label\": \"龙感湖管理区\",\n  \"value\": \"421171\" },\n\n{\n  \"label\": \"麻城市\",\n  \"value\": \"421181\" },\n\n{\n  \"label\": \"武穴市\",\n  \"value\": \"421182\" }],\n\n\n[{\n  \"label\": \"咸安区\",\n  \"value\": \"421202\" },\n\n{\n  \"label\": \"嘉鱼县\",\n  \"value\": \"421221\" },\n\n{\n  \"label\": \"通城县\",\n  \"value\": \"421222\" },\n\n{\n  \"label\": \"崇阳县\",\n  \"value\": \"421223\" },\n\n{\n  \"label\": \"通山县\",\n  \"value\": \"421224\" },\n\n{\n  \"label\": \"赤壁市\",\n  \"value\": \"421281\" }],\n\n\n[{\n  \"label\": \"曾都区\",\n  \"value\": \"421303\" },\n\n{\n  \"label\": \"随县\",\n  \"value\": \"421321\" },\n\n{\n  \"label\": \"广水市\",\n  \"value\": \"421381\" }],\n\n\n[{\n  \"label\": \"恩施市\",\n  \"value\": \"422801\" },\n\n{\n  \"label\": \"利川市\",\n  \"value\": \"422802\" },\n\n{\n  \"label\": \"建始县\",\n  \"value\": \"422822\" },\n\n{\n  \"label\": \"巴东县\",\n  \"value\": \"422823\" },\n\n{\n  \"label\": \"宣恩县\",\n  \"value\": \"422825\" },\n\n{\n  \"label\": \"咸丰县\",\n  \"value\": \"422826\" },\n\n{\n  \"label\": \"来凤县\",\n  \"value\": \"422827\" },\n\n{\n  \"label\": \"鹤峰县\",\n  \"value\": \"422828\" }],\n\n\n[{\n  \"label\": \"仙桃市\",\n  \"value\": \"429004\" },\n\n{\n  \"label\": \"潜江市\",\n  \"value\": \"429005\" },\n\n{\n  \"label\": \"天门市\",\n  \"value\": \"429006\" },\n\n{\n  \"label\": \"神农架林区\",\n  \"value\": \"429021\" }]],\n\n\n\n[\n[{\n  \"label\": \"芙蓉区\",\n  \"value\": \"430102\" },\n\n{\n  \"label\": \"天心区\",\n  \"value\": \"430103\" },\n\n{\n  \"label\": \"岳麓区\",\n  \"value\": \"430104\" },\n\n{\n  \"label\": \"开福区\",\n  \"value\": \"430105\" },\n\n{\n  \"label\": \"雨花区\",\n  \"value\": \"430111\" },\n\n{\n  \"label\": \"望城区\",\n  \"value\": \"430112\" },\n\n{\n  \"label\": \"长沙县\",\n  \"value\": \"430121\" },\n\n{\n  \"label\": \"浏阳市\",\n  \"value\": \"430181\" },\n\n{\n  \"label\": \"宁乡市\",\n  \"value\": \"430182\" }],\n\n\n[{\n  \"label\": \"荷塘区\",\n  \"value\": \"430202\" },\n\n{\n  \"label\": \"芦淞区\",\n  \"value\": \"430203\" },\n\n{\n  \"label\": \"石峰区\",\n  \"value\": \"430204\" },\n\n{\n  \"label\": \"天元区\",\n  \"value\": \"430211\" },\n\n{\n  \"label\": \"株洲县\",\n  \"value\": \"430221\" },\n\n{\n  \"label\": \"攸县\",\n  \"value\": \"430223\" },\n\n{\n  \"label\": \"茶陵县\",\n  \"value\": \"430224\" },\n\n{\n  \"label\": \"炎陵县\",\n  \"value\": \"430225\" },\n\n{\n  \"label\": \"云龙示范区\",\n  \"value\": \"430271\" },\n\n{\n  \"label\": \"醴陵市\",\n  \"value\": \"430281\" }],\n\n\n[{\n  \"label\": \"雨湖区\",\n  \"value\": \"430302\" },\n\n{\n  \"label\": \"岳塘区\",\n  \"value\": \"430304\" },\n\n{\n  \"label\": \"湘潭县\",\n  \"value\": \"430321\" },\n\n{\n  \"label\": \"湖南湘潭高新技术产业园区\",\n  \"value\": \"430371\" },\n\n{\n  \"label\": \"湘潭昭山示范区\",\n  \"value\": \"430372\" },\n\n{\n  \"label\": \"湘潭九华示范区\",\n  \"value\": \"430373\" },\n\n{\n  \"label\": \"湘乡市\",\n  \"value\": \"430381\" },\n\n{\n  \"label\": \"韶山市\",\n  \"value\": \"430382\" }],\n\n\n[{\n  \"label\": \"珠晖区\",\n  \"value\": \"430405\" },\n\n{\n  \"label\": \"雁峰区\",\n  \"value\": \"430406\" },\n\n{\n  \"label\": \"石鼓区\",\n  \"value\": \"430407\" },\n\n{\n  \"label\": \"蒸湘区\",\n  \"value\": \"430408\" },\n\n{\n  \"label\": \"南岳区\",\n  \"value\": \"430412\" },\n\n{\n  \"label\": \"衡阳县\",\n  \"value\": \"430421\" },\n\n{\n  \"label\": \"衡南县\",\n  \"value\": \"430422\" },\n\n{\n  \"label\": \"衡山县\",\n  \"value\": \"430423\" },\n\n{\n  \"label\": \"衡东县\",\n  \"value\": \"430424\" },\n\n{\n  \"label\": \"祁东县\",\n  \"value\": \"430426\" },\n\n{\n  \"label\": \"衡阳综合保税区\",\n  \"value\": \"430471\" },\n\n{\n  \"label\": \"湖南衡阳高新技术产业园区\",\n  \"value\": \"430472\" },\n\n{\n  \"label\": \"湖南衡阳松木经济开发区\",\n  \"value\": \"430473\" },\n\n{\n  \"label\": \"耒阳市\",\n  \"value\": \"430481\" },\n\n{\n  \"label\": \"常宁市\",\n  \"value\": \"430482\" }],\n\n\n[{\n  \"label\": \"双清区\",\n  \"value\": \"430502\" },\n\n{\n  \"label\": \"大祥区\",\n  \"value\": \"430503\" },\n\n{\n  \"label\": \"北塔区\",\n  \"value\": \"430511\" },\n\n{\n  \"label\": \"邵东县\",\n  \"value\": \"430521\" },\n\n{\n  \"label\": \"新邵县\",\n  \"value\": \"430522\" },\n\n{\n  \"label\": \"邵阳县\",\n  \"value\": \"430523\" },\n\n{\n  \"label\": \"隆回县\",\n  \"value\": \"430524\" },\n\n{\n  \"label\": \"洞口县\",\n  \"value\": \"430525\" },\n\n{\n  \"label\": \"绥宁县\",\n  \"value\": \"430527\" },\n\n{\n  \"label\": \"新宁县\",\n  \"value\": \"430528\" },\n\n{\n  \"label\": \"城步苗族自治县\",\n  \"value\": \"430529\" },\n\n{\n  \"label\": \"武冈市\",\n  \"value\": \"430581\" }],\n\n\n[{\n  \"label\": \"岳阳楼区\",\n  \"value\": \"430602\" },\n\n{\n  \"label\": \"云溪区\",\n  \"value\": \"430603\" },\n\n{\n  \"label\": \"君山区\",\n  \"value\": \"430611\" },\n\n{\n  \"label\": \"岳阳县\",\n  \"value\": \"430621\" },\n\n{\n  \"label\": \"华容县\",\n  \"value\": \"430623\" },\n\n{\n  \"label\": \"湘阴县\",\n  \"value\": \"430624\" },\n\n{\n  \"label\": \"平江县\",\n  \"value\": \"430626\" },\n\n{\n  \"label\": \"岳阳市屈原管理区\",\n  \"value\": \"430671\" },\n\n{\n  \"label\": \"汨罗市\",\n  \"value\": \"430681\" },\n\n{\n  \"label\": \"临湘市\",\n  \"value\": \"430682\" }],\n\n\n[{\n  \"label\": \"武陵区\",\n  \"value\": \"430702\" },\n\n{\n  \"label\": \"鼎城区\",\n  \"value\": \"430703\" },\n\n{\n  \"label\": \"安乡县\",\n  \"value\": \"430721\" },\n\n{\n  \"label\": \"汉寿县\",\n  \"value\": \"430722\" },\n\n{\n  \"label\": \"澧县\",\n  \"value\": \"430723\" },\n\n{\n  \"label\": \"临澧县\",\n  \"value\": \"430724\" },\n\n{\n  \"label\": \"桃源县\",\n  \"value\": \"430725\" },\n\n{\n  \"label\": \"石门县\",\n  \"value\": \"430726\" },\n\n{\n  \"label\": \"常德市西洞庭管理区\",\n  \"value\": \"430771\" },\n\n{\n  \"label\": \"津市市\",\n  \"value\": \"430781\" }],\n\n\n[{\n  \"label\": \"永定区\",\n  \"value\": \"430802\" },\n\n{\n  \"label\": \"武陵源区\",\n  \"value\": \"430811\" },\n\n{\n  \"label\": \"慈利县\",\n  \"value\": \"430821\" },\n\n{\n  \"label\": \"桑植县\",\n  \"value\": \"430822\" }],\n\n\n[{\n  \"label\": \"资阳区\",\n  \"value\": \"430902\" },\n\n{\n  \"label\": \"赫山区\",\n  \"value\": \"430903\" },\n\n{\n  \"label\": \"南县\",\n  \"value\": \"430921\" },\n\n{\n  \"label\": \"桃江县\",\n  \"value\": \"430922\" },\n\n{\n  \"label\": \"安化县\",\n  \"value\": \"430923\" },\n\n{\n  \"label\": \"益阳市大通湖管理区\",\n  \"value\": \"430971\" },\n\n{\n  \"label\": \"湖南益阳高新技术产业园区\",\n  \"value\": \"430972\" },\n\n{\n  \"label\": \"沅江市\",\n  \"value\": \"430981\" }],\n\n\n[{\n  \"label\": \"北湖区\",\n  \"value\": \"431002\" },\n\n{\n  \"label\": \"苏仙区\",\n  \"value\": \"431003\" },\n\n{\n  \"label\": \"桂阳县\",\n  \"value\": \"431021\" },\n\n{\n  \"label\": \"宜章县\",\n  \"value\": \"431022\" },\n\n{\n  \"label\": \"永兴县\",\n  \"value\": \"431023\" },\n\n{\n  \"label\": \"嘉禾县\",\n  \"value\": \"431024\" },\n\n{\n  \"label\": \"临武县\",\n  \"value\": \"431025\" },\n\n{\n  \"label\": \"汝城县\",\n  \"value\": \"431026\" },\n\n{\n  \"label\": \"桂东县\",\n  \"value\": \"431027\" },\n\n{\n  \"label\": \"安仁县\",\n  \"value\": \"431028\" },\n\n{\n  \"label\": \"资兴市\",\n  \"value\": \"431081\" }],\n\n\n[{\n  \"label\": \"零陵区\",\n  \"value\": \"431102\" },\n\n{\n  \"label\": \"冷水滩区\",\n  \"value\": \"431103\" },\n\n{\n  \"label\": \"祁阳县\",\n  \"value\": \"431121\" },\n\n{\n  \"label\": \"东安县\",\n  \"value\": \"431122\" },\n\n{\n  \"label\": \"双牌县\",\n  \"value\": \"431123\" },\n\n{\n  \"label\": \"道县\",\n  \"value\": \"431124\" },\n\n{\n  \"label\": \"江永县\",\n  \"value\": \"431125\" },\n\n{\n  \"label\": \"宁远县\",\n  \"value\": \"431126\" },\n\n{\n  \"label\": \"蓝山县\",\n  \"value\": \"431127\" },\n\n{\n  \"label\": \"新田县\",\n  \"value\": \"431128\" },\n\n{\n  \"label\": \"江华瑶族自治县\",\n  \"value\": \"431129\" },\n\n{\n  \"label\": \"永州经济技术开发区\",\n  \"value\": \"431171\" },\n\n{\n  \"label\": \"永州市金洞管理区\",\n  \"value\": \"431172\" },\n\n{\n  \"label\": \"永州市回龙圩管理区\",\n  \"value\": \"431173\" }],\n\n\n[{\n  \"label\": \"鹤城区\",\n  \"value\": \"431202\" },\n\n{\n  \"label\": \"中方县\",\n  \"value\": \"431221\" },\n\n{\n  \"label\": \"沅陵县\",\n  \"value\": \"431222\" },\n\n{\n  \"label\": \"辰溪县\",\n  \"value\": \"431223\" },\n\n{\n  \"label\": \"溆浦县\",\n  \"value\": \"431224\" },\n\n{\n  \"label\": \"会同县\",\n  \"value\": \"431225\" },\n\n{\n  \"label\": \"麻阳苗族自治县\",\n  \"value\": \"431226\" },\n\n{\n  \"label\": \"新晃侗族自治县\",\n  \"value\": \"431227\" },\n\n{\n  \"label\": \"芷江侗族自治县\",\n  \"value\": \"431228\" },\n\n{\n  \"label\": \"靖州苗族侗族自治县\",\n  \"value\": \"431229\" },\n\n{\n  \"label\": \"通道侗族自治县\",\n  \"value\": \"431230\" },\n\n{\n  \"label\": \"怀化市洪江管理区\",\n  \"value\": \"431271\" },\n\n{\n  \"label\": \"洪江市\",\n  \"value\": \"431281\" }],\n\n\n[{\n  \"label\": \"娄星区\",\n  \"value\": \"431302\" },\n\n{\n  \"label\": \"双峰县\",\n  \"value\": \"431321\" },\n\n{\n  \"label\": \"新化县\",\n  \"value\": \"431322\" },\n\n{\n  \"label\": \"冷水江市\",\n  \"value\": \"431381\" },\n\n{\n  \"label\": \"涟源市\",\n  \"value\": \"431382\" }],\n\n\n[{\n  \"label\": \"吉首市\",\n  \"value\": \"433101\" },\n\n{\n  \"label\": \"泸溪县\",\n  \"value\": \"433122\" },\n\n{\n  \"label\": \"凤凰县\",\n  \"value\": \"433123\" },\n\n{\n  \"label\": \"花垣县\",\n  \"value\": \"433124\" },\n\n{\n  \"label\": \"保靖县\",\n  \"value\": \"433125\" },\n\n{\n  \"label\": \"古丈县\",\n  \"value\": \"433126\" },\n\n{\n  \"label\": \"永顺县\",\n  \"value\": \"433127\" },\n\n{\n  \"label\": \"龙山县\",\n  \"value\": \"433130\" },\n\n{\n  \"label\": \"湖南吉首经济开发区\",\n  \"value\": \"433172\" },\n\n{\n  \"label\": \"湖南永顺经济开发区\",\n  \"value\": \"433173\" }]],\n\n\n\n[\n[{\n  \"label\": \"荔湾区\",\n  \"value\": \"440103\" },\n\n{\n  \"label\": \"越秀区\",\n  \"value\": \"440104\" },\n\n{\n  \"label\": \"海珠区\",\n  \"value\": \"440105\" },\n\n{\n  \"label\": \"天河区\",\n  \"value\": \"440106\" },\n\n{\n  \"label\": \"白云区\",\n  \"value\": \"440111\" },\n\n{\n  \"label\": \"黄埔区\",\n  \"value\": \"440112\" },\n\n{\n  \"label\": \"番禺区\",\n  \"value\": \"440113\" },\n\n{\n  \"label\": \"花都区\",\n  \"value\": \"440114\" },\n\n{\n  \"label\": \"南沙区\",\n  \"value\": \"440115\" },\n\n{\n  \"label\": \"从化区\",\n  \"value\": \"440117\" },\n\n{\n  \"label\": \"增城区\",\n  \"value\": \"440118\" }],\n\n\n[{\n  \"label\": \"武江区\",\n  \"value\": \"440203\" },\n\n{\n  \"label\": \"浈江区\",\n  \"value\": \"440204\" },\n\n{\n  \"label\": \"曲江区\",\n  \"value\": \"440205\" },\n\n{\n  \"label\": \"始兴县\",\n  \"value\": \"440222\" },\n\n{\n  \"label\": \"仁化县\",\n  \"value\": \"440224\" },\n\n{\n  \"label\": \"翁源县\",\n  \"value\": \"440229\" },\n\n{\n  \"label\": \"乳源瑶族自治县\",\n  \"value\": \"440232\" },\n\n{\n  \"label\": \"新丰县\",\n  \"value\": \"440233\" },\n\n{\n  \"label\": \"乐昌市\",\n  \"value\": \"440281\" },\n\n{\n  \"label\": \"南雄市\",\n  \"value\": \"440282\" }],\n\n\n[{\n  \"label\": \"罗湖区\",\n  \"value\": \"440303\" },\n\n{\n  \"label\": \"福田区\",\n  \"value\": \"440304\" },\n\n{\n  \"label\": \"南山区\",\n  \"value\": \"440305\" },\n\n{\n  \"label\": \"宝安区\",\n  \"value\": \"440306\" },\n\n{\n  \"label\": \"龙岗区\",\n  \"value\": \"440307\" },\n\n{\n  \"label\": \"盐田区\",\n  \"value\": \"440308\" },\n\n{\n  \"label\": \"龙华区\",\n  \"value\": \"440309\" },\n\n{\n  \"label\": \"坪山区\",\n  \"value\": \"440310\" }],\n\n\n[{\n  \"label\": \"香洲区\",\n  \"value\": \"440402\" },\n\n{\n  \"label\": \"斗门区\",\n  \"value\": \"440403\" },\n\n{\n  \"label\": \"金湾区\",\n  \"value\": \"440404\" }],\n\n\n[{\n  \"label\": \"龙湖区\",\n  \"value\": \"440507\" },\n\n{\n  \"label\": \"金平区\",\n  \"value\": \"440511\" },\n\n{\n  \"label\": \"濠江区\",\n  \"value\": \"440512\" },\n\n{\n  \"label\": \"潮阳区\",\n  \"value\": \"440513\" },\n\n{\n  \"label\": \"潮南区\",\n  \"value\": \"440514\" },\n\n{\n  \"label\": \"澄海区\",\n  \"value\": \"440515\" },\n\n{\n  \"label\": \"南澳县\",\n  \"value\": \"440523\" }],\n\n\n[{\n  \"label\": \"禅城区\",\n  \"value\": \"440604\" },\n\n{\n  \"label\": \"南海区\",\n  \"value\": \"440605\" },\n\n{\n  \"label\": \"顺德区\",\n  \"value\": \"440606\" },\n\n{\n  \"label\": \"三水区\",\n  \"value\": \"440607\" },\n\n{\n  \"label\": \"高明区\",\n  \"value\": \"440608\" }],\n\n\n[{\n  \"label\": \"蓬江区\",\n  \"value\": \"440703\" },\n\n{\n  \"label\": \"江海区\",\n  \"value\": \"440704\" },\n\n{\n  \"label\": \"新会区\",\n  \"value\": \"440705\" },\n\n{\n  \"label\": \"台山市\",\n  \"value\": \"440781\" },\n\n{\n  \"label\": \"开平市\",\n  \"value\": \"440783\" },\n\n{\n  \"label\": \"鹤山市\",\n  \"value\": \"440784\" },\n\n{\n  \"label\": \"恩平市\",\n  \"value\": \"440785\" }],\n\n\n[{\n  \"label\": \"赤坎区\",\n  \"value\": \"440802\" },\n\n{\n  \"label\": \"霞山区\",\n  \"value\": \"440803\" },\n\n{\n  \"label\": \"坡头区\",\n  \"value\": \"440804\" },\n\n{\n  \"label\": \"麻章区\",\n  \"value\": \"440811\" },\n\n{\n  \"label\": \"遂溪县\",\n  \"value\": \"440823\" },\n\n{\n  \"label\": \"徐闻县\",\n  \"value\": \"440825\" },\n\n{\n  \"label\": \"廉江市\",\n  \"value\": \"440881\" },\n\n{\n  \"label\": \"雷州市\",\n  \"value\": \"440882\" },\n\n{\n  \"label\": \"吴川市\",\n  \"value\": \"440883\" }],\n\n\n[{\n  \"label\": \"茂南区\",\n  \"value\": \"440902\" },\n\n{\n  \"label\": \"电白区\",\n  \"value\": \"440904\" },\n\n{\n  \"label\": \"高州市\",\n  \"value\": \"440981\" },\n\n{\n  \"label\": \"化州市\",\n  \"value\": \"440982\" },\n\n{\n  \"label\": \"信宜市\",\n  \"value\": \"440983\" }],\n\n\n[{\n  \"label\": \"端州区\",\n  \"value\": \"441202\" },\n\n{\n  \"label\": \"鼎湖区\",\n  \"value\": \"441203\" },\n\n{\n  \"label\": \"高要区\",\n  \"value\": \"441204\" },\n\n{\n  \"label\": \"广宁县\",\n  \"value\": \"441223\" },\n\n{\n  \"label\": \"怀集县\",\n  \"value\": \"441224\" },\n\n{\n  \"label\": \"封开县\",\n  \"value\": \"441225\" },\n\n{\n  \"label\": \"德庆县\",\n  \"value\": \"441226\" },\n\n{\n  \"label\": \"四会市\",\n  \"value\": \"441284\" }],\n\n\n[{\n  \"label\": \"惠城区\",\n  \"value\": \"441302\" },\n\n{\n  \"label\": \"惠阳区\",\n  \"value\": \"441303\" },\n\n{\n  \"label\": \"博罗县\",\n  \"value\": \"441322\" },\n\n{\n  \"label\": \"惠东县\",\n  \"value\": \"441323\" },\n\n{\n  \"label\": \"龙门县\",\n  \"value\": \"441324\" }],\n\n\n[{\n  \"label\": \"梅江区\",\n  \"value\": \"441402\" },\n\n{\n  \"label\": \"梅县区\",\n  \"value\": \"441403\" },\n\n{\n  \"label\": \"大埔县\",\n  \"value\": \"441422\" },\n\n{\n  \"label\": \"丰顺县\",\n  \"value\": \"441423\" },\n\n{\n  \"label\": \"五华县\",\n  \"value\": \"441424\" },\n\n{\n  \"label\": \"平远县\",\n  \"value\": \"441426\" },\n\n{\n  \"label\": \"蕉岭县\",\n  \"value\": \"441427\" },\n\n{\n  \"label\": \"兴宁市\",\n  \"value\": \"441481\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"441502\" },\n\n{\n  \"label\": \"海丰县\",\n  \"value\": \"441521\" },\n\n{\n  \"label\": \"陆河县\",\n  \"value\": \"441523\" },\n\n{\n  \"label\": \"陆丰市\",\n  \"value\": \"441581\" }],\n\n\n[{\n  \"label\": \"源城区\",\n  \"value\": \"441602\" },\n\n{\n  \"label\": \"紫金县\",\n  \"value\": \"441621\" },\n\n{\n  \"label\": \"龙川县\",\n  \"value\": \"441622\" },\n\n{\n  \"label\": \"连平县\",\n  \"value\": \"441623\" },\n\n{\n  \"label\": \"和平县\",\n  \"value\": \"441624\" },\n\n{\n  \"label\": \"东源县\",\n  \"value\": \"441625\" }],\n\n\n[{\n  \"label\": \"江城区\",\n  \"value\": \"441702\" },\n\n{\n  \"label\": \"阳东区\",\n  \"value\": \"441704\" },\n\n{\n  \"label\": \"阳西县\",\n  \"value\": \"441721\" },\n\n{\n  \"label\": \"阳春市\",\n  \"value\": \"441781\" }],\n\n\n[{\n  \"label\": \"清城区\",\n  \"value\": \"441802\" },\n\n{\n  \"label\": \"清新区\",\n  \"value\": \"441803\" },\n\n{\n  \"label\": \"佛冈县\",\n  \"value\": \"441821\" },\n\n{\n  \"label\": \"阳山县\",\n  \"value\": \"441823\" },\n\n{\n  \"label\": \"连山壮族瑶族自治县\",\n  \"value\": \"441825\" },\n\n{\n  \"label\": \"连南瑶族自治县\",\n  \"value\": \"441826\" },\n\n{\n  \"label\": \"英德市\",\n  \"value\": \"441881\" },\n\n{\n  \"label\": \"连州市\",\n  \"value\": \"441882\" }],\n\n\n[{\n  \"label\": \"东莞市\",\n  \"value\": \"441900\" }],\n\n[{\n  \"label\": \"中山市\",\n  \"value\": \"442000\" }],\n\n[{\n  \"label\": \"湘桥区\",\n  \"value\": \"445102\" },\n\n{\n  \"label\": \"潮安区\",\n  \"value\": \"445103\" },\n\n{\n  \"label\": \"饶平县\",\n  \"value\": \"445122\" }],\n\n\n[{\n  \"label\": \"榕城区\",\n  \"value\": \"445202\" },\n\n{\n  \"label\": \"揭东区\",\n  \"value\": \"445203\" },\n\n{\n  \"label\": \"揭西县\",\n  \"value\": \"445222\" },\n\n{\n  \"label\": \"惠来县\",\n  \"value\": \"445224\" },\n\n{\n  \"label\": \"普宁市\",\n  \"value\": \"445281\" }],\n\n\n[{\n  \"label\": \"云城区\",\n  \"value\": \"445302\" },\n\n{\n  \"label\": \"云安区\",\n  \"value\": \"445303\" },\n\n{\n  \"label\": \"新兴县\",\n  \"value\": \"445321\" },\n\n{\n  \"label\": \"郁南县\",\n  \"value\": \"445322\" },\n\n{\n  \"label\": \"罗定市\",\n  \"value\": \"445381\" }]],\n\n\n\n[\n[{\n  \"label\": \"兴宁区\",\n  \"value\": \"450102\" },\n\n{\n  \"label\": \"青秀区\",\n  \"value\": \"450103\" },\n\n{\n  \"label\": \"江南区\",\n  \"value\": \"450105\" },\n\n{\n  \"label\": \"西乡塘区\",\n  \"value\": \"450107\" },\n\n{\n  \"label\": \"良庆区\",\n  \"value\": \"450108\" },\n\n{\n  \"label\": \"邕宁区\",\n  \"value\": \"450109\" },\n\n{\n  \"label\": \"武鸣区\",\n  \"value\": \"450110\" },\n\n{\n  \"label\": \"隆安县\",\n  \"value\": \"450123\" },\n\n{\n  \"label\": \"马山县\",\n  \"value\": \"450124\" },\n\n{\n  \"label\": \"上林县\",\n  \"value\": \"450125\" },\n\n{\n  \"label\": \"宾阳县\",\n  \"value\": \"450126\" },\n\n{\n  \"label\": \"横县\",\n  \"value\": \"450127\" }],\n\n\n[{\n  \"label\": \"城中区\",\n  \"value\": \"450202\" },\n\n{\n  \"label\": \"鱼峰区\",\n  \"value\": \"450203\" },\n\n{\n  \"label\": \"柳南区\",\n  \"value\": \"450204\" },\n\n{\n  \"label\": \"柳北区\",\n  \"value\": \"450205\" },\n\n{\n  \"label\": \"柳江区\",\n  \"value\": \"450206\" },\n\n{\n  \"label\": \"柳城县\",\n  \"value\": \"450222\" },\n\n{\n  \"label\": \"鹿寨县\",\n  \"value\": \"450223\" },\n\n{\n  \"label\": \"融安县\",\n  \"value\": \"450224\" },\n\n{\n  \"label\": \"融水苗族自治县\",\n  \"value\": \"450225\" },\n\n{\n  \"label\": \"三江侗族自治县\",\n  \"value\": \"450226\" }],\n\n\n[{\n  \"label\": \"秀峰区\",\n  \"value\": \"450302\" },\n\n{\n  \"label\": \"叠彩区\",\n  \"value\": \"450303\" },\n\n{\n  \"label\": \"象山区\",\n  \"value\": \"450304\" },\n\n{\n  \"label\": \"七星区\",\n  \"value\": \"450305\" },\n\n{\n  \"label\": \"雁山区\",\n  \"value\": \"450311\" },\n\n{\n  \"label\": \"临桂区\",\n  \"value\": \"450312\" },\n\n{\n  \"label\": \"阳朔县\",\n  \"value\": \"450321\" },\n\n{\n  \"label\": \"灵川县\",\n  \"value\": \"450323\" },\n\n{\n  \"label\": \"全州县\",\n  \"value\": \"450324\" },\n\n{\n  \"label\": \"兴安县\",\n  \"value\": \"450325\" },\n\n{\n  \"label\": \"永福县\",\n  \"value\": \"450326\" },\n\n{\n  \"label\": \"灌阳县\",\n  \"value\": \"450327\" },\n\n{\n  \"label\": \"龙胜各族自治县\",\n  \"value\": \"450328\" },\n\n{\n  \"label\": \"资源县\",\n  \"value\": \"450329\" },\n\n{\n  \"label\": \"平乐县\",\n  \"value\": \"450330\" },\n\n{\n  \"label\": \"荔浦县\",\n  \"value\": \"450331\" },\n\n{\n  \"label\": \"恭城瑶族自治县\",\n  \"value\": \"450332\" }],\n\n\n[{\n  \"label\": \"万秀区\",\n  \"value\": \"450403\" },\n\n{\n  \"label\": \"长洲区\",\n  \"value\": \"450405\" },\n\n{\n  \"label\": \"龙圩区\",\n  \"value\": \"450406\" },\n\n{\n  \"label\": \"苍梧县\",\n  \"value\": \"450421\" },\n\n{\n  \"label\": \"藤县\",\n  \"value\": \"450422\" },\n\n{\n  \"label\": \"蒙山县\",\n  \"value\": \"450423\" },\n\n{\n  \"label\": \"岑溪市\",\n  \"value\": \"450481\" }],\n\n\n[{\n  \"label\": \"海城区\",\n  \"value\": \"450502\" },\n\n{\n  \"label\": \"银海区\",\n  \"value\": \"450503\" },\n\n{\n  \"label\": \"铁山港区\",\n  \"value\": \"450512\" },\n\n{\n  \"label\": \"合浦县\",\n  \"value\": \"450521\" }],\n\n\n[{\n  \"label\": \"港口区\",\n  \"value\": \"450602\" },\n\n{\n  \"label\": \"防城区\",\n  \"value\": \"450603\" },\n\n{\n  \"label\": \"上思县\",\n  \"value\": \"450621\" },\n\n{\n  \"label\": \"东兴市\",\n  \"value\": \"450681\" }],\n\n\n[{\n  \"label\": \"钦南区\",\n  \"value\": \"450702\" },\n\n{\n  \"label\": \"钦北区\",\n  \"value\": \"450703\" },\n\n{\n  \"label\": \"灵山县\",\n  \"value\": \"450721\" },\n\n{\n  \"label\": \"浦北县\",\n  \"value\": \"450722\" }],\n\n\n[{\n  \"label\": \"港北区\",\n  \"value\": \"450802\" },\n\n{\n  \"label\": \"港南区\",\n  \"value\": \"450803\" },\n\n{\n  \"label\": \"覃塘区\",\n  \"value\": \"450804\" },\n\n{\n  \"label\": \"平南县\",\n  \"value\": \"450821\" },\n\n{\n  \"label\": \"桂平市\",\n  \"value\": \"450881\" }],\n\n\n[{\n  \"label\": \"玉州区\",\n  \"value\": \"450902\" },\n\n{\n  \"label\": \"福绵区\",\n  \"value\": \"450903\" },\n\n{\n  \"label\": \"容县\",\n  \"value\": \"450921\" },\n\n{\n  \"label\": \"陆川县\",\n  \"value\": \"450922\" },\n\n{\n  \"label\": \"博白县\",\n  \"value\": \"450923\" },\n\n{\n  \"label\": \"兴业县\",\n  \"value\": \"450924\" },\n\n{\n  \"label\": \"北流市\",\n  \"value\": \"450981\" }],\n\n\n[{\n  \"label\": \"右江区\",\n  \"value\": \"451002\" },\n\n{\n  \"label\": \"田阳县\",\n  \"value\": \"451021\" },\n\n{\n  \"label\": \"田东县\",\n  \"value\": \"451022\" },\n\n{\n  \"label\": \"平果县\",\n  \"value\": \"451023\" },\n\n{\n  \"label\": \"德保县\",\n  \"value\": \"451024\" },\n\n{\n  \"label\": \"那坡县\",\n  \"value\": \"451026\" },\n\n{\n  \"label\": \"凌云县\",\n  \"value\": \"451027\" },\n\n{\n  \"label\": \"乐业县\",\n  \"value\": \"451028\" },\n\n{\n  \"label\": \"田林县\",\n  \"value\": \"451029\" },\n\n{\n  \"label\": \"西林县\",\n  \"value\": \"451030\" },\n\n{\n  \"label\": \"隆林各族自治县\",\n  \"value\": \"451031\" },\n\n{\n  \"label\": \"靖西市\",\n  \"value\": \"451081\" }],\n\n\n[{\n  \"label\": \"八步区\",\n  \"value\": \"451102\" },\n\n{\n  \"label\": \"平桂区\",\n  \"value\": \"451103\" },\n\n{\n  \"label\": \"昭平县\",\n  \"value\": \"451121\" },\n\n{\n  \"label\": \"钟山县\",\n  \"value\": \"451122\" },\n\n{\n  \"label\": \"富川瑶族自治县\",\n  \"value\": \"451123\" }],\n\n\n[{\n  \"label\": \"金城江区\",\n  \"value\": \"451202\" },\n\n{\n  \"label\": \"宜州区\",\n  \"value\": \"451203\" },\n\n{\n  \"label\": \"南丹县\",\n  \"value\": \"451221\" },\n\n{\n  \"label\": \"天峨县\",\n  \"value\": \"451222\" },\n\n{\n  \"label\": \"凤山县\",\n  \"value\": \"451223\" },\n\n{\n  \"label\": \"东兰县\",\n  \"value\": \"451224\" },\n\n{\n  \"label\": \"罗城仫佬族自治县\",\n  \"value\": \"451225\" },\n\n{\n  \"label\": \"环江毛南族自治县\",\n  \"value\": \"451226\" },\n\n{\n  \"label\": \"巴马瑶族自治县\",\n  \"value\": \"451227\" },\n\n{\n  \"label\": \"都安瑶族自治县\",\n  \"value\": \"451228\" },\n\n{\n  \"label\": \"大化瑶族自治县\",\n  \"value\": \"451229\" }],\n\n\n[{\n  \"label\": \"兴宾区\",\n  \"value\": \"451302\" },\n\n{\n  \"label\": \"忻城县\",\n  \"value\": \"451321\" },\n\n{\n  \"label\": \"象州县\",\n  \"value\": \"451322\" },\n\n{\n  \"label\": \"武宣县\",\n  \"value\": \"451323\" },\n\n{\n  \"label\": \"金秀瑶族自治县\",\n  \"value\": \"451324\" },\n\n{\n  \"label\": \"合山市\",\n  \"value\": \"451381\" }],\n\n\n[{\n  \"label\": \"江州区\",\n  \"value\": \"451402\" },\n\n{\n  \"label\": \"扶绥县\",\n  \"value\": \"451421\" },\n\n{\n  \"label\": \"宁明县\",\n  \"value\": \"451422\" },\n\n{\n  \"label\": \"龙州县\",\n  \"value\": \"451423\" },\n\n{\n  \"label\": \"大新县\",\n  \"value\": \"451424\" },\n\n{\n  \"label\": \"天等县\",\n  \"value\": \"451425\" },\n\n{\n  \"label\": \"凭祥市\",\n  \"value\": \"451481\" }]],\n\n\n\n[\n[{\n  \"label\": \"秀英区\",\n  \"value\": \"460105\" },\n\n{\n  \"label\": \"龙华区\",\n  \"value\": \"460106\" },\n\n{\n  \"label\": \"琼山区\",\n  \"value\": \"460107\" },\n\n{\n  \"label\": \"美兰区\",\n  \"value\": \"460108\" }],\n\n\n[{\n  \"label\": \"海棠区\",\n  \"value\": \"460202\" },\n\n{\n  \"label\": \"吉阳区\",\n  \"value\": \"460203\" },\n\n{\n  \"label\": \"天涯区\",\n  \"value\": \"460204\" },\n\n{\n  \"label\": \"崖州区\",\n  \"value\": \"460205\" }],\n\n\n[{\n  \"label\": \"西沙群岛\",\n  \"value\": \"460321\" },\n\n{\n  \"label\": \"南沙群岛\",\n  \"value\": \"460322\" },\n\n{\n  \"label\": \"中沙群岛的岛礁及其海域\",\n  \"value\": \"460323\" }],\n\n\n[{\n  \"label\": \"儋州市\",\n  \"value\": \"460400\" }],\n\n[{\n  \"label\": \"五指山市\",\n  \"value\": \"469001\" },\n\n{\n  \"label\": \"琼海市\",\n  \"value\": \"469002\" },\n\n{\n  \"label\": \"文昌市\",\n  \"value\": \"469005\" },\n\n{\n  \"label\": \"万宁市\",\n  \"value\": \"469006\" },\n\n{\n  \"label\": \"东方市\",\n  \"value\": \"469007\" },\n\n{\n  \"label\": \"定安县\",\n  \"value\": \"469021\" },\n\n{\n  \"label\": \"屯昌县\",\n  \"value\": \"469022\" },\n\n{\n  \"label\": \"澄迈县\",\n  \"value\": \"469023\" },\n\n{\n  \"label\": \"临高县\",\n  \"value\": \"469024\" },\n\n{\n  \"label\": \"白沙黎族自治县\",\n  \"value\": \"469025\" },\n\n{\n  \"label\": \"昌江黎族自治县\",\n  \"value\": \"469026\" },\n\n{\n  \"label\": \"乐东黎族自治县\",\n  \"value\": \"469027\" },\n\n{\n  \"label\": \"陵水黎族自治县\",\n  \"value\": \"469028\" },\n\n{\n  \"label\": \"保亭黎族苗族自治县\",\n  \"value\": \"469029\" },\n\n{\n  \"label\": \"琼中黎族苗族自治县\",\n  \"value\": \"469030\" }]],\n\n\n\n[\n[{\n  \"label\": \"万州区\",\n  \"value\": \"500101\" },\n\n{\n  \"label\": \"涪陵区\",\n  \"value\": \"500102\" },\n\n{\n  \"label\": \"渝中区\",\n  \"value\": \"500103\" },\n\n{\n  \"label\": \"大渡口区\",\n  \"value\": \"500104\" },\n\n{\n  \"label\": \"江北区\",\n  \"value\": \"500105\" },\n\n{\n  \"label\": \"沙坪坝区\",\n  \"value\": \"500106\" },\n\n{\n  \"label\": \"九龙坡区\",\n  \"value\": \"500107\" },\n\n{\n  \"label\": \"南岸区\",\n  \"value\": \"500108\" },\n\n{\n  \"label\": \"北碚区\",\n  \"value\": \"500109\" },\n\n{\n  \"label\": \"綦江区\",\n  \"value\": \"500110\" },\n\n{\n  \"label\": \"大足区\",\n  \"value\": \"500111\" },\n\n{\n  \"label\": \"渝北区\",\n  \"value\": \"500112\" },\n\n{\n  \"label\": \"巴南区\",\n  \"value\": \"500113\" },\n\n{\n  \"label\": \"黔江区\",\n  \"value\": \"500114\" },\n\n{\n  \"label\": \"长寿区\",\n  \"value\": \"500115\" },\n\n{\n  \"label\": \"江津区\",\n  \"value\": \"500116\" },\n\n{\n  \"label\": \"合川区\",\n  \"value\": \"500117\" },\n\n{\n  \"label\": \"永川区\",\n  \"value\": \"500118\" },\n\n{\n  \"label\": \"南川区\",\n  \"value\": \"500119\" },\n\n{\n  \"label\": \"璧山区\",\n  \"value\": \"500120\" },\n\n{\n  \"label\": \"铜梁区\",\n  \"value\": \"500151\" },\n\n{\n  \"label\": \"潼南区\",\n  \"value\": \"500152\" },\n\n{\n  \"label\": \"荣昌区\",\n  \"value\": \"500153\" },\n\n{\n  \"label\": \"开州区\",\n  \"value\": \"500154\" },\n\n{\n  \"label\": \"梁平区\",\n  \"value\": \"500155\" },\n\n{\n  \"label\": \"武隆区\",\n  \"value\": \"500156\" }],\n\n\n[{\n  \"label\": \"城口县\",\n  \"value\": \"500229\" },\n\n{\n  \"label\": \"丰都县\",\n  \"value\": \"500230\" },\n\n{\n  \"label\": \"垫江县\",\n  \"value\": \"500231\" },\n\n{\n  \"label\": \"忠县\",\n  \"value\": \"500233\" },\n\n{\n  \"label\": \"云阳县\",\n  \"value\": \"500235\" },\n\n{\n  \"label\": \"奉节县\",\n  \"value\": \"500236\" },\n\n{\n  \"label\": \"巫山县\",\n  \"value\": \"500237\" },\n\n{\n  \"label\": \"巫溪县\",\n  \"value\": \"500238\" },\n\n{\n  \"label\": \"石柱土家族自治县\",\n  \"value\": \"500240\" },\n\n{\n  \"label\": \"秀山土家族苗族自治县\",\n  \"value\": \"500241\" },\n\n{\n  \"label\": \"酉阳土家族苗族自治县\",\n  \"value\": \"500242\" },\n\n{\n  \"label\": \"彭水苗族土家族自治县\",\n  \"value\": \"500243\" }]],\n\n\n\n[\n[{\n  \"label\": \"锦江区\",\n  \"value\": \"510104\" },\n\n{\n  \"label\": \"青羊区\",\n  \"value\": \"510105\" },\n\n{\n  \"label\": \"金牛区\",\n  \"value\": \"510106\" },\n\n{\n  \"label\": \"武侯区\",\n  \"value\": \"510107\" },\n\n{\n  \"label\": \"成华区\",\n  \"value\": \"510108\" },\n\n{\n  \"label\": \"龙泉驿区\",\n  \"value\": \"510112\" },\n\n{\n  \"label\": \"青白江区\",\n  \"value\": \"510113\" },\n\n{\n  \"label\": \"新都区\",\n  \"value\": \"510114\" },\n\n{\n  \"label\": \"温江区\",\n  \"value\": \"510115\" },\n\n{\n  \"label\": \"双流区\",\n  \"value\": \"510116\" },\n\n{\n  \"label\": \"郫都区\",\n  \"value\": \"510117\" },\n\n{\n  \"label\": \"金堂县\",\n  \"value\": \"510121\" },\n\n{\n  \"label\": \"大邑县\",\n  \"value\": \"510129\" },\n\n{\n  \"label\": \"蒲江县\",\n  \"value\": \"510131\" },\n\n{\n  \"label\": \"新津县\",\n  \"value\": \"510132\" },\n\n{\n  \"label\": \"都江堰市\",\n  \"value\": \"510181\" },\n\n{\n  \"label\": \"彭州市\",\n  \"value\": \"510182\" },\n\n{\n  \"label\": \"邛崃市\",\n  \"value\": \"510183\" },\n\n{\n  \"label\": \"崇州市\",\n  \"value\": \"510184\" },\n\n{\n  \"label\": \"简阳市\",\n  \"value\": \"510185\" }],\n\n\n[{\n  \"label\": \"自流井区\",\n  \"value\": \"510302\" },\n\n{\n  \"label\": \"贡井区\",\n  \"value\": \"510303\" },\n\n{\n  \"label\": \"大安区\",\n  \"value\": \"510304\" },\n\n{\n  \"label\": \"沿滩区\",\n  \"value\": \"510311\" },\n\n{\n  \"label\": \"荣县\",\n  \"value\": \"510321\" },\n\n{\n  \"label\": \"富顺县\",\n  \"value\": \"510322\" }],\n\n\n[{\n  \"label\": \"东区\",\n  \"value\": \"510402\" },\n\n{\n  \"label\": \"西区\",\n  \"value\": \"510403\" },\n\n{\n  \"label\": \"仁和区\",\n  \"value\": \"510411\" },\n\n{\n  \"label\": \"米易县\",\n  \"value\": \"510421\" },\n\n{\n  \"label\": \"盐边县\",\n  \"value\": \"510422\" }],\n\n\n[{\n  \"label\": \"江阳区\",\n  \"value\": \"510502\" },\n\n{\n  \"label\": \"纳溪区\",\n  \"value\": \"510503\" },\n\n{\n  \"label\": \"龙马潭区\",\n  \"value\": \"510504\" },\n\n{\n  \"label\": \"泸县\",\n  \"value\": \"510521\" },\n\n{\n  \"label\": \"合江县\",\n  \"value\": \"510522\" },\n\n{\n  \"label\": \"叙永县\",\n  \"value\": \"510524\" },\n\n{\n  \"label\": \"古蔺县\",\n  \"value\": \"510525\" }],\n\n\n[{\n  \"label\": \"旌阳区\",\n  \"value\": \"510603\" },\n\n{\n  \"label\": \"罗江区\",\n  \"value\": \"510604\" },\n\n{\n  \"label\": \"中江县\",\n  \"value\": \"510623\" },\n\n{\n  \"label\": \"广汉市\",\n  \"value\": \"510681\" },\n\n{\n  \"label\": \"什邡市\",\n  \"value\": \"510682\" },\n\n{\n  \"label\": \"绵竹市\",\n  \"value\": \"510683\" }],\n\n\n[{\n  \"label\": \"涪城区\",\n  \"value\": \"510703\" },\n\n{\n  \"label\": \"游仙区\",\n  \"value\": \"510704\" },\n\n{\n  \"label\": \"安州区\",\n  \"value\": \"510705\" },\n\n{\n  \"label\": \"三台县\",\n  \"value\": \"510722\" },\n\n{\n  \"label\": \"盐亭县\",\n  \"value\": \"510723\" },\n\n{\n  \"label\": \"梓潼县\",\n  \"value\": \"510725\" },\n\n{\n  \"label\": \"北川羌族自治县\",\n  \"value\": \"510726\" },\n\n{\n  \"label\": \"平武县\",\n  \"value\": \"510727\" },\n\n{\n  \"label\": \"江油市\",\n  \"value\": \"510781\" }],\n\n\n[{\n  \"label\": \"利州区\",\n  \"value\": \"510802\" },\n\n{\n  \"label\": \"昭化区\",\n  \"value\": \"510811\" },\n\n{\n  \"label\": \"朝天区\",\n  \"value\": \"510812\" },\n\n{\n  \"label\": \"旺苍县\",\n  \"value\": \"510821\" },\n\n{\n  \"label\": \"青川县\",\n  \"value\": \"510822\" },\n\n{\n  \"label\": \"剑阁县\",\n  \"value\": \"510823\" },\n\n{\n  \"label\": \"苍溪县\",\n  \"value\": \"510824\" }],\n\n\n[{\n  \"label\": \"船山区\",\n  \"value\": \"510903\" },\n\n{\n  \"label\": \"安居区\",\n  \"value\": \"510904\" },\n\n{\n  \"label\": \"蓬溪县\",\n  \"value\": \"510921\" },\n\n{\n  \"label\": \"射洪县\",\n  \"value\": \"510922\" },\n\n{\n  \"label\": \"大英县\",\n  \"value\": \"510923\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"511002\" },\n\n{\n  \"label\": \"东兴区\",\n  \"value\": \"511011\" },\n\n{\n  \"label\": \"威远县\",\n  \"value\": \"511024\" },\n\n{\n  \"label\": \"资中县\",\n  \"value\": \"511025\" },\n\n{\n  \"label\": \"内江经济开发区\",\n  \"value\": \"511071\" },\n\n{\n  \"label\": \"隆昌市\",\n  \"value\": \"511083\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"511102\" },\n\n{\n  \"label\": \"沙湾区\",\n  \"value\": \"511111\" },\n\n{\n  \"label\": \"五通桥区\",\n  \"value\": \"511112\" },\n\n{\n  \"label\": \"金口河区\",\n  \"value\": \"511113\" },\n\n{\n  \"label\": \"犍为县\",\n  \"value\": \"511123\" },\n\n{\n  \"label\": \"井研县\",\n  \"value\": \"511124\" },\n\n{\n  \"label\": \"夹江县\",\n  \"value\": \"511126\" },\n\n{\n  \"label\": \"沐川县\",\n  \"value\": \"511129\" },\n\n{\n  \"label\": \"峨边彝族自治县\",\n  \"value\": \"511132\" },\n\n{\n  \"label\": \"马边彝族自治县\",\n  \"value\": \"511133\" },\n\n{\n  \"label\": \"峨眉山市\",\n  \"value\": \"511181\" }],\n\n\n[{\n  \"label\": \"顺庆区\",\n  \"value\": \"511302\" },\n\n{\n  \"label\": \"高坪区\",\n  \"value\": \"511303\" },\n\n{\n  \"label\": \"嘉陵区\",\n  \"value\": \"511304\" },\n\n{\n  \"label\": \"南部县\",\n  \"value\": \"511321\" },\n\n{\n  \"label\": \"营山县\",\n  \"value\": \"511322\" },\n\n{\n  \"label\": \"蓬安县\",\n  \"value\": \"511323\" },\n\n{\n  \"label\": \"仪陇县\",\n  \"value\": \"511324\" },\n\n{\n  \"label\": \"西充县\",\n  \"value\": \"511325\" },\n\n{\n  \"label\": \"阆中市\",\n  \"value\": \"511381\" }],\n\n\n[{\n  \"label\": \"东坡区\",\n  \"value\": \"511402\" },\n\n{\n  \"label\": \"彭山区\",\n  \"value\": \"511403\" },\n\n{\n  \"label\": \"仁寿县\",\n  \"value\": \"511421\" },\n\n{\n  \"label\": \"洪雅县\",\n  \"value\": \"511423\" },\n\n{\n  \"label\": \"丹棱县\",\n  \"value\": \"511424\" },\n\n{\n  \"label\": \"青神县\",\n  \"value\": \"511425\" }],\n\n\n[{\n  \"label\": \"翠屏区\",\n  \"value\": \"511502\" },\n\n{\n  \"label\": \"南溪区\",\n  \"value\": \"511503\" },\n\n{\n  \"label\": \"宜宾县\",\n  \"value\": \"511521\" },\n\n{\n  \"label\": \"江安县\",\n  \"value\": \"511523\" },\n\n{\n  \"label\": \"长宁县\",\n  \"value\": \"511524\" },\n\n{\n  \"label\": \"高县\",\n  \"value\": \"511525\" },\n\n{\n  \"label\": \"珙县\",\n  \"value\": \"511526\" },\n\n{\n  \"label\": \"筠连县\",\n  \"value\": \"511527\" },\n\n{\n  \"label\": \"兴文县\",\n  \"value\": \"511528\" },\n\n{\n  \"label\": \"屏山县\",\n  \"value\": \"511529\" }],\n\n\n[{\n  \"label\": \"广安区\",\n  \"value\": \"511602\" },\n\n{\n  \"label\": \"前锋区\",\n  \"value\": \"511603\" },\n\n{\n  \"label\": \"岳池县\",\n  \"value\": \"511621\" },\n\n{\n  \"label\": \"武胜县\",\n  \"value\": \"511622\" },\n\n{\n  \"label\": \"邻水县\",\n  \"value\": \"511623\" },\n\n{\n  \"label\": \"华蓥市\",\n  \"value\": \"511681\" }],\n\n\n[{\n  \"label\": \"通川区\",\n  \"value\": \"511702\" },\n\n{\n  \"label\": \"达川区\",\n  \"value\": \"511703\" },\n\n{\n  \"label\": \"宣汉县\",\n  \"value\": \"511722\" },\n\n{\n  \"label\": \"开江县\",\n  \"value\": \"511723\" },\n\n{\n  \"label\": \"大竹县\",\n  \"value\": \"511724\" },\n\n{\n  \"label\": \"渠县\",\n  \"value\": \"511725\" },\n\n{\n  \"label\": \"达州经济开发区\",\n  \"value\": \"511771\" },\n\n{\n  \"label\": \"万源市\",\n  \"value\": \"511781\" }],\n\n\n[{\n  \"label\": \"雨城区\",\n  \"value\": \"511802\" },\n\n{\n  \"label\": \"名山区\",\n  \"value\": \"511803\" },\n\n{\n  \"label\": \"荥经县\",\n  \"value\": \"511822\" },\n\n{\n  \"label\": \"汉源县\",\n  \"value\": \"511823\" },\n\n{\n  \"label\": \"石棉县\",\n  \"value\": \"511824\" },\n\n{\n  \"label\": \"天全县\",\n  \"value\": \"511825\" },\n\n{\n  \"label\": \"芦山县\",\n  \"value\": \"511826\" },\n\n{\n  \"label\": \"宝兴县\",\n  \"value\": \"511827\" }],\n\n\n[{\n  \"label\": \"巴州区\",\n  \"value\": \"511902\" },\n\n{\n  \"label\": \"恩阳区\",\n  \"value\": \"511903\" },\n\n{\n  \"label\": \"通江县\",\n  \"value\": \"511921\" },\n\n{\n  \"label\": \"南江县\",\n  \"value\": \"511922\" },\n\n{\n  \"label\": \"平昌县\",\n  \"value\": \"511923\" },\n\n{\n  \"label\": \"巴中经济开发区\",\n  \"value\": \"511971\" }],\n\n\n[{\n  \"label\": \"雁江区\",\n  \"value\": \"512002\" },\n\n{\n  \"label\": \"安岳县\",\n  \"value\": \"512021\" },\n\n{\n  \"label\": \"乐至县\",\n  \"value\": \"512022\" }],\n\n\n[{\n  \"label\": \"马尔康市\",\n  \"value\": \"513201\" },\n\n{\n  \"label\": \"汶川县\",\n  \"value\": \"513221\" },\n\n{\n  \"label\": \"理县\",\n  \"value\": \"513222\" },\n\n{\n  \"label\": \"茂县\",\n  \"value\": \"513223\" },\n\n{\n  \"label\": \"松潘县\",\n  \"value\": \"513224\" },\n\n{\n  \"label\": \"九寨沟县\",\n  \"value\": \"513225\" },\n\n{\n  \"label\": \"金川县\",\n  \"value\": \"513226\" },\n\n{\n  \"label\": \"小金县\",\n  \"value\": \"513227\" },\n\n{\n  \"label\": \"黑水县\",\n  \"value\": \"513228\" },\n\n{\n  \"label\": \"壤塘县\",\n  \"value\": \"513230\" },\n\n{\n  \"label\": \"阿坝县\",\n  \"value\": \"513231\" },\n\n{\n  \"label\": \"若尔盖县\",\n  \"value\": \"513232\" },\n\n{\n  \"label\": \"红原县\",\n  \"value\": \"513233\" }],\n\n\n[{\n  \"label\": \"康定市\",\n  \"value\": \"513301\" },\n\n{\n  \"label\": \"泸定县\",\n  \"value\": \"513322\" },\n\n{\n  \"label\": \"丹巴县\",\n  \"value\": \"513323\" },\n\n{\n  \"label\": \"九龙县\",\n  \"value\": \"513324\" },\n\n{\n  \"label\": \"雅江县\",\n  \"value\": \"513325\" },\n\n{\n  \"label\": \"道孚县\",\n  \"value\": \"513326\" },\n\n{\n  \"label\": \"炉霍县\",\n  \"value\": \"513327\" },\n\n{\n  \"label\": \"甘孜县\",\n  \"value\": \"513328\" },\n\n{\n  \"label\": \"新龙县\",\n  \"value\": \"513329\" },\n\n{\n  \"label\": \"德格县\",\n  \"value\": \"513330\" },\n\n{\n  \"label\": \"白玉县\",\n  \"value\": \"513331\" },\n\n{\n  \"label\": \"石渠县\",\n  \"value\": \"513332\" },\n\n{\n  \"label\": \"色达县\",\n  \"value\": \"513333\" },\n\n{\n  \"label\": \"理塘县\",\n  \"value\": \"513334\" },\n\n{\n  \"label\": \"巴塘县\",\n  \"value\": \"513335\" },\n\n{\n  \"label\": \"乡城县\",\n  \"value\": \"513336\" },\n\n{\n  \"label\": \"稻城县\",\n  \"value\": \"513337\" },\n\n{\n  \"label\": \"得荣县\",\n  \"value\": \"513338\" }],\n\n\n[{\n  \"label\": \"西昌市\",\n  \"value\": \"513401\" },\n\n{\n  \"label\": \"木里藏族自治县\",\n  \"value\": \"513422\" },\n\n{\n  \"label\": \"盐源县\",\n  \"value\": \"513423\" },\n\n{\n  \"label\": \"德昌县\",\n  \"value\": \"513424\" },\n\n{\n  \"label\": \"会理县\",\n  \"value\": \"513425\" },\n\n{\n  \"label\": \"会东县\",\n  \"value\": \"513426\" },\n\n{\n  \"label\": \"宁南县\",\n  \"value\": \"513427\" },\n\n{\n  \"label\": \"普格县\",\n  \"value\": \"513428\" },\n\n{\n  \"label\": \"布拖县\",\n  \"value\": \"513429\" },\n\n{\n  \"label\": \"金阳县\",\n  \"value\": \"513430\" },\n\n{\n  \"label\": \"昭觉县\",\n  \"value\": \"513431\" },\n\n{\n  \"label\": \"喜德县\",\n  \"value\": \"513432\" },\n\n{\n  \"label\": \"冕宁县\",\n  \"value\": \"513433\" },\n\n{\n  \"label\": \"越西县\",\n  \"value\": \"513434\" },\n\n{\n  \"label\": \"甘洛县\",\n  \"value\": \"513435\" },\n\n{\n  \"label\": \"美姑县\",\n  \"value\": \"513436\" },\n\n{\n  \"label\": \"雷波县\",\n  \"value\": \"513437\" }]],\n\n\n\n[\n[{\n  \"label\": \"南明区\",\n  \"value\": \"520102\" },\n\n{\n  \"label\": \"云岩区\",\n  \"value\": \"520103\" },\n\n{\n  \"label\": \"花溪区\",\n  \"value\": \"520111\" },\n\n{\n  \"label\": \"乌当区\",\n  \"value\": \"520112\" },\n\n{\n  \"label\": \"白云区\",\n  \"value\": \"520113\" },\n\n{\n  \"label\": \"观山湖区\",\n  \"value\": \"520115\" },\n\n{\n  \"label\": \"开阳县\",\n  \"value\": \"520121\" },\n\n{\n  \"label\": \"息烽县\",\n  \"value\": \"520122\" },\n\n{\n  \"label\": \"修文县\",\n  \"value\": \"520123\" },\n\n{\n  \"label\": \"清镇市\",\n  \"value\": \"520181\" }],\n\n\n[{\n  \"label\": \"钟山区\",\n  \"value\": \"520201\" },\n\n{\n  \"label\": \"六枝特区\",\n  \"value\": \"520203\" },\n\n{\n  \"label\": \"水城县\",\n  \"value\": \"520221\" },\n\n{\n  \"label\": \"盘州市\",\n  \"value\": \"520281\" }],\n\n\n[{\n  \"label\": \"红花岗区\",\n  \"value\": \"520302\" },\n\n{\n  \"label\": \"汇川区\",\n  \"value\": \"520303\" },\n\n{\n  \"label\": \"播州区\",\n  \"value\": \"520304\" },\n\n{\n  \"label\": \"桐梓县\",\n  \"value\": \"520322\" },\n\n{\n  \"label\": \"绥阳县\",\n  \"value\": \"520323\" },\n\n{\n  \"label\": \"正安县\",\n  \"value\": \"520324\" },\n\n{\n  \"label\": \"道真仡佬族苗族自治县\",\n  \"value\": \"520325\" },\n\n{\n  \"label\": \"务川仡佬族苗族自治县\",\n  \"value\": \"520326\" },\n\n{\n  \"label\": \"凤冈县\",\n  \"value\": \"520327\" },\n\n{\n  \"label\": \"湄潭县\",\n  \"value\": \"520328\" },\n\n{\n  \"label\": \"余庆县\",\n  \"value\": \"520329\" },\n\n{\n  \"label\": \"习水县\",\n  \"value\": \"520330\" },\n\n{\n  \"label\": \"赤水市\",\n  \"value\": \"520381\" },\n\n{\n  \"label\": \"仁怀市\",\n  \"value\": \"520382\" }],\n\n\n[{\n  \"label\": \"西秀区\",\n  \"value\": \"520402\" },\n\n{\n  \"label\": \"平坝区\",\n  \"value\": \"520403\" },\n\n{\n  \"label\": \"普定县\",\n  \"value\": \"520422\" },\n\n{\n  \"label\": \"镇宁布依族苗族自治县\",\n  \"value\": \"520423\" },\n\n{\n  \"label\": \"关岭布依族苗族自治县\",\n  \"value\": \"520424\" },\n\n{\n  \"label\": \"紫云苗族布依族自治县\",\n  \"value\": \"520425\" }],\n\n\n[{\n  \"label\": \"七星关区\",\n  \"value\": \"520502\" },\n\n{\n  \"label\": \"大方县\",\n  \"value\": \"520521\" },\n\n{\n  \"label\": \"黔西县\",\n  \"value\": \"520522\" },\n\n{\n  \"label\": \"金沙县\",\n  \"value\": \"520523\" },\n\n{\n  \"label\": \"织金县\",\n  \"value\": \"520524\" },\n\n{\n  \"label\": \"纳雍县\",\n  \"value\": \"520525\" },\n\n{\n  \"label\": \"威宁彝族回族苗族自治县\",\n  \"value\": \"520526\" },\n\n{\n  \"label\": \"赫章县\",\n  \"value\": \"520527\" }],\n\n\n[{\n  \"label\": \"碧江区\",\n  \"value\": \"520602\" },\n\n{\n  \"label\": \"万山区\",\n  \"value\": \"520603\" },\n\n{\n  \"label\": \"江口县\",\n  \"value\": \"520621\" },\n\n{\n  \"label\": \"玉屏侗族自治县\",\n  \"value\": \"520622\" },\n\n{\n  \"label\": \"石阡县\",\n  \"value\": \"520623\" },\n\n{\n  \"label\": \"思南县\",\n  \"value\": \"520624\" },\n\n{\n  \"label\": \"印江土家族苗族自治县\",\n  \"value\": \"520625\" },\n\n{\n  \"label\": \"德江县\",\n  \"value\": \"520626\" },\n\n{\n  \"label\": \"沿河土家族自治县\",\n  \"value\": \"520627\" },\n\n{\n  \"label\": \"松桃苗族自治县\",\n  \"value\": \"520628\" }],\n\n\n[{\n  \"label\": \"兴义市\",\n  \"value\": \"522301\" },\n\n{\n  \"label\": \"兴仁县\",\n  \"value\": \"522322\" },\n\n{\n  \"label\": \"普安县\",\n  \"value\": \"522323\" },\n\n{\n  \"label\": \"晴隆县\",\n  \"value\": \"522324\" },\n\n{\n  \"label\": \"贞丰县\",\n  \"value\": \"522325\" },\n\n{\n  \"label\": \"望谟县\",\n  \"value\": \"522326\" },\n\n{\n  \"label\": \"册亨县\",\n  \"value\": \"522327\" },\n\n{\n  \"label\": \"安龙县\",\n  \"value\": \"522328\" }],\n\n\n[{\n  \"label\": \"凯里市\",\n  \"value\": \"522601\" },\n\n{\n  \"label\": \"黄平县\",\n  \"value\": \"522622\" },\n\n{\n  \"label\": \"施秉县\",\n  \"value\": \"522623\" },\n\n{\n  \"label\": \"三穗县\",\n  \"value\": \"522624\" },\n\n{\n  \"label\": \"镇远县\",\n  \"value\": \"522625\" },\n\n{\n  \"label\": \"岑巩县\",\n  \"value\": \"522626\" },\n\n{\n  \"label\": \"天柱县\",\n  \"value\": \"522627\" },\n\n{\n  \"label\": \"锦屏县\",\n  \"value\": \"522628\" },\n\n{\n  \"label\": \"剑河县\",\n  \"value\": \"522629\" },\n\n{\n  \"label\": \"台江县\",\n  \"value\": \"522630\" },\n\n{\n  \"label\": \"黎平县\",\n  \"value\": \"522631\" },\n\n{\n  \"label\": \"榕江县\",\n  \"value\": \"522632\" },\n\n{\n  \"label\": \"从江县\",\n  \"value\": \"522633\" },\n\n{\n  \"label\": \"雷山县\",\n  \"value\": \"522634\" },\n\n{\n  \"label\": \"麻江县\",\n  \"value\": \"522635\" },\n\n{\n  \"label\": \"丹寨县\",\n  \"value\": \"522636\" }],\n\n\n[{\n  \"label\": \"都匀市\",\n  \"value\": \"522701\" },\n\n{\n  \"label\": \"福泉市\",\n  \"value\": \"522702\" },\n\n{\n  \"label\": \"荔波县\",\n  \"value\": \"522722\" },\n\n{\n  \"label\": \"贵定县\",\n  \"value\": \"522723\" },\n\n{\n  \"label\": \"瓮安县\",\n  \"value\": \"522725\" },\n\n{\n  \"label\": \"独山县\",\n  \"value\": \"522726\" },\n\n{\n  \"label\": \"平塘县\",\n  \"value\": \"522727\" },\n\n{\n  \"label\": \"罗甸县\",\n  \"value\": \"522728\" },\n\n{\n  \"label\": \"长顺县\",\n  \"value\": \"522729\" },\n\n{\n  \"label\": \"龙里县\",\n  \"value\": \"522730\" },\n\n{\n  \"label\": \"惠水县\",\n  \"value\": \"522731\" },\n\n{\n  \"label\": \"三都水族自治县\",\n  \"value\": \"522732\" }]],\n\n\n\n[\n[{\n  \"label\": \"五华区\",\n  \"value\": \"530102\" },\n\n{\n  \"label\": \"盘龙区\",\n  \"value\": \"530103\" },\n\n{\n  \"label\": \"官渡区\",\n  \"value\": \"530111\" },\n\n{\n  \"label\": \"西山区\",\n  \"value\": \"530112\" },\n\n{\n  \"label\": \"东川区\",\n  \"value\": \"530113\" },\n\n{\n  \"label\": \"呈贡区\",\n  \"value\": \"530114\" },\n\n{\n  \"label\": \"晋宁区\",\n  \"value\": \"530115\" },\n\n{\n  \"label\": \"富民县\",\n  \"value\": \"530124\" },\n\n{\n  \"label\": \"宜良县\",\n  \"value\": \"530125\" },\n\n{\n  \"label\": \"石林彝族自治县\",\n  \"value\": \"530126\" },\n\n{\n  \"label\": \"嵩明县\",\n  \"value\": \"530127\" },\n\n{\n  \"label\": \"禄劝彝族苗族自治县\",\n  \"value\": \"530128\" },\n\n{\n  \"label\": \"寻甸回族彝族自治县\",\n  \"value\": \"530129\" },\n\n{\n  \"label\": \"安宁市\",\n  \"value\": \"530181\" }],\n\n\n[{\n  \"label\": \"麒麟区\",\n  \"value\": \"530302\" },\n\n{\n  \"label\": \"沾益区\",\n  \"value\": \"530303\" },\n\n{\n  \"label\": \"马龙县\",\n  \"value\": \"530321\" },\n\n{\n  \"label\": \"陆良县\",\n  \"value\": \"530322\" },\n\n{\n  \"label\": \"师宗县\",\n  \"value\": \"530323\" },\n\n{\n  \"label\": \"罗平县\",\n  \"value\": \"530324\" },\n\n{\n  \"label\": \"富源县\",\n  \"value\": \"530325\" },\n\n{\n  \"label\": \"会泽县\",\n  \"value\": \"530326\" },\n\n{\n  \"label\": \"宣威市\",\n  \"value\": \"530381\" }],\n\n\n[{\n  \"label\": \"红塔区\",\n  \"value\": \"530402\" },\n\n{\n  \"label\": \"江川区\",\n  \"value\": \"530403\" },\n\n{\n  \"label\": \"澄江县\",\n  \"value\": \"530422\" },\n\n{\n  \"label\": \"通海县\",\n  \"value\": \"530423\" },\n\n{\n  \"label\": \"华宁县\",\n  \"value\": \"530424\" },\n\n{\n  \"label\": \"易门县\",\n  \"value\": \"530425\" },\n\n{\n  \"label\": \"峨山彝族自治县\",\n  \"value\": \"530426\" },\n\n{\n  \"label\": \"新平彝族傣族自治县\",\n  \"value\": \"530427\" },\n\n{\n  \"label\": \"元江哈尼族彝族傣族自治县\",\n  \"value\": \"530428\" }],\n\n\n[{\n  \"label\": \"隆阳区\",\n  \"value\": \"530502\" },\n\n{\n  \"label\": \"施甸县\",\n  \"value\": \"530521\" },\n\n{\n  \"label\": \"龙陵县\",\n  \"value\": \"530523\" },\n\n{\n  \"label\": \"昌宁县\",\n  \"value\": \"530524\" },\n\n{\n  \"label\": \"腾冲市\",\n  \"value\": \"530581\" }],\n\n\n[{\n  \"label\": \"昭阳区\",\n  \"value\": \"530602\" },\n\n{\n  \"label\": \"鲁甸县\",\n  \"value\": \"530621\" },\n\n{\n  \"label\": \"巧家县\",\n  \"value\": \"530622\" },\n\n{\n  \"label\": \"盐津县\",\n  \"value\": \"530623\" },\n\n{\n  \"label\": \"大关县\",\n  \"value\": \"530624\" },\n\n{\n  \"label\": \"永善县\",\n  \"value\": \"530625\" },\n\n{\n  \"label\": \"绥江县\",\n  \"value\": \"530626\" },\n\n{\n  \"label\": \"镇雄县\",\n  \"value\": \"530627\" },\n\n{\n  \"label\": \"彝良县\",\n  \"value\": \"530628\" },\n\n{\n  \"label\": \"威信县\",\n  \"value\": \"530629\" },\n\n{\n  \"label\": \"水富县\",\n  \"value\": \"530630\" }],\n\n\n[{\n  \"label\": \"古城区\",\n  \"value\": \"530702\" },\n\n{\n  \"label\": \"玉龙纳西族自治县\",\n  \"value\": \"530721\" },\n\n{\n  \"label\": \"永胜县\",\n  \"value\": \"530722\" },\n\n{\n  \"label\": \"华坪县\",\n  \"value\": \"530723\" },\n\n{\n  \"label\": \"宁蒗彝族自治县\",\n  \"value\": \"530724\" }],\n\n\n[{\n  \"label\": \"思茅区\",\n  \"value\": \"530802\" },\n\n{\n  \"label\": \"宁洱哈尼族彝族自治县\",\n  \"value\": \"530821\" },\n\n{\n  \"label\": \"墨江哈尼族自治县\",\n  \"value\": \"530822\" },\n\n{\n  \"label\": \"景东彝族自治县\",\n  \"value\": \"530823\" },\n\n{\n  \"label\": \"景谷傣族彝族自治县\",\n  \"value\": \"530824\" },\n\n{\n  \"label\": \"镇沅彝族哈尼族拉祜族自治县\",\n  \"value\": \"530825\" },\n\n{\n  \"label\": \"江城哈尼族彝族自治县\",\n  \"value\": \"530826\" },\n\n{\n  \"label\": \"孟连傣族拉祜族佤族自治县\",\n  \"value\": \"530827\" },\n\n{\n  \"label\": \"澜沧拉祜族自治县\",\n  \"value\": \"530828\" },\n\n{\n  \"label\": \"西盟佤族自治县\",\n  \"value\": \"530829\" }],\n\n\n[{\n  \"label\": \"临翔区\",\n  \"value\": \"530902\" },\n\n{\n  \"label\": \"凤庆县\",\n  \"value\": \"530921\" },\n\n{\n  \"label\": \"云县\",\n  \"value\": \"530922\" },\n\n{\n  \"label\": \"永德县\",\n  \"value\": \"530923\" },\n\n{\n  \"label\": \"镇康县\",\n  \"value\": \"530924\" },\n\n{\n  \"label\": \"双江拉祜族佤族布朗族傣族自治县\",\n  \"value\": \"530925\" },\n\n{\n  \"label\": \"耿马傣族佤族自治县\",\n  \"value\": \"530926\" },\n\n{\n  \"label\": \"沧源佤族自治县\",\n  \"value\": \"530927\" }],\n\n\n[{\n  \"label\": \"楚雄市\",\n  \"value\": \"532301\" },\n\n{\n  \"label\": \"双柏县\",\n  \"value\": \"532322\" },\n\n{\n  \"label\": \"牟定县\",\n  \"value\": \"532323\" },\n\n{\n  \"label\": \"南华县\",\n  \"value\": \"532324\" },\n\n{\n  \"label\": \"姚安县\",\n  \"value\": \"532325\" },\n\n{\n  \"label\": \"大姚县\",\n  \"value\": \"532326\" },\n\n{\n  \"label\": \"永仁县\",\n  \"value\": \"532327\" },\n\n{\n  \"label\": \"元谋县\",\n  \"value\": \"532328\" },\n\n{\n  \"label\": \"武定县\",\n  \"value\": \"532329\" },\n\n{\n  \"label\": \"禄丰县\",\n  \"value\": \"532331\" }],\n\n\n[{\n  \"label\": \"个旧市\",\n  \"value\": \"532501\" },\n\n{\n  \"label\": \"开远市\",\n  \"value\": \"532502\" },\n\n{\n  \"label\": \"蒙自市\",\n  \"value\": \"532503\" },\n\n{\n  \"label\": \"弥勒市\",\n  \"value\": \"532504\" },\n\n{\n  \"label\": \"屏边苗族自治县\",\n  \"value\": \"532523\" },\n\n{\n  \"label\": \"建水县\",\n  \"value\": \"532524\" },\n\n{\n  \"label\": \"石屏县\",\n  \"value\": \"532525\" },\n\n{\n  \"label\": \"泸西县\",\n  \"value\": \"532527\" },\n\n{\n  \"label\": \"元阳县\",\n  \"value\": \"532528\" },\n\n{\n  \"label\": \"红河县\",\n  \"value\": \"532529\" },\n\n{\n  \"label\": \"金平苗族瑶族傣族自治县\",\n  \"value\": \"532530\" },\n\n{\n  \"label\": \"绿春县\",\n  \"value\": \"532531\" },\n\n{\n  \"label\": \"河口瑶族自治县\",\n  \"value\": \"532532\" }],\n\n\n[{\n  \"label\": \"文山市\",\n  \"value\": \"532601\" },\n\n{\n  \"label\": \"砚山县\",\n  \"value\": \"532622\" },\n\n{\n  \"label\": \"西畴县\",\n  \"value\": \"532623\" },\n\n{\n  \"label\": \"麻栗坡县\",\n  \"value\": \"532624\" },\n\n{\n  \"label\": \"马关县\",\n  \"value\": \"532625\" },\n\n{\n  \"label\": \"丘北县\",\n  \"value\": \"532626\" },\n\n{\n  \"label\": \"广南县\",\n  \"value\": \"532627\" },\n\n{\n  \"label\": \"富宁县\",\n  \"value\": \"532628\" }],\n\n\n[{\n  \"label\": \"景洪市\",\n  \"value\": \"532801\" },\n\n{\n  \"label\": \"勐海县\",\n  \"value\": \"532822\" },\n\n{\n  \"label\": \"勐腊县\",\n  \"value\": \"532823\" }],\n\n\n[{\n  \"label\": \"大理市\",\n  \"value\": \"532901\" },\n\n{\n  \"label\": \"漾濞彝族自治县\",\n  \"value\": \"532922\" },\n\n{\n  \"label\": \"祥云县\",\n  \"value\": \"532923\" },\n\n{\n  \"label\": \"宾川县\",\n  \"value\": \"532924\" },\n\n{\n  \"label\": \"弥渡县\",\n  \"value\": \"532925\" },\n\n{\n  \"label\": \"南涧彝族自治县\",\n  \"value\": \"532926\" },\n\n{\n  \"label\": \"巍山彝族回族自治县\",\n  \"value\": \"532927\" },\n\n{\n  \"label\": \"永平县\",\n  \"value\": \"532928\" },\n\n{\n  \"label\": \"云龙县\",\n  \"value\": \"532929\" },\n\n{\n  \"label\": \"洱源县\",\n  \"value\": \"532930\" },\n\n{\n  \"label\": \"剑川县\",\n  \"value\": \"532931\" },\n\n{\n  \"label\": \"鹤庆县\",\n  \"value\": \"532932\" }],\n\n\n[{\n  \"label\": \"瑞丽市\",\n  \"value\": \"533102\" },\n\n{\n  \"label\": \"芒市\",\n  \"value\": \"533103\" },\n\n{\n  \"label\": \"梁河县\",\n  \"value\": \"533122\" },\n\n{\n  \"label\": \"盈江县\",\n  \"value\": \"533123\" },\n\n{\n  \"label\": \"陇川县\",\n  \"value\": \"533124\" }],\n\n\n[{\n  \"label\": \"泸水市\",\n  \"value\": \"533301\" },\n\n{\n  \"label\": \"福贡县\",\n  \"value\": \"533323\" },\n\n{\n  \"label\": \"贡山独龙族怒族自治县\",\n  \"value\": \"533324\" },\n\n{\n  \"label\": \"兰坪白族普米族自治县\",\n  \"value\": \"533325\" }],\n\n\n[{\n  \"label\": \"香格里拉市\",\n  \"value\": \"533401\" },\n\n{\n  \"label\": \"德钦县\",\n  \"value\": \"533422\" },\n\n{\n  \"label\": \"维西傈僳族自治县\",\n  \"value\": \"533423\" }]],\n\n\n\n[\n[{\n  \"label\": \"城关区\",\n  \"value\": \"540102\" },\n\n{\n  \"label\": \"堆龙德庆区\",\n  \"value\": \"540103\" },\n\n{\n  \"label\": \"林周县\",\n  \"value\": \"540121\" },\n\n{\n  \"label\": \"当雄县\",\n  \"value\": \"540122\" },\n\n{\n  \"label\": \"尼木县\",\n  \"value\": \"540123\" },\n\n{\n  \"label\": \"曲水县\",\n  \"value\": \"540124\" },\n\n{\n  \"label\": \"达孜县\",\n  \"value\": \"540126\" },\n\n{\n  \"label\": \"墨竹工卡县\",\n  \"value\": \"540127\" },\n\n{\n  \"label\": \"格尔木藏青工业园区\",\n  \"value\": \"540171\" },\n\n{\n  \"label\": \"拉萨经济技术开发区\",\n  \"value\": \"540172\" },\n\n{\n  \"label\": \"西藏文化旅游创意园区\",\n  \"value\": \"540173\" },\n\n{\n  \"label\": \"达孜工业园区\",\n  \"value\": \"540174\" }],\n\n\n[{\n  \"label\": \"桑珠孜区\",\n  \"value\": \"540202\" },\n\n{\n  \"label\": \"南木林县\",\n  \"value\": \"540221\" },\n\n{\n  \"label\": \"江孜县\",\n  \"value\": \"540222\" },\n\n{\n  \"label\": \"定日县\",\n  \"value\": \"540223\" },\n\n{\n  \"label\": \"萨迦县\",\n  \"value\": \"540224\" },\n\n{\n  \"label\": \"拉孜县\",\n  \"value\": \"540225\" },\n\n{\n  \"label\": \"昂仁县\",\n  \"value\": \"540226\" },\n\n{\n  \"label\": \"谢通门县\",\n  \"value\": \"540227\" },\n\n{\n  \"label\": \"白朗县\",\n  \"value\": \"540228\" },\n\n{\n  \"label\": \"仁布县\",\n  \"value\": \"540229\" },\n\n{\n  \"label\": \"康马县\",\n  \"value\": \"540230\" },\n\n{\n  \"label\": \"定结县\",\n  \"value\": \"540231\" },\n\n{\n  \"label\": \"仲巴县\",\n  \"value\": \"540232\" },\n\n{\n  \"label\": \"亚东县\",\n  \"value\": \"540233\" },\n\n{\n  \"label\": \"吉隆县\",\n  \"value\": \"540234\" },\n\n{\n  \"label\": \"聂拉木县\",\n  \"value\": \"540235\" },\n\n{\n  \"label\": \"萨嘎县\",\n  \"value\": \"540236\" },\n\n{\n  \"label\": \"岗巴县\",\n  \"value\": \"540237\" }],\n\n\n[{\n  \"label\": \"卡若区\",\n  \"value\": \"540302\" },\n\n{\n  \"label\": \"江达县\",\n  \"value\": \"540321\" },\n\n{\n  \"label\": \"贡觉县\",\n  \"value\": \"540322\" },\n\n{\n  \"label\": \"类乌齐县\",\n  \"value\": \"540323\" },\n\n{\n  \"label\": \"丁青县\",\n  \"value\": \"540324\" },\n\n{\n  \"label\": \"察雅县\",\n  \"value\": \"540325\" },\n\n{\n  \"label\": \"八宿县\",\n  \"value\": \"540326\" },\n\n{\n  \"label\": \"左贡县\",\n  \"value\": \"540327\" },\n\n{\n  \"label\": \"芒康县\",\n  \"value\": \"540328\" },\n\n{\n  \"label\": \"洛隆县\",\n  \"value\": \"540329\" },\n\n{\n  \"label\": \"边坝县\",\n  \"value\": \"540330\" }],\n\n\n[{\n  \"label\": \"巴宜区\",\n  \"value\": \"540402\" },\n\n{\n  \"label\": \"工布江达县\",\n  \"value\": \"540421\" },\n\n{\n  \"label\": \"米林县\",\n  \"value\": \"540422\" },\n\n{\n  \"label\": \"墨脱县\",\n  \"value\": \"540423\" },\n\n{\n  \"label\": \"波密县\",\n  \"value\": \"540424\" },\n\n{\n  \"label\": \"察隅县\",\n  \"value\": \"540425\" },\n\n{\n  \"label\": \"朗县\",\n  \"value\": \"540426\" }],\n\n\n[{\n  \"label\": \"乃东区\",\n  \"value\": \"540502\" },\n\n{\n  \"label\": \"扎囊县\",\n  \"value\": \"540521\" },\n\n{\n  \"label\": \"贡嘎县\",\n  \"value\": \"540522\" },\n\n{\n  \"label\": \"桑日县\",\n  \"value\": \"540523\" },\n\n{\n  \"label\": \"琼结县\",\n  \"value\": \"540524\" },\n\n{\n  \"label\": \"曲松县\",\n  \"value\": \"540525\" },\n\n{\n  \"label\": \"措美县\",\n  \"value\": \"540526\" },\n\n{\n  \"label\": \"洛扎县\",\n  \"value\": \"540527\" },\n\n{\n  \"label\": \"加查县\",\n  \"value\": \"540528\" },\n\n{\n  \"label\": \"隆子县\",\n  \"value\": \"540529\" },\n\n{\n  \"label\": \"错那县\",\n  \"value\": \"540530\" },\n\n{\n  \"label\": \"浪卡子县\",\n  \"value\": \"540531\" }],\n\n\n[{\n  \"label\": \"那曲县\",\n  \"value\": \"542421\" },\n\n{\n  \"label\": \"嘉黎县\",\n  \"value\": \"542422\" },\n\n{\n  \"label\": \"比如县\",\n  \"value\": \"542423\" },\n\n{\n  \"label\": \"聂荣县\",\n  \"value\": \"542424\" },\n\n{\n  \"label\": \"安多县\",\n  \"value\": \"542425\" },\n\n{\n  \"label\": \"申扎县\",\n  \"value\": \"542426\" },\n\n{\n  \"label\": \"索县\",\n  \"value\": \"542427\" },\n\n{\n  \"label\": \"班戈县\",\n  \"value\": \"542428\" },\n\n{\n  \"label\": \"巴青县\",\n  \"value\": \"542429\" },\n\n{\n  \"label\": \"尼玛县\",\n  \"value\": \"542430\" },\n\n{\n  \"label\": \"双湖县\",\n  \"value\": \"542431\" }],\n\n\n[{\n  \"label\": \"普兰县\",\n  \"value\": \"542521\" },\n\n{\n  \"label\": \"札达县\",\n  \"value\": \"542522\" },\n\n{\n  \"label\": \"噶尔县\",\n  \"value\": \"542523\" },\n\n{\n  \"label\": \"日土县\",\n  \"value\": \"542524\" },\n\n{\n  \"label\": \"革吉县\",\n  \"value\": \"542525\" },\n\n{\n  \"label\": \"改则县\",\n  \"value\": \"542526\" },\n\n{\n  \"label\": \"措勤县\",\n  \"value\": \"542527\" }]],\n\n\n\n[\n[{\n  \"label\": \"新城区\",\n  \"value\": \"610102\" },\n\n{\n  \"label\": \"碑林区\",\n  \"value\": \"610103\" },\n\n{\n  \"label\": \"莲湖区\",\n  \"value\": \"610104\" },\n\n{\n  \"label\": \"灞桥区\",\n  \"value\": \"610111\" },\n\n{\n  \"label\": \"未央区\",\n  \"value\": \"610112\" },\n\n{\n  \"label\": \"雁塔区\",\n  \"value\": \"610113\" },\n\n{\n  \"label\": \"阎良区\",\n  \"value\": \"610114\" },\n\n{\n  \"label\": \"临潼区\",\n  \"value\": \"610115\" },\n\n{\n  \"label\": \"长安区\",\n  \"value\": \"610116\" },\n\n{\n  \"label\": \"高陵区\",\n  \"value\": \"610117\" },\n\n{\n  \"label\": \"鄠邑区\",\n  \"value\": \"610118\" },\n\n{\n  \"label\": \"蓝田县\",\n  \"value\": \"610122\" },\n\n{\n  \"label\": \"周至县\",\n  \"value\": \"610124\" }],\n\n\n[{\n  \"label\": \"王益区\",\n  \"value\": \"610202\" },\n\n{\n  \"label\": \"印台区\",\n  \"value\": \"610203\" },\n\n{\n  \"label\": \"耀州区\",\n  \"value\": \"610204\" },\n\n{\n  \"label\": \"宜君县\",\n  \"value\": \"610222\" }],\n\n\n[{\n  \"label\": \"渭滨区\",\n  \"value\": \"610302\" },\n\n{\n  \"label\": \"金台区\",\n  \"value\": \"610303\" },\n\n{\n  \"label\": \"陈仓区\",\n  \"value\": \"610304\" },\n\n{\n  \"label\": \"凤翔县\",\n  \"value\": \"610322\" },\n\n{\n  \"label\": \"岐山县\",\n  \"value\": \"610323\" },\n\n{\n  \"label\": \"扶风县\",\n  \"value\": \"610324\" },\n\n{\n  \"label\": \"眉县\",\n  \"value\": \"610326\" },\n\n{\n  \"label\": \"陇县\",\n  \"value\": \"610327\" },\n\n{\n  \"label\": \"千阳县\",\n  \"value\": \"610328\" },\n\n{\n  \"label\": \"麟游县\",\n  \"value\": \"610329\" },\n\n{\n  \"label\": \"凤县\",\n  \"value\": \"610330\" },\n\n{\n  \"label\": \"太白县\",\n  \"value\": \"610331\" }],\n\n\n[{\n  \"label\": \"秦都区\",\n  \"value\": \"610402\" },\n\n{\n  \"label\": \"杨陵区\",\n  \"value\": \"610403\" },\n\n{\n  \"label\": \"渭城区\",\n  \"value\": \"610404\" },\n\n{\n  \"label\": \"三原县\",\n  \"value\": \"610422\" },\n\n{\n  \"label\": \"泾阳县\",\n  \"value\": \"610423\" },\n\n{\n  \"label\": \"乾县\",\n  \"value\": \"610424\" },\n\n{\n  \"label\": \"礼泉县\",\n  \"value\": \"610425\" },\n\n{\n  \"label\": \"永寿县\",\n  \"value\": \"610426\" },\n\n{\n  \"label\": \"彬县\",\n  \"value\": \"610427\" },\n\n{\n  \"label\": \"长武县\",\n  \"value\": \"610428\" },\n\n{\n  \"label\": \"旬邑县\",\n  \"value\": \"610429\" },\n\n{\n  \"label\": \"淳化县\",\n  \"value\": \"610430\" },\n\n{\n  \"label\": \"武功县\",\n  \"value\": \"610431\" },\n\n{\n  \"label\": \"兴平市\",\n  \"value\": \"610481\" }],\n\n\n[{\n  \"label\": \"临渭区\",\n  \"value\": \"610502\" },\n\n{\n  \"label\": \"华州区\",\n  \"value\": \"610503\" },\n\n{\n  \"label\": \"潼关县\",\n  \"value\": \"610522\" },\n\n{\n  \"label\": \"大荔县\",\n  \"value\": \"610523\" },\n\n{\n  \"label\": \"合阳县\",\n  \"value\": \"610524\" },\n\n{\n  \"label\": \"澄城县\",\n  \"value\": \"610525\" },\n\n{\n  \"label\": \"蒲城县\",\n  \"value\": \"610526\" },\n\n{\n  \"label\": \"白水县\",\n  \"value\": \"610527\" },\n\n{\n  \"label\": \"富平县\",\n  \"value\": \"610528\" },\n\n{\n  \"label\": \"韩城市\",\n  \"value\": \"610581\" },\n\n{\n  \"label\": \"华阴市\",\n  \"value\": \"610582\" }],\n\n\n[{\n  \"label\": \"宝塔区\",\n  \"value\": \"610602\" },\n\n{\n  \"label\": \"安塞区\",\n  \"value\": \"610603\" },\n\n{\n  \"label\": \"延长县\",\n  \"value\": \"610621\" },\n\n{\n  \"label\": \"延川县\",\n  \"value\": \"610622\" },\n\n{\n  \"label\": \"子长县\",\n  \"value\": \"610623\" },\n\n{\n  \"label\": \"志丹县\",\n  \"value\": \"610625\" },\n\n{\n  \"label\": \"吴起县\",\n  \"value\": \"610626\" },\n\n{\n  \"label\": \"甘泉县\",\n  \"value\": \"610627\" },\n\n{\n  \"label\": \"富县\",\n  \"value\": \"610628\" },\n\n{\n  \"label\": \"洛川县\",\n  \"value\": \"610629\" },\n\n{\n  \"label\": \"宜川县\",\n  \"value\": \"610630\" },\n\n{\n  \"label\": \"黄龙县\",\n  \"value\": \"610631\" },\n\n{\n  \"label\": \"黄陵县\",\n  \"value\": \"610632\" }],\n\n\n[{\n  \"label\": \"汉台区\",\n  \"value\": \"610702\" },\n\n{\n  \"label\": \"南郑区\",\n  \"value\": \"610703\" },\n\n{\n  \"label\": \"城固县\",\n  \"value\": \"610722\" },\n\n{\n  \"label\": \"洋县\",\n  \"value\": \"610723\" },\n\n{\n  \"label\": \"西乡县\",\n  \"value\": \"610724\" },\n\n{\n  \"label\": \"勉县\",\n  \"value\": \"610725\" },\n\n{\n  \"label\": \"宁强县\",\n  \"value\": \"610726\" },\n\n{\n  \"label\": \"略阳县\",\n  \"value\": \"610727\" },\n\n{\n  \"label\": \"镇巴县\",\n  \"value\": \"610728\" },\n\n{\n  \"label\": \"留坝县\",\n  \"value\": \"610729\" },\n\n{\n  \"label\": \"佛坪县\",\n  \"value\": \"610730\" }],\n\n\n[{\n  \"label\": \"榆阳区\",\n  \"value\": \"610802\" },\n\n{\n  \"label\": \"横山区\",\n  \"value\": \"610803\" },\n\n{\n  \"label\": \"府谷县\",\n  \"value\": \"610822\" },\n\n{\n  \"label\": \"靖边县\",\n  \"value\": \"610824\" },\n\n{\n  \"label\": \"定边县\",\n  \"value\": \"610825\" },\n\n{\n  \"label\": \"绥德县\",\n  \"value\": \"610826\" },\n\n{\n  \"label\": \"米脂县\",\n  \"value\": \"610827\" },\n\n{\n  \"label\": \"佳县\",\n  \"value\": \"610828\" },\n\n{\n  \"label\": \"吴堡县\",\n  \"value\": \"610829\" },\n\n{\n  \"label\": \"清涧县\",\n  \"value\": \"610830\" },\n\n{\n  \"label\": \"子洲县\",\n  \"value\": \"610831\" },\n\n{\n  \"label\": \"神木市\",\n  \"value\": \"610881\" }],\n\n\n[{\n  \"label\": \"汉滨区\",\n  \"value\": \"610902\" },\n\n{\n  \"label\": \"汉阴县\",\n  \"value\": \"610921\" },\n\n{\n  \"label\": \"石泉县\",\n  \"value\": \"610922\" },\n\n{\n  \"label\": \"宁陕县\",\n  \"value\": \"610923\" },\n\n{\n  \"label\": \"紫阳县\",\n  \"value\": \"610924\" },\n\n{\n  \"label\": \"岚皋县\",\n  \"value\": \"610925\" },\n\n{\n  \"label\": \"平利县\",\n  \"value\": \"610926\" },\n\n{\n  \"label\": \"镇坪县\",\n  \"value\": \"610927\" },\n\n{\n  \"label\": \"旬阳县\",\n  \"value\": \"610928\" },\n\n{\n  \"label\": \"白河县\",\n  \"value\": \"610929\" }],\n\n\n[{\n  \"label\": \"商州区\",\n  \"value\": \"611002\" },\n\n{\n  \"label\": \"洛南县\",\n  \"value\": \"611021\" },\n\n{\n  \"label\": \"丹凤县\",\n  \"value\": \"611022\" },\n\n{\n  \"label\": \"商南县\",\n  \"value\": \"611023\" },\n\n{\n  \"label\": \"山阳县\",\n  \"value\": \"611024\" },\n\n{\n  \"label\": \"镇安县\",\n  \"value\": \"611025\" },\n\n{\n  \"label\": \"柞水县\",\n  \"value\": \"611026\" }]],\n\n\n\n[\n[{\n  \"label\": \"城关区\",\n  \"value\": \"620102\" },\n\n{\n  \"label\": \"七里河区\",\n  \"value\": \"620103\" },\n\n{\n  \"label\": \"西固区\",\n  \"value\": \"620104\" },\n\n{\n  \"label\": \"安宁区\",\n  \"value\": \"620105\" },\n\n{\n  \"label\": \"红古区\",\n  \"value\": \"620111\" },\n\n{\n  \"label\": \"永登县\",\n  \"value\": \"620121\" },\n\n{\n  \"label\": \"皋兰县\",\n  \"value\": \"620122\" },\n\n{\n  \"label\": \"榆中县\",\n  \"value\": \"620123\" },\n\n{\n  \"label\": \"兰州新区\",\n  \"value\": \"620171\" }],\n\n\n[{\n  \"label\": \"嘉峪关市\",\n  \"value\": \"620201\" }],\n\n[{\n  \"label\": \"金川区\",\n  \"value\": \"620302\" },\n\n{\n  \"label\": \"永昌县\",\n  \"value\": \"620321\" }],\n\n\n[{\n  \"label\": \"白银区\",\n  \"value\": \"620402\" },\n\n{\n  \"label\": \"平川区\",\n  \"value\": \"620403\" },\n\n{\n  \"label\": \"靖远县\",\n  \"value\": \"620421\" },\n\n{\n  \"label\": \"会宁县\",\n  \"value\": \"620422\" },\n\n{\n  \"label\": \"景泰县\",\n  \"value\": \"620423\" }],\n\n\n[{\n  \"label\": \"秦州区\",\n  \"value\": \"620502\" },\n\n{\n  \"label\": \"麦积区\",\n  \"value\": \"620503\" },\n\n{\n  \"label\": \"清水县\",\n  \"value\": \"620521\" },\n\n{\n  \"label\": \"秦安县\",\n  \"value\": \"620522\" },\n\n{\n  \"label\": \"甘谷县\",\n  \"value\": \"620523\" },\n\n{\n  \"label\": \"武山县\",\n  \"value\": \"620524\" },\n\n{\n  \"label\": \"张家川回族自治县\",\n  \"value\": \"620525\" }],\n\n\n[{\n  \"label\": \"凉州区\",\n  \"value\": \"620602\" },\n\n{\n  \"label\": \"民勤县\",\n  \"value\": \"620621\" },\n\n{\n  \"label\": \"古浪县\",\n  \"value\": \"620622\" },\n\n{\n  \"label\": \"天祝藏族自治县\",\n  \"value\": \"620623\" }],\n\n\n[{\n  \"label\": \"甘州区\",\n  \"value\": \"620702\" },\n\n{\n  \"label\": \"肃南裕固族自治县\",\n  \"value\": \"620721\" },\n\n{\n  \"label\": \"民乐县\",\n  \"value\": \"620722\" },\n\n{\n  \"label\": \"临泽县\",\n  \"value\": \"620723\" },\n\n{\n  \"label\": \"高台县\",\n  \"value\": \"620724\" },\n\n{\n  \"label\": \"山丹县\",\n  \"value\": \"620725\" }],\n\n\n[{\n  \"label\": \"崆峒区\",\n  \"value\": \"620802\" },\n\n{\n  \"label\": \"泾川县\",\n  \"value\": \"620821\" },\n\n{\n  \"label\": \"灵台县\",\n  \"value\": \"620822\" },\n\n{\n  \"label\": \"崇信县\",\n  \"value\": \"620823\" },\n\n{\n  \"label\": \"华亭县\",\n  \"value\": \"620824\" },\n\n{\n  \"label\": \"庄浪县\",\n  \"value\": \"620825\" },\n\n{\n  \"label\": \"静宁县\",\n  \"value\": \"620826\" },\n\n{\n  \"label\": \"平凉工业园区\",\n  \"value\": \"620871\" }],\n\n\n[{\n  \"label\": \"肃州区\",\n  \"value\": \"620902\" },\n\n{\n  \"label\": \"金塔县\",\n  \"value\": \"620921\" },\n\n{\n  \"label\": \"瓜州县\",\n  \"value\": \"620922\" },\n\n{\n  \"label\": \"肃北蒙古族自治县\",\n  \"value\": \"620923\" },\n\n{\n  \"label\": \"阿克塞哈萨克族自治县\",\n  \"value\": \"620924\" },\n\n{\n  \"label\": \"玉门市\",\n  \"value\": \"620981\" },\n\n{\n  \"label\": \"敦煌市\",\n  \"value\": \"620982\" }],\n\n\n[{\n  \"label\": \"西峰区\",\n  \"value\": \"621002\" },\n\n{\n  \"label\": \"庆城县\",\n  \"value\": \"621021\" },\n\n{\n  \"label\": \"环县\",\n  \"value\": \"621022\" },\n\n{\n  \"label\": \"华池县\",\n  \"value\": \"621023\" },\n\n{\n  \"label\": \"合水县\",\n  \"value\": \"621024\" },\n\n{\n  \"label\": \"正宁县\",\n  \"value\": \"621025\" },\n\n{\n  \"label\": \"宁县\",\n  \"value\": \"621026\" },\n\n{\n  \"label\": \"镇原县\",\n  \"value\": \"621027\" }],\n\n\n[{\n  \"label\": \"安定区\",\n  \"value\": \"621102\" },\n\n{\n  \"label\": \"通渭县\",\n  \"value\": \"621121\" },\n\n{\n  \"label\": \"陇西县\",\n  \"value\": \"621122\" },\n\n{\n  \"label\": \"渭源县\",\n  \"value\": \"621123\" },\n\n{\n  \"label\": \"临洮县\",\n  \"value\": \"621124\" },\n\n{\n  \"label\": \"漳县\",\n  \"value\": \"621125\" },\n\n{\n  \"label\": \"岷县\",\n  \"value\": \"621126\" }],\n\n\n[{\n  \"label\": \"武都区\",\n  \"value\": \"621202\" },\n\n{\n  \"label\": \"成县\",\n  \"value\": \"621221\" },\n\n{\n  \"label\": \"文县\",\n  \"value\": \"621222\" },\n\n{\n  \"label\": \"宕昌县\",\n  \"value\": \"621223\" },\n\n{\n  \"label\": \"康县\",\n  \"value\": \"621224\" },\n\n{\n  \"label\": \"西和县\",\n  \"value\": \"621225\" },\n\n{\n  \"label\": \"礼县\",\n  \"value\": \"621226\" },\n\n{\n  \"label\": \"徽县\",\n  \"value\": \"621227\" },\n\n{\n  \"label\": \"两当县\",\n  \"value\": \"621228\" }],\n\n\n[{\n  \"label\": \"临夏市\",\n  \"value\": \"622901\" },\n\n{\n  \"label\": \"临夏县\",\n  \"value\": \"622921\" },\n\n{\n  \"label\": \"康乐县\",\n  \"value\": \"622922\" },\n\n{\n  \"label\": \"永靖县\",\n  \"value\": \"622923\" },\n\n{\n  \"label\": \"广河县\",\n  \"value\": \"622924\" },\n\n{\n  \"label\": \"和政县\",\n  \"value\": \"622925\" },\n\n{\n  \"label\": \"东乡族自治县\",\n  \"value\": \"622926\" },\n\n{\n  \"label\": \"积石山保安族东乡族撒拉族自治县\",\n  \"value\": \"622927\" }],\n\n\n[{\n  \"label\": \"合作市\",\n  \"value\": \"623001\" },\n\n{\n  \"label\": \"临潭县\",\n  \"value\": \"623021\" },\n\n{\n  \"label\": \"卓尼县\",\n  \"value\": \"623022\" },\n\n{\n  \"label\": \"舟曲县\",\n  \"value\": \"623023\" },\n\n{\n  \"label\": \"迭部县\",\n  \"value\": \"623024\" },\n\n{\n  \"label\": \"玛曲县\",\n  \"value\": \"623025\" },\n\n{\n  \"label\": \"碌曲县\",\n  \"value\": \"623026\" },\n\n{\n  \"label\": \"夏河县\",\n  \"value\": \"623027\" }]],\n\n\n\n[\n[{\n  \"label\": \"城东区\",\n  \"value\": \"630102\" },\n\n{\n  \"label\": \"城中区\",\n  \"value\": \"630103\" },\n\n{\n  \"label\": \"城西区\",\n  \"value\": \"630104\" },\n\n{\n  \"label\": \"城北区\",\n  \"value\": \"630105\" },\n\n{\n  \"label\": \"大通回族土族自治县\",\n  \"value\": \"630121\" },\n\n{\n  \"label\": \"湟中县\",\n  \"value\": \"630122\" },\n\n{\n  \"label\": \"湟源县\",\n  \"value\": \"630123\" }],\n\n\n[{\n  \"label\": \"乐都区\",\n  \"value\": \"630202\" },\n\n{\n  \"label\": \"平安区\",\n  \"value\": \"630203\" },\n\n{\n  \"label\": \"民和回族土族自治县\",\n  \"value\": \"630222\" },\n\n{\n  \"label\": \"互助土族自治县\",\n  \"value\": \"630223\" },\n\n{\n  \"label\": \"化隆回族自治县\",\n  \"value\": \"630224\" },\n\n{\n  \"label\": \"循化撒拉族自治县\",\n  \"value\": \"630225\" }],\n\n\n[{\n  \"label\": \"门源回族自治县\",\n  \"value\": \"632221\" },\n\n{\n  \"label\": \"祁连县\",\n  \"value\": \"632222\" },\n\n{\n  \"label\": \"海晏县\",\n  \"value\": \"632223\" },\n\n{\n  \"label\": \"刚察县\",\n  \"value\": \"632224\" }],\n\n\n[{\n  \"label\": \"同仁县\",\n  \"value\": \"632321\" },\n\n{\n  \"label\": \"尖扎县\",\n  \"value\": \"632322\" },\n\n{\n  \"label\": \"泽库县\",\n  \"value\": \"632323\" },\n\n{\n  \"label\": \"河南蒙古族自治县\",\n  \"value\": \"632324\" }],\n\n\n[{\n  \"label\": \"共和县\",\n  \"value\": \"632521\" },\n\n{\n  \"label\": \"同德县\",\n  \"value\": \"632522\" },\n\n{\n  \"label\": \"贵德县\",\n  \"value\": \"632523\" },\n\n{\n  \"label\": \"兴海县\",\n  \"value\": \"632524\" },\n\n{\n  \"label\": \"贵南县\",\n  \"value\": \"632525\" }],\n\n\n[{\n  \"label\": \"玛沁县\",\n  \"value\": \"632621\" },\n\n{\n  \"label\": \"班玛县\",\n  \"value\": \"632622\" },\n\n{\n  \"label\": \"甘德县\",\n  \"value\": \"632623\" },\n\n{\n  \"label\": \"达日县\",\n  \"value\": \"632624\" },\n\n{\n  \"label\": \"久治县\",\n  \"value\": \"632625\" },\n\n{\n  \"label\": \"玛多县\",\n  \"value\": \"632626\" }],\n\n\n[{\n  \"label\": \"玉树市\",\n  \"value\": \"632701\" },\n\n{\n  \"label\": \"杂多县\",\n  \"value\": \"632722\" },\n\n{\n  \"label\": \"称多县\",\n  \"value\": \"632723\" },\n\n{\n  \"label\": \"治多县\",\n  \"value\": \"632724\" },\n\n{\n  \"label\": \"囊谦县\",\n  \"value\": \"632725\" },\n\n{\n  \"label\": \"曲麻莱县\",\n  \"value\": \"632726\" }],\n\n\n[{\n  \"label\": \"格尔木市\",\n  \"value\": \"632801\" },\n\n{\n  \"label\": \"德令哈市\",\n  \"value\": \"632802\" },\n\n{\n  \"label\": \"乌兰县\",\n  \"value\": \"632821\" },\n\n{\n  \"label\": \"都兰县\",\n  \"value\": \"632822\" },\n\n{\n  \"label\": \"天峻县\",\n  \"value\": \"632823\" },\n\n{\n  \"label\": \"大柴旦行政委员会\",\n  \"value\": \"632857\" },\n\n{\n  \"label\": \"冷湖行政委员会\",\n  \"value\": \"632858\" },\n\n{\n  \"label\": \"茫崖行政委员会\",\n  \"value\": \"632859\" }]],\n\n\n\n[\n[{\n  \"label\": \"兴庆区\",\n  \"value\": \"640104\" },\n\n{\n  \"label\": \"西夏区\",\n  \"value\": \"640105\" },\n\n{\n  \"label\": \"金凤区\",\n  \"value\": \"640106\" },\n\n{\n  \"label\": \"永宁县\",\n  \"value\": \"640121\" },\n\n{\n  \"label\": \"贺兰县\",\n  \"value\": \"640122\" },\n\n{\n  \"label\": \"灵武市\",\n  \"value\": \"640181\" }],\n\n\n[{\n  \"label\": \"大武口区\",\n  \"value\": \"640202\" },\n\n{\n  \"label\": \"惠农区\",\n  \"value\": \"640205\" },\n\n{\n  \"label\": \"平罗县\",\n  \"value\": \"640221\" }],\n\n\n[{\n  \"label\": \"利通区\",\n  \"value\": \"640302\" },\n\n{\n  \"label\": \"红寺堡区\",\n  \"value\": \"640303\" },\n\n{\n  \"label\": \"盐池县\",\n  \"value\": \"640323\" },\n\n{\n  \"label\": \"同心县\",\n  \"value\": \"640324\" },\n\n{\n  \"label\": \"青铜峡市\",\n  \"value\": \"640381\" }],\n\n\n[{\n  \"label\": \"原州区\",\n  \"value\": \"640402\" },\n\n{\n  \"label\": \"西吉县\",\n  \"value\": \"640422\" },\n\n{\n  \"label\": \"隆德县\",\n  \"value\": \"640423\" },\n\n{\n  \"label\": \"泾源县\",\n  \"value\": \"640424\" },\n\n{\n  \"label\": \"彭阳县\",\n  \"value\": \"640425\" }],\n\n\n[{\n  \"label\": \"沙坡头区\",\n  \"value\": \"640502\" },\n\n{\n  \"label\": \"中宁县\",\n  \"value\": \"640521\" },\n\n{\n  \"label\": \"海原县\",\n  \"value\": \"640522\" }]],\n\n\n\n[\n[{\n  \"label\": \"天山区\",\n  \"value\": \"650102\" },\n\n{\n  \"label\": \"沙依巴克区\",\n  \"value\": \"650103\" },\n\n{\n  \"label\": \"新市区\",\n  \"value\": \"650104\" },\n\n{\n  \"label\": \"水磨沟区\",\n  \"value\": \"650105\" },\n\n{\n  \"label\": \"头屯河区\",\n  \"value\": \"650106\" },\n\n{\n  \"label\": \"达坂城区\",\n  \"value\": \"650107\" },\n\n{\n  \"label\": \"米东区\",\n  \"value\": \"650109\" },\n\n{\n  \"label\": \"乌鲁木齐县\",\n  \"value\": \"650121\" },\n\n{\n  \"label\": \"乌鲁木齐经济技术开发区\",\n  \"value\": \"650171\" },\n\n{\n  \"label\": \"乌鲁木齐高新技术产业开发区\",\n  \"value\": \"650172\" }],\n\n\n[{\n  \"label\": \"独山子区\",\n  \"value\": \"650202\" },\n\n{\n  \"label\": \"克拉玛依区\",\n  \"value\": \"650203\" },\n\n{\n  \"label\": \"白碱滩区\",\n  \"value\": \"650204\" },\n\n{\n  \"label\": \"乌尔禾区\",\n  \"value\": \"650205\" }],\n\n\n[{\n  \"label\": \"高昌区\",\n  \"value\": \"650402\" },\n\n{\n  \"label\": \"鄯善县\",\n  \"value\": \"650421\" },\n\n{\n  \"label\": \"托克逊县\",\n  \"value\": \"650422\" }],\n\n\n[{\n  \"label\": \"伊州区\",\n  \"value\": \"650502\" },\n\n{\n  \"label\": \"巴里坤哈萨克自治县\",\n  \"value\": \"650521\" },\n\n{\n  \"label\": \"伊吾县\",\n  \"value\": \"650522\" }],\n\n\n[{\n  \"label\": \"昌吉市\",\n  \"value\": \"652301\" },\n\n{\n  \"label\": \"阜康市\",\n  \"value\": \"652302\" },\n\n{\n  \"label\": \"呼图壁县\",\n  \"value\": \"652323\" },\n\n{\n  \"label\": \"玛纳斯县\",\n  \"value\": \"652324\" },\n\n{\n  \"label\": \"奇台县\",\n  \"value\": \"652325\" },\n\n{\n  \"label\": \"吉木萨尔县\",\n  \"value\": \"652327\" },\n\n{\n  \"label\": \"木垒哈萨克自治县\",\n  \"value\": \"652328\" }],\n\n\n[{\n  \"label\": \"博乐市\",\n  \"value\": \"652701\" },\n\n{\n  \"label\": \"阿拉山口市\",\n  \"value\": \"652702\" },\n\n{\n  \"label\": \"精河县\",\n  \"value\": \"652722\" },\n\n{\n  \"label\": \"温泉县\",\n  \"value\": \"652723\" }],\n\n\n[{\n  \"label\": \"库尔勒市\",\n  \"value\": \"652801\" },\n\n{\n  \"label\": \"轮台县\",\n  \"value\": \"652822\" },\n\n{\n  \"label\": \"尉犁县\",\n  \"value\": \"652823\" },\n\n{\n  \"label\": \"若羌县\",\n  \"value\": \"652824\" },\n\n{\n  \"label\": \"且末县\",\n  \"value\": \"652825\" },\n\n{\n  \"label\": \"焉耆回族自治县\",\n  \"value\": \"652826\" },\n\n{\n  \"label\": \"和静县\",\n  \"value\": \"652827\" },\n\n{\n  \"label\": \"和硕县\",\n  \"value\": \"652828\" },\n\n{\n  \"label\": \"博湖县\",\n  \"value\": \"652829\" },\n\n{\n  \"label\": \"库尔勒经济技术开发区\",\n  \"value\": \"652871\" }],\n\n\n[{\n  \"label\": \"阿克苏市\",\n  \"value\": \"652901\" },\n\n{\n  \"label\": \"温宿县\",\n  \"value\": \"652922\" },\n\n{\n  \"label\": \"库车县\",\n  \"value\": \"652923\" },\n\n{\n  \"label\": \"沙雅县\",\n  \"value\": \"652924\" },\n\n{\n  \"label\": \"新和县\",\n  \"value\": \"652925\" },\n\n{\n  \"label\": \"拜城县\",\n  \"value\": \"652926\" },\n\n{\n  \"label\": \"乌什县\",\n  \"value\": \"652927\" },\n\n{\n  \"label\": \"阿瓦提县\",\n  \"value\": \"652928\" },\n\n{\n  \"label\": \"柯坪县\",\n  \"value\": \"652929\" }],\n\n\n[{\n  \"label\": \"阿图什市\",\n  \"value\": \"653001\" },\n\n{\n  \"label\": \"阿克陶县\",\n  \"value\": \"653022\" },\n\n{\n  \"label\": \"阿合奇县\",\n  \"value\": \"653023\" },\n\n{\n  \"label\": \"乌恰县\",\n  \"value\": \"653024\" }],\n\n\n[{\n  \"label\": \"喀什市\",\n  \"value\": \"653101\" },\n\n{\n  \"label\": \"疏附县\",\n  \"value\": \"653121\" },\n\n{\n  \"label\": \"疏勒县\",\n  \"value\": \"653122\" },\n\n{\n  \"label\": \"英吉沙县\",\n  \"value\": \"653123\" },\n\n{\n  \"label\": \"泽普县\",\n  \"value\": \"653124\" },\n\n{\n  \"label\": \"莎车县\",\n  \"value\": \"653125\" },\n\n{\n  \"label\": \"叶城县\",\n  \"value\": \"653126\" },\n\n{\n  \"label\": \"麦盖提县\",\n  \"value\": \"653127\" },\n\n{\n  \"label\": \"岳普湖县\",\n  \"value\": \"653128\" },\n\n{\n  \"label\": \"伽师县\",\n  \"value\": \"653129\" },\n\n{\n  \"label\": \"巴楚县\",\n  \"value\": \"653130\" },\n\n{\n  \"label\": \"塔什库尔干塔吉克自治县\",\n  \"value\": \"653131\" }],\n\n\n[{\n  \"label\": \"和田市\",\n  \"value\": \"653201\" },\n\n{\n  \"label\": \"和田县\",\n  \"value\": \"653221\" },\n\n{\n  \"label\": \"墨玉县\",\n  \"value\": \"653222\" },\n\n{\n  \"label\": \"皮山县\",\n  \"value\": \"653223\" },\n\n{\n  \"label\": \"洛浦县\",\n  \"value\": \"653224\" },\n\n{\n  \"label\": \"策勒县\",\n  \"value\": \"653225\" },\n\n{\n  \"label\": \"于田县\",\n  \"value\": \"653226\" },\n\n{\n  \"label\": \"民丰县\",\n  \"value\": \"653227\" }],\n\n\n[{\n  \"label\": \"伊宁市\",\n  \"value\": \"654002\" },\n\n{\n  \"label\": \"奎屯市\",\n  \"value\": \"654003\" },\n\n{\n  \"label\": \"霍尔果斯市\",\n  \"value\": \"654004\" },\n\n{\n  \"label\": \"伊宁县\",\n  \"value\": \"654021\" },\n\n{\n  \"label\": \"察布查尔锡伯自治县\",\n  \"value\": \"654022\" },\n\n{\n  \"label\": \"霍城县\",\n  \"value\": \"654023\" },\n\n{\n  \"label\": \"巩留县\",\n  \"value\": \"654024\" },\n\n{\n  \"label\": \"新源县\",\n  \"value\": \"654025\" },\n\n{\n  \"label\": \"昭苏县\",\n  \"value\": \"654026\" },\n\n{\n  \"label\": \"特克斯县\",\n  \"value\": \"654027\" },\n\n{\n  \"label\": \"尼勒克县\",\n  \"value\": \"654028\" }],\n\n\n[{\n  \"label\": \"塔城市\",\n  \"value\": \"654201\" },\n\n{\n  \"label\": \"乌苏市\",\n  \"value\": \"654202\" },\n\n{\n  \"label\": \"额敏县\",\n  \"value\": \"654221\" },\n\n{\n  \"label\": \"沙湾县\",\n  \"value\": \"654223\" },\n\n{\n  \"label\": \"托里县\",\n  \"value\": \"654224\" },\n\n{\n  \"label\": \"裕民县\",\n  \"value\": \"654225\" },\n\n{\n  \"label\": \"和布克赛尔蒙古自治县\",\n  \"value\": \"654226\" }],\n\n\n[{\n  \"label\": \"阿勒泰市\",\n  \"value\": \"654301\" },\n\n{\n  \"label\": \"布尔津县\",\n  \"value\": \"654321\" },\n\n{\n  \"label\": \"富蕴县\",\n  \"value\": \"654322\" },\n\n{\n  \"label\": \"福海县\",\n  \"value\": \"654323\" },\n\n{\n  \"label\": \"哈巴河县\",\n  \"value\": \"654324\" },\n\n{\n  \"label\": \"青河县\",\n  \"value\": \"654325\" },\n\n{\n  \"label\": \"吉木乃县\",\n  \"value\": \"654326\" }],\n\n\n[{\n  \"label\": \"石河子市\",\n  \"value\": \"659001\" },\n\n{\n  \"label\": \"阿拉尔市\",\n  \"value\": \"659002\" },\n\n{\n  \"label\": \"图木舒克市\",\n  \"value\": \"659003\" },\n\n{\n  \"label\": \"五家渠市\",\n  \"value\": \"659004\" },\n\n{\n  \"label\": \"铁门关市\",\n  \"value\": \"659006\" }]],\n\n\n\n[\n[{\n  \"label\": \"台北\",\n  \"value\": \"660101\" }],\n\n[{\n  \"label\": \"高雄\",\n  \"value\": \"660201\" }],\n\n[{\n  \"label\": \"基隆\",\n  \"value\": \"660301\" }],\n\n[{\n  \"label\": \"台中\",\n  \"value\": \"660401\" }],\n\n[{\n  \"label\": \"台南\",\n  \"value\": \"660501\" }],\n\n[{\n  \"label\": \"新竹\",\n  \"value\": \"660601\" }],\n\n[{\n  \"label\": \"嘉义\",\n  \"value\": \"660701\" }],\n\n[{\n  \"label\": \"宜兰\",\n  \"value\": \"660801\" }],\n\n[{\n  \"label\": \"桃园\",\n  \"value\": \"660901\" }],\n\n[{\n  \"label\": \"苗栗\",\n  \"value\": \"661001\" }],\n\n[{\n  \"label\": \"彰化\",\n  \"value\": \"661101\" }],\n\n[{\n  \"label\": \"南投\",\n  \"value\": \"661201\" }],\n\n[{\n  \"label\": \"云林\",\n  \"value\": \"661301\" }],\n\n[{\n  \"label\": \"屏东\",\n  \"value\": \"661401\" }],\n\n[{\n  \"label\": \"台东\",\n  \"value\": \"661501\" }],\n\n[{\n  \"label\": \"花莲\",\n  \"value\": \"661601\" }],\n\n[{\n  \"label\": \"澎湖\",\n  \"value\": \"661701\" }]],\n\n\n[\n[{\n  \"label\": \"香港岛\",\n  \"value\": \"670101\" }],\n\n[{\n  \"label\": \"九龙\",\n  \"value\": \"670201\" }],\n\n[{\n  \"label\": \"新界\",\n  \"value\": \"670301\" }]],\n\n\n[\n[{\n  \"label\": \"澳门半岛\",\n  \"value\": \"680101\" }],\n\n[{\n  \"label\": \"氹仔岛\",\n  \"value\": \"680201\" }],\n\n[{\n  \"label\": \"路环岛\",\n  \"value\": \"680301\" }],\n\n[{\n  \"label\": \"路氹城\",\n  \"value\": \"680401\" }]]];var _default =\n\n\n\nareaData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///374\n");

/***/ }),

/***/ 4:
/*!***********************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/pages.json ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI0LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),

/***/ 5:
/*!*******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/dist/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {var _package = __webpack_require__(/*! ../package.json */ 6);function _possibleConstructorReturn(self, call) {if (call && (typeof call === \"object\" || typeof call === \"function\")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}\n\nvar STAT_VERSION = _package.version;\nvar STAT_URL = 'https://tongji.dcloud.io/uni/stat';\nvar STAT_H5_URL = 'https://tongji.dcloud.io/uni/stat.gif';\nvar PAGE_PVER_TIME = 1800;\nvar APP_PVER_TIME = 300;\nvar OPERATING_TIME = 10;\n\nvar UUID_KEY = '__DC_STAT_UUID';\nvar UUID_VALUE = '__DC_UUID_VALUE';\n\nfunction getUuid() {\n  var uuid = '';\n  if (getPlatformName() === 'n') {\n    try {\n      uuid = plus.runtime.getDCloudId();\n    } catch (e) {\n      uuid = '';\n    }\n    return uuid;\n  }\n\n  try {\n    uuid = uni.getStorageSync(UUID_KEY);\n  } catch (e) {\n    uuid = UUID_VALUE;\n  }\n\n  if (!uuid) {\n    uuid = Date.now() + '' + Math.floor(Math.random() * 1e7);\n    try {\n      uni.setStorageSync(UUID_KEY, uuid);\n    } catch (e) {\n      uni.setStorageSync(UUID_KEY, UUID_VALUE);\n    }\n  }\n  return uuid;\n}\n\nvar getSgin = function getSgin(statData) {\n  var arr = Object.keys(statData);\n  var sortArr = arr.sort();\n  var sgin = {};\n  var sginStr = '';\n  for (var i in sortArr) {\n    sgin[sortArr[i]] = statData[sortArr[i]];\n    sginStr += sortArr[i] + '=' + statData[sortArr[i]] + '&';\n  }\n  // const options = sginStr.substr(0, sginStr.length - 1)\n  // sginStr = sginStr.substr(0, sginStr.length - 1) + '&key=' + STAT_KEY;\n  // const si = crypto.createHash('md5').update(sginStr).digest('hex');\n  return {\n    sign: '',\n    options: sginStr.substr(0, sginStr.length - 1) };\n\n};\n\nvar getSplicing = function getSplicing(data) {\n  var str = '';\n  for (var i in data) {\n    str += i + '=' + data[i] + '&';\n  }\n  return str.substr(0, str.length - 1);\n};\n\nvar getTime = function getTime() {\n  return parseInt(new Date().getTime() / 1000);\n};\n\nvar getPlatformName = function getPlatformName() {\n  var platformList = {\n    'app-plus': 'n',\n    'h5': 'h5',\n    'mp-weixin': 'wx',\n    'mp-alipay': 'ali',\n    'mp-baidu': 'bd',\n    'mp-toutiao': 'tt',\n    'mp-qq': 'qq' };\n\n  return platformList[\"app-plus\"];\n};\n\nvar getPackName = function getPackName() {\n  var packName = '';\n  if (getPlatformName() === 'wx' || getPlatformName() === 'qq') {\n    // 兼容微信小程序低版本基础库\n    if (uni.canIUse('getAccountInfoSync')) {\n      packName = uni.getAccountInfoSync().miniProgram.appId || '';\n    }\n  }\n  return packName;\n};\n\nvar getVersion = function getVersion() {\n  return getPlatformName() === 'n' ? plus.runtime.version : '';\n};\n\nvar getChannel = function getChannel() {\n  var platformName = getPlatformName();\n  var channel = '';\n  if (platformName === 'n') {\n    channel = plus.runtime.channel;\n  }\n  return channel;\n};\n\nvar getScene = function getScene(options) {\n  var platformName = getPlatformName();\n  var scene = '';\n  if (options) {\n    return options;\n  }\n  if (platformName === 'wx') {\n    scene = uni.getLaunchOptionsSync().scene;\n  }\n  return scene;\n};\nvar First__Visit__Time__KEY = 'First__Visit__Time';\nvar Last__Visit__Time__KEY = 'Last__Visit__Time';\n\nvar getFirstVisitTime = function getFirstVisitTime() {\n  var timeStorge = uni.getStorageSync(First__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = getTime();\n    uni.setStorageSync(First__Visit__Time__KEY, time);\n    uni.removeStorageSync(Last__Visit__Time__KEY);\n  }\n  return time;\n};\n\nvar getLastVisitTime = function getLastVisitTime() {\n  var timeStorge = uni.getStorageSync(Last__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = '';\n  }\n  uni.setStorageSync(Last__Visit__Time__KEY, getTime());\n  return time;\n};\n\n\nvar PAGE_RESIDENCE_TIME = '__page__residence__time';\nvar First_Page_residence_time = 0;\nvar Last_Page_residence_time = 0;\n\n\nvar setPageResidenceTime = function setPageResidenceTime() {\n  First_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    uni.setStorageSync(PAGE_RESIDENCE_TIME, getTime());\n  }\n  return First_Page_residence_time;\n};\n\nvar getPageResidenceTime = function getPageResidenceTime() {\n  Last_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    First_Page_residence_time = uni.getStorageSync(PAGE_RESIDENCE_TIME);\n  }\n  return Last_Page_residence_time - First_Page_residence_time;\n};\nvar TOTAL__VISIT__COUNT = 'Total__Visit__Count';\nvar getTotalVisitCount = function getTotalVisitCount() {\n  var timeStorge = uni.getStorageSync(TOTAL__VISIT__COUNT);\n  var count = 1;\n  if (timeStorge) {\n    count = timeStorge;\n    count++;\n  }\n  uni.setStorageSync(TOTAL__VISIT__COUNT, count);\n  return count;\n};\n\nvar GetEncodeURIComponentOptions = function GetEncodeURIComponentOptions(statData) {\n  var data = {};\n  for (var prop in statData) {\n    data[prop] = encodeURIComponent(statData[prop]);\n  }\n  return data;\n};\n\nvar Set__First__Time = 0;\nvar Set__Last__Time = 0;\n\nvar getFirstTime = function getFirstTime() {\n  var time = new Date().getTime();\n  Set__First__Time = time;\n  Set__Last__Time = 0;\n  return time;\n};\n\n\nvar getLastTime = function getLastTime() {\n  var time = new Date().getTime();\n  Set__Last__Time = time;\n  return time;\n};\n\n\nvar getResidenceTime = function getResidenceTime(type) {\n  var residenceTime = 0;\n  if (Set__First__Time !== 0) {\n    residenceTime = Set__Last__Time - Set__First__Time;\n  }\n\n  residenceTime = parseInt(residenceTime / 1000);\n  residenceTime = residenceTime < 1 ? 1 : residenceTime;\n  if (type === 'app') {\n    var overtime = residenceTime > APP_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: overtime };\n\n  }\n  if (type === 'page') {\n    var _overtime = residenceTime > PAGE_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: _overtime };\n\n  }\n\n  return {\n    residenceTime: residenceTime };\n\n\n};\n\nvar getRoute = function getRoute() {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is;\n  } else {\n    return _self.$scope && _self.$scope.route || _self.$mp && _self.$mp.page.route;\n  }\n};\n\nvar getPageRoute = function getPageRoute(self) {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n  var query = self._query;\n  var str = query && JSON.stringify(query) !== '{}' ? '?' + JSON.stringify(query) : '';\n  // clear\n  self._query = '';\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is + str;\n  } else {\n    return _self.$scope && _self.$scope.route + str || _self.$mp && _self.$mp.page.route + str;\n  }\n};\n\nvar getPageTypes = function getPageTypes(self) {\n  if (self.mpType === 'page' || self.$mp && self.$mp.mpType === 'page' || self.$options.mpType === 'page') {\n    return true;\n  }\n  return false;\n};\n\nvar calibration = function calibration(eventName, options) {\n  //  login 、 share 、pay_success 、pay_fail 、register 、title\n  if (!eventName) {\n    console.error(\"uni.report \\u7F3A\\u5C11 [eventName] \\u53C2\\u6570\");\n    return true;\n  }\n  if (typeof eventName !== 'string') {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u7C7B\\u578B\");\n    return true;\n  }\n  if (eventName.length > 255) {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (typeof options !== 'string' && typeof options !== 'object') {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u6216 Object \\u7C7B\\u578B\");\n    return true;\n  }\n\n  if (typeof options === 'string' && options.length > 255) {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (eventName === 'title' && typeof options !== 'string') {\n    console.error('uni.report [eventName] 参数为 title 时，[options] 参数只能为 String 类型');\n    return true;\n  }\n};\n\nvar PagesJson = __webpack_require__(/*! uni-pages?{\"type\":\"style\"} */ 7).default;\nvar statConfig = __webpack_require__(/*! uni-stat-config */ 8).default || __webpack_require__(/*! uni-stat-config */ 8);\n\nvar resultOptions = uni.getSystemInfoSync();var\n\nUtil = /*#__PURE__*/function () {\n  function Util() {_classCallCheck(this, Util);\n    this.self = '';\n    this._retry = 0;\n    this._platform = '';\n    this._query = {};\n    this._navigationBarTitle = {\n      config: '',\n      page: '',\n      report: '',\n      lt: '' };\n\n    this._operatingTime = 0;\n    this._reportingRequestData = {\n      '1': [],\n      '11': [] };\n\n    this.__prevent_triggering = false;\n\n    this.__licationHide = false;\n    this.__licationShow = false;\n    this._lastPageRoute = '';\n    this.statData = {\n      uuid: getUuid(),\n      ut: getPlatformName(),\n      mpn: getPackName(),\n      ak: statConfig.appid,\n      usv: STAT_VERSION,\n      v: getVersion(),\n      ch: getChannel(),\n      cn: '',\n      pn: '',\n      ct: '',\n      t: getTime(),\n      tt: '',\n      p: resultOptions.platform === 'android' ? 'a' : 'i',\n      brand: resultOptions.brand || '',\n      md: resultOptions.model,\n      sv: resultOptions.system.replace(/(Android|iOS)\\s/, ''),\n      mpsdk: resultOptions.SDKVersion || '',\n      mpv: resultOptions.version || '',\n      lang: resultOptions.language,\n      pr: resultOptions.pixelRatio,\n      ww: resultOptions.windowWidth,\n      wh: resultOptions.windowHeight,\n      sw: resultOptions.screenWidth,\n      sh: resultOptions.screenHeight };\n\n\n  }_createClass(Util, [{ key: \"_applicationShow\", value: function _applicationShow()\n\n    {\n      if (this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('app');\n        if (time.overtime) {\n          var options = {\n            path: this._lastPageRoute,\n            scene: this.statData.sc };\n\n          this._sendReportRequest(options);\n        }\n        this.__licationHide = false;\n      }\n    } }, { key: \"_applicationHide\", value: function _applicationHide(\n\n    self, type) {\n\n      this.__licationHide = true;\n      getLastTime();\n      var time = getResidenceTime();\n      getFirstTime();\n      var route = getPageRoute(this);\n      this._sendHideRequest({\n        urlref: route,\n        urlref_ts: time.residenceTime },\n      type);\n    } }, { key: \"_pageShow\", value: function _pageShow()\n\n    {\n      var route = getPageRoute(this);\n      var routepath = getRoute();\n      this._navigationBarTitle.config = PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].titleNView &&\n      PagesJson.pages[routepath].titleNView.titleText ||\n      PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].navigationBarTitleText || '';\n\n      if (this.__licationShow) {\n        getFirstTime();\n        this.__licationShow = false;\n        // console.log('这是 onLauch 之后执行的第一次 pageShow ，为下次记录时间做准备');\n        this._lastPageRoute = route;\n        return;\n      }\n\n      getLastTime();\n      this._lastPageRoute = route;\n      var time = getResidenceTime('page');\n      if (time.overtime) {\n        var options = {\n          path: this._lastPageRoute,\n          scene: this.statData.sc };\n\n        this._sendReportRequest(options);\n      }\n      getFirstTime();\n    } }, { key: \"_pageHide\", value: function _pageHide()\n\n    {\n      if (!this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('page');\n        this._sendPageRequest({\n          url: this._lastPageRoute,\n          urlref: this._lastPageRoute,\n          urlref_ts: time.residenceTime });\n\n        this._navigationBarTitle = {\n          config: '',\n          page: '',\n          report: '',\n          lt: '' };\n\n        return;\n      }\n    } }, { key: \"_login\", value: function _login()\n\n    {\n      this._sendEventRequest({\n        key: 'login' },\n      0);\n    } }, { key: \"_share\", value: function _share()\n\n    {\n      this._sendEventRequest({\n        key: 'share' },\n      0);\n    } }, { key: \"_payment\", value: function _payment(\n    key) {\n      this._sendEventRequest({\n        key: key },\n      0);\n    } }, { key: \"_sendReportRequest\", value: function _sendReportRequest(\n    options) {\n\n      this._navigationBarTitle.lt = '1';\n      var query = options.query && JSON.stringify(options.query) !== '{}' ? '?' + JSON.stringify(options.query) : '';\n      this.statData.lt = '1';\n      this.statData.url = options.path + query || '';\n      this.statData.t = getTime();\n      this.statData.sc = getScene(options.scene);\n      this.statData.fvts = getFirstVisitTime();\n      this.statData.lvts = getLastVisitTime();\n      this.statData.tvc = getTotalVisitCount();\n      if (getPlatformName() === 'n') {\n        this.getProperty();\n      } else {\n        this.getNetworkInfo();\n      }\n    } }, { key: \"_sendPageRequest\", value: function _sendPageRequest(\n\n    opt) {var\n\n      url =\n\n\n      opt.url,urlref = opt.urlref,urlref_ts = opt.urlref_ts;\n      this._navigationBarTitle.lt = '11';\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '11',\n        ut: this.statData.ut,\n        url: url,\n        tt: this.statData.tt,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"_sendHideRequest\", value: function _sendHideRequest(\n\n    opt, type) {var\n\n      urlref =\n\n      opt.urlref,urlref_ts = opt.urlref_ts;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '3',\n        ut: this.statData.ut,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options, type);\n    } }, { key: \"_sendEventRequest\", value: function _sendEventRequest()\n\n\n\n    {var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},_ref$key = _ref.key,key = _ref$key === void 0 ? '' : _ref$key,_ref$value = _ref.value,value = _ref$value === void 0 ? \"\" : _ref$value;\n      var route = this._lastPageRoute;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '21',\n        ut: this.statData.ut,\n        url: route,\n        ch: this.statData.ch,\n        e_n: key,\n        e_v: typeof value === 'object' ? JSON.stringify(value) : value.toString(),\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"getNetworkInfo\", value: function getNetworkInfo()\n\n    {var _this = this;\n      uni.getNetworkType({\n        success: function success(result) {\n          _this.statData.net = result.networkType;\n          _this.getLocation();\n        } });\n\n    } }, { key: \"getProperty\", value: function getProperty()\n\n    {var _this2 = this;\n      plus.runtime.getProperty(plus.runtime.appid, function (wgtinfo) {\n        _this2.statData.v = wgtinfo.version || '';\n        _this2.getNetworkInfo();\n      });\n    } }, { key: \"getLocation\", value: function getLocation()\n\n    {var _this3 = this;\n      if (statConfig.getLocation) {\n        uni.getLocation({\n          type: 'wgs84',\n          geocode: true,\n          success: function success(result) {\n            if (result.address) {\n              _this3.statData.cn = result.address.country;\n              _this3.statData.pn = result.address.province;\n              _this3.statData.ct = result.address.city;\n            }\n\n            _this3.statData.lat = result.latitude;\n            _this3.statData.lng = result.longitude;\n            _this3.request(_this3.statData);\n          } });\n\n      } else {\n        this.statData.lat = 0;\n        this.statData.lng = 0;\n        this.request(this.statData);\n      }\n    } }, { key: \"request\", value: function request(\n\n    data, type) {var _this4 = this;\n      var time = getTime();\n      var title = this._navigationBarTitle;\n      data.ttn = title.page;\n      data.ttpj = title.config;\n      data.ttc = title.report;\n\n      var requestData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        requestData = uni.getStorageSync('__UNI__STAT__DATA') || {};\n      }\n      if (!requestData[data.lt]) {\n        requestData[data.lt] = [];\n      }\n      requestData[data.lt].push(data);\n\n      if (getPlatformName() === 'n') {\n        uni.setStorageSync('__UNI__STAT__DATA', requestData);\n      }\n      if (getPageResidenceTime() < OPERATING_TIME && !type) {\n        return;\n      }\n      var uniStatData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        uniStatData = uni.getStorageSync('__UNI__STAT__DATA');\n      }\n      // 时间超过，重新获取时间戳\n      setPageResidenceTime();\n      var firstArr = [];\n      var contentArr = [];\n      var lastArr = [];var _loop = function _loop(\n\n      i) {\n        var rd = uniStatData[i];\n        rd.forEach(function (elm) {\n          var newData = getSplicing(elm);\n          if (i === 0) {\n            firstArr.push(newData);\n          } else if (i === 3) {\n            lastArr.push(newData);\n          } else {\n            contentArr.push(newData);\n          }\n        });};for (var i in uniStatData) {_loop(i);\n      }\n\n      firstArr.push.apply(firstArr, contentArr.concat(lastArr));\n      var optionsData = {\n        usv: STAT_VERSION, //统计 SDK 版本号\n        t: time, //发送请求时的时间戮\n        requests: JSON.stringify(firstArr) };\n\n\n      this._reportingRequestData = {};\n      if (getPlatformName() === 'n') {\n        uni.removeStorageSync('__UNI__STAT__DATA');\n      }\n\n      if (data.ut === 'h5') {\n        this.imageRequest(optionsData);\n        return;\n      }\n\n      if (getPlatformName() === 'n' && this.statData.p === 'a') {\n        setTimeout(function () {\n          _this4._sendRequest(optionsData);\n        }, 200);\n        return;\n      }\n      this._sendRequest(optionsData);\n    } }, { key: \"_sendRequest\", value: function _sendRequest(\n    optionsData) {var _this5 = this;\n      uni.request({\n        url: STAT_URL,\n        method: 'POST',\n        // header: {\n        //   'content-type': 'application/json' // 默认值\n        // },\n        data: optionsData,\n        success: function success() {\n          // if (process.env.NODE_ENV === 'development') {\n          //   console.log('stat request success');\n          // }\n        },\n        fail: function fail(e) {\n          if (++_this5._retry < 3) {\n            setTimeout(function () {\n              _this5._sendRequest(optionsData);\n            }, 1000);\n          }\n        } });\n\n    }\n    /**\r\n       * h5 请求\r\n       */ }, { key: \"imageRequest\", value: function imageRequest(\n    data) {\n      var image = new Image();\n      var options = getSgin(GetEncodeURIComponentOptions(data)).options;\n      image.src = STAT_H5_URL + '?' + options;\n    } }, { key: \"sendEvent\", value: function sendEvent(\n\n    key, value) {\n      // 校验 type 参数\n      if (calibration(key, value)) return;\n\n      if (key === 'title') {\n        this._navigationBarTitle.report = value;\n        return;\n      }\n      this._sendEventRequest({\n        key: key,\n        value: typeof value === 'object' ? JSON.stringify(value) : value },\n      1);\n    } }]);return Util;}();var\n\n\n\nStat = /*#__PURE__*/function (_Util) {_inherits(Stat, _Util);_createClass(Stat, null, [{ key: \"getInstance\", value: function getInstance()\n    {\n      if (!this.instance) {\n        this.instance = new Stat();\n      }\n      return this.instance;\n    } }]);\n  function Stat() {var _this6;_classCallCheck(this, Stat);\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(Stat).call(this));\n    _this6.instance = null;\n    // 注册拦截器\n    if (typeof uni.addInterceptor === 'function' && \"development\" !== 'development') {\n      _this6.addInterceptorInit();\n      _this6.interceptLogin();\n      _this6.interceptShare(true);\n      _this6.interceptRequestPayment();\n    }return _this6;\n  }_createClass(Stat, [{ key: \"addInterceptorInit\", value: function addInterceptorInit()\n\n    {\n      var self = this;\n      uni.addInterceptor('setNavigationBarTitle', {\n        invoke: function invoke(args) {\n          self._navigationBarTitle.page = args.title;\n        } });\n\n    } }, { key: \"interceptLogin\", value: function interceptLogin()\n\n    {\n      var self = this;\n      uni.addInterceptor('login', {\n        complete: function complete() {\n          self._login();\n        } });\n\n    } }, { key: \"interceptShare\", value: function interceptShare(\n\n    type) {\n      var self = this;\n      if (!type) {\n        self._share();\n        return;\n      }\n      uni.addInterceptor('share', {\n        success: function success() {\n          self._share();\n        },\n        fail: function fail() {\n          self._share();\n        } });\n\n    } }, { key: \"interceptRequestPayment\", value: function interceptRequestPayment()\n\n    {\n      var self = this;\n      uni.addInterceptor('requestPayment', {\n        success: function success() {\n          self._payment('pay_success');\n        },\n        fail: function fail() {\n          self._payment('pay_fail');\n        } });\n\n    } }, { key: \"report\", value: function report(\n\n    options, self) {\n      this.self = self;\n      // if (process.env.NODE_ENV === 'development') {\n      //   console.log('report init');\n      // }\n      setPageResidenceTime();\n      this.__licationShow = true;\n      this._sendReportRequest(options, true);\n    } }, { key: \"load\", value: function load(\n\n    options, self) {\n      if (!self.$scope && !self.$mp) {\n        var page = getCurrentPages();\n        self.$scope = page[page.length - 1];\n      }\n      this.self = self;\n      this._query = options;\n    } }, { key: \"show\", value: function show(\n\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageShow(self);\n      } else {\n        this._applicationShow(self);\n      }\n    } }, { key: \"ready\", value: function ready(\n\n    self) {\n      // this.self = self;\n      // if (getPageTypes(self)) {\n      //   this._pageShow(self);\n      // }\n    } }, { key: \"hide\", value: function hide(\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageHide(self);\n      } else {\n        this._applicationHide(self, true);\n      }\n    } }, { key: \"error\", value: function error(\n    em) {\n      if (this._platform === 'devtools') {\n        if (true) {\n          console.info('当前运行环境为开发者工具，不上报数据。');\n        }\n        // return;\n      }\n      var emVal = '';\n      if (!em.message) {\n        emVal = JSON.stringify(em);\n      } else {\n        emVal = em.stack;\n      }\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '31',\n        ut: this.statData.ut,\n        ch: this.statData.ch,\n        mpsdk: this.statData.mpsdk,\n        mpv: this.statData.mpv,\n        v: this.statData.v,\n        em: emVal,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }]);return Stat;}(Util);\n\n\nvar stat = Stat.getInstance();\nvar isHide = false;\nvar lifecycle = {\n  onLaunch: function onLaunch(options) {\n    stat.report(options, this);\n  },\n  onReady: function onReady() {\n    stat.ready(this);\n  },\n  onLoad: function onLoad(options) {\n    stat.load(options, this);\n    // 重写分享，获取分享上报事件\n    if (this.$scope && this.$scope.onShareAppMessage) {\n      var oldShareAppMessage = this.$scope.onShareAppMessage;\n      this.$scope.onShareAppMessage = function (options) {\n        stat.interceptShare(false);\n        return oldShareAppMessage.call(this, options);\n      };\n    }\n  },\n  onShow: function onShow() {\n    isHide = false;\n    stat.show(this);\n  },\n  onHide: function onHide() {\n    isHide = true;\n    stat.hide(this);\n  },\n  onUnload: function onUnload() {\n    if (isHide) {\n      isHide = false;\n      return;\n    }\n    stat.hide(this);\n  },\n  onError: function onError(e) {\n    stat.error(e);\n  } };\n\n\nfunction main() {\n  if (true) {\n    uni.report = function (type, options) {};\n  } else { var Vue; }\n}\n\nmain();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),

/***/ 6:
/*!******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/package.json ***!
  \******************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, deprecated, description, devDependencies, files, gitHead, homepage, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

eval("module.exports = {\"_from\":\"@dcloudio/uni-stat@^2.0.0-alpha-24420191128001\",\"_id\":\"@dcloudio/uni-stat@2.0.0-v3-24020191018001\",\"_inBundle\":false,\"_integrity\":\"sha512-nYBm5pRrYzrj2dKMqucWSF2PwInUMnn3MLHM/ik3gnLUEKSW61rzcY1RPlUwaH7c+Snm6N+bAJzmj3GvlrlVXA==\",\"_location\":\"/@dcloudio/uni-stat\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"range\",\"registry\":true,\"raw\":\"@dcloudio/uni-stat@^2.0.0-alpha-24420191128001\",\"name\":\"@dcloudio/uni-stat\",\"escapedName\":\"@dcloudio%2funi-stat\",\"scope\":\"@dcloudio\",\"rawSpec\":\"^2.0.0-alpha-24420191128001\",\"saveSpec\":null,\"fetchSpec\":\"^2.0.0-alpha-24420191128001\"},\"_requiredBy\":[\"/\",\"/@dcloudio/vue-cli-plugin-uni\"],\"_resolved\":\"https://registry.npmjs.org/@dcloudio/uni-stat/-/uni-stat-2.0.0-v3-24020191018001.tgz\",\"_shasum\":\"6ef04326cc0b945726413eebe442ab8f47c7536c\",\"_spec\":\"@dcloudio/uni-stat@^2.0.0-alpha-24420191128001\",\"_where\":\"/Users/guoshengqiang/Documents/dcloud-plugins/alpha/uniapp-cli\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/dcloudio/uni-app/issues\"},\"bundleDependencies\":false,\"deprecated\":false,\"description\":\"\",\"devDependencies\":{\"@babel/core\":\"^7.5.5\",\"@babel/preset-env\":\"^7.5.5\",\"eslint\":\"^6.1.0\",\"rollup\":\"^1.19.3\",\"rollup-plugin-babel\":\"^4.3.3\",\"rollup-plugin-clear\":\"^2.0.7\",\"rollup-plugin-commonjs\":\"^10.0.2\",\"rollup-plugin-copy\":\"^3.1.0\",\"rollup-plugin-eslint\":\"^7.0.0\",\"rollup-plugin-json\":\"^4.0.0\",\"rollup-plugin-node-resolve\":\"^5.2.0\",\"rollup-plugin-replace\":\"^2.2.0\",\"rollup-plugin-uglify\":\"^6.0.2\"},\"files\":[\"dist\",\"package.json\",\"LICENSE\"],\"gitHead\":\"197e8df53cc9d4c3f6eb722b918ccf51672b5cfe\",\"homepage\":\"https://github.com/dcloudio/uni-app#readme\",\"license\":\"Apache-2.0\",\"main\":\"dist/index.js\",\"name\":\"@dcloudio/uni-stat\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/dcloudio/uni-app.git\",\"directory\":\"packages/uni-stat\"},\"scripts\":{\"build\":\"NODE_ENV=production rollup -c rollup.config.js\",\"dev\":\"NODE_ENV=development rollup -w -c rollup.config.js\"},\"version\":\"2.0.0-v3-24020191018001\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI2LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),

/***/ 67:
/*!*******************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/common/lib/time.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = {\n  // 计算当前日期星座\n  getHoroscope: function getHoroscope(date) {\n    var c = ['摩羯', '水瓶', '双鱼', '白羊', '金牛', '双子', '巨蟹', '狮子', '处女', '天秤', '天蝎', '射手', '摩羯'];\n    date = new Date(date);\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var startMonth = month - (day - 14 < '865778999988'.charAt(month));\n    return c[startMonth] + '座';\n  },\n  // 计算指定时间与当前的时间差\n  sumAge: function sumAge(data) {\n    var dateBegin = new Date(data.replace(/-/g, \"/\"));\n    var dateEnd = new Date(); //获取当前时间\n    var dateDiff = dateEnd.getTime() - dateBegin.getTime(); //时间差的毫秒数\n    var dayDiff = Math.floor(dateDiff / (24 * 3600 * 1000)); //计算出相差天数\n    var leave1 = dateDiff % (24 * 3600 * 1000); //计算天数后剩余的毫秒数\n    var hours = Math.floor(leave1 / (3600 * 1000)); //计算出小时数\n    //计算相差分钟数\n    var leave2 = leave1 % (3600 * 1000); //计算小时数后剩余的毫秒数\n    var minutes = Math.floor(leave2 / (60 * 1000)); //计算相差分钟数\n    //计算相差秒数\n    var leave3 = leave2 % (60 * 1000); //计算分钟数后剩余的毫秒数\n    var seconds = Math.round(leave3 / 1000);\n    return dayDiff + \"天 \" + hours + \"小时 \";\n  },\n  // 获取聊天时间（相差300s内的信息不会显示时间）\n  getChatTime: function getChatTime(v1, v2) {\n    v1 = v1.toString().length < 13 ? v1 * 1000 : v1;\n    v2 = v2.toString().length < 13 ? v2 * 1000 : v2;\n    if ((parseInt(v1) - parseInt(v2)) / 1000 > 300) {\n      return this.gettime(v1);\n    }\n  },\n  // 人性化时间格式\n  gettime: function gettime(shorttime) {\n    shorttime = shorttime.toString().length < 13 ? shorttime * 1000 : shorttime;\n    var now = new Date().getTime();\n    var cha = (now - parseInt(shorttime)) / 1000;\n\n    if (cha < 43200) {\n      // 当天\n      return this.dateFormat(new Date(shorttime), \"{A} {t}:{ii}\");\n    } else if (cha < 518400) {\n      // 隔天 显示日期+时间\n      return this.dateFormat(new Date(shorttime), \"{Mon}月{DD}日 {A} {t}:{ii}\");\n    } else {\n      // 隔年 显示完整日期+时间\n      return this.dateFormat(new Date(shorttime), \"{Y}-{MM}-{DD} {A} {t}:{ii}\");\n    }\n  },\n\n  parseNumber: function parseNumber(num) {\n    return num < 10 ? \"0\" + num : num;\n  },\n\n  dateFormat: function dateFormat(date, formatStr) {\n    var dateObj = {},\n    rStr = /\\{([^}]+)\\}/,\n    mons = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n    dateObj[\"Y\"] = date.getFullYear();\n    dateObj[\"M\"] = date.getMonth() + 1;\n    dateObj[\"MM\"] = this.parseNumber(dateObj[\"M\"]);\n    dateObj[\"Mon\"] = mons[dateObj['M'] - 1];\n    dateObj[\"D\"] = date.getDate();\n    dateObj[\"DD\"] = this.parseNumber(dateObj[\"D\"]);\n    dateObj[\"h\"] = date.getHours();\n    dateObj[\"hh\"] = this.parseNumber(dateObj[\"h\"]);\n    dateObj[\"t\"] = dateObj[\"h\"] > 12 ? dateObj[\"h\"] - 12 : dateObj[\"h\"];\n    dateObj[\"tt\"] = this.parseNumber(dateObj[\"t\"]);\n    dateObj[\"A\"] = dateObj[\"h\"] > 12 ? '下午' : '上午';\n    dateObj[\"i\"] = date.getMinutes();\n    dateObj[\"ii\"] = this.parseNumber(dateObj[\"i\"]);\n    dateObj[\"s\"] = date.getSeconds();\n    dateObj[\"ss\"] = this.parseNumber(dateObj[\"s\"]);\n\n    while (rStr.test(formatStr)) {\n      formatStr = formatStr.replace(rStr, dateObj[RegExp.$1]);\n    }\n    return formatStr;\n  },\n  // 获取年龄\n  getAgeByBirthday: function getAgeByBirthday(data) {\n    var birthday = new Date(data.replace(/-/g, \"\\/\"));\n    var d = new Date();\n    return d.getFullYear() - birthday.getFullYear() - (d.getMonth() < birthday.getMonth() || d.getMonth() == birthday.getMonth() &&\n    d.getDate() < birthday.getDate() ? 1 : 0);\n  },\n  // 倒计时\n  timeDown: function timeDown(endTime) {\n    //获取时间差\n    var now = new Date().getTime() / 1000;\n    var totalSeconds = parseInt(endTime - now);\n    //天数\n    var days = Math.floor(totalSeconds / (60 * 60 * 24));\n    //取模（余数）\n    var modulo = totalSeconds % (60 * 60 * 24);\n    //小时数\n    var hours = Math.floor(modulo / (60 * 60));\n    modulo = modulo % (60 * 60);\n    //分钟\n    var minutes = Math.floor(modulo / 60);\n    //秒\n    var seconds = modulo % 60;\n    //输出还剩多少时间\n    return \"\".concat(days, \"\\u5929 \").concat(hours, \"\\u5C0F\\u65F6 \").concat(minutes, \"\\u5206 \").concat(seconds, \"\\u79D2\");\n  } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///67\n");

/***/ }),

/***/ 7:
/*!****************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/pages.json?{"type":"style"} ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"pages\": { \"pages/detail/detail\": { \"scrollIndicator\": \"none\", \"bounce\": \"none\", \"titleNView\": { \"type\": \"transparent\", \"buttons\": [{ \"type\": \"menu\" }] }, \"usingComponents\": { \"swiper-image\": \"/components/index/swiper-Image\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\", \"base-info\": \"/components/detail/base-info\", \"scrolll-comments\": \"/components/detail/scrolll-comments\", \"scroll-attrs\": \"/components/detail/scroll-attrs\", \"u-parse\": \"/components/uni-ui/uParse/src/wxParse\", \"card\": \"/components/common/card\", \"common-list\": \"/components/common/common\", \"bottom-btn\": \"/components/detail/bottom-btn\", \"common-popup\": \"/components/common/common-popup\", \"price\": \"/components/common/price\", \"zcm-rradio-group\": \"/components/common/radio-group\", \"uni-number-box\": \"/components/uni-ui/uni-number-box/uni-number-box\" } }, \"pages/msg-list/msg-list\": { \"navigationBarTitleText\": \"消息列表\", \"usingComponents\": {} }, \"pages/msg-detail/msg-detail\": { \"navigationBarTitleText\": \"消息列表详情\", \"usingComponents\": { \"u-parse\": \"/components/uni-ui/uParse/src/wxParse\" } }, \"pages/greenhand/skip/skip\": { \"usingComponents\": {} }, \"pages/greenhand/greenhard\": { \"usingComponents\": {} }, \"pages/detail-comment/detail-comment\": { \"navigationBarTextStyle\": \"black\", \"navigationBarTitleText\": \"商品评价\", \"enablePullDownRefresh\": true, \"scrollIndicator\": \"none\", \"bounce\": \"none\", \"usingComponents\": {}, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/search-lish/search-lish\": { \"navigationBarTitleText\": \"uni-app\", \"scrollIndicator\": \"none\", \"titleNView\": { \"searchInput\": { \"align\": \"left\", \"backgroundColor\": \"#f7f7f7\", \"borderRadius\": \"4px\", \"disabled\": false, \"placeholder\": \"智能积木,越野四驱车\", \"placeholderColor\": \"#cccccc\" }, \"buttons\": [{ \"color\": \"#989898\", \"colorPressed\": \"#fd6801\", \"float\": \"right\", \"fontSize\": \"16px\", \"text\": \"搜索\" }] }, \"usingComponents\": { \"uni-drawer\": \"/components/uni-ui/uni-drawer/uni-drawer\", \"card\": \"/components/common/card\", \"zcmadio-group\": \"/components/common/radio-group\", \"nothing\": \"/components/common/no-thing\", \"search-list\": \"/components/search-list/search-list\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/class/class\": { \"navigationBarTitleText\": \"uni-app\", \"scrollIndicator\": \"none\", \"bounce\": \"none\", \"titleNView\": { \"searchInput\": { \"align\": \"left\", \"backgroundColor\": \"#f7f7f7\", \"borderRadius\": \"4px\", \"disabled\": true, \"placeholder\": \"智能积木,越野四驱车\", \"placeholderColor\": \"#cccccc\" }, \"buttons\": [{ \"color\": \"#989898\", \"colorPressed\": \"#fd6801\", \"float\": \"right\", \"fontSize\": \"22px\", \"fontSrc\": \"/static/font/iconfont.ttf\", \"text\": \"\" }] }, \"usingComponents\": {}, \"usingGlobalComponents\": { \"loading\": \"/components/common/loading\" } }, \"pages/my/aaaaaaa/aaaaaaa\": { \"usingComponents\": {} }, \"pages/my/my\": { \"titleNView\": false, \"bounce\": \"none\", \"usingComponents\": { \"card\": \"/components/common/card\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/cart/cart\": { \"enablePullDownRefresh\": true, \"titleNView\": false, \"scrollIndicator\": \"none\", \"bounce\": \"none\", \"usingComponents\": { \"common-list\": \"/components/common/common\", \"uni-nav-bar\": \"/components/uni-ui/uni-nav-bar/uni-nav-bar\", \"price\": \"/components/common/price\", \"number-box\": \"/components/uni-ui/uni-number-box/uni-number-box\", \"sku-popup\": \"/components/cart/sku-popup\" } }, \"pages/ceshi/ceshi\": { \"usingComponents\": {} }, \"pages/search/search\": { \"navigationBarTitleText\": \"uni-app\", \"scrollIndicator\": \"none\", \"titleNView\": { \"searchInput\": { \"align\": \"left\", \"backgroundColor\": \"#f7f7f7\", \"borderRadius\": \"4px\", \"disabled\": false, \"placeholder\": \"智能积木,越野四驱车\", \"placeholderColor\": \"#cccccc\" }, \"buttons\": [{ \"color\": \"#989898\", \"colorPressed\": \"#fd6801\", \"float\": \"right\", \"fontSize\": \"16px\", \"text\": \"搜索\" }] }, \"usingComponents\": { \"card\": \"/components/common/card\", \"color-tag\": \"/components/search/color-tag\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/user-set/user-set\": { \"navigationBarTitleText\": \"用户设置\", \"usingComponents\": { \"card\": \"/components/common/card\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\" } }, \"pages/user-userinfo/user-userinfo\": { \"navigationBarTitleText\": \"修改资料\", \"usingComponents\": { \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/user-path-list/user-path-list\": { \"navigationBarTitleText\": \"收货地址\", \"enablePullDownRefresh\": true, \"scrollIndicator\": \"none\", \"bounce\": \"none\", \"titleNView\": { \"buttons\": [{ \"float\": \"right\", \"color\": \"#999999\", \"colorPressed\": \"#bbbbbb\", \"fontSize\": \"14px\", \"fontSrc\": \"/static/font/iconfont.ttf\", \"text\": \"\" }] }, \"usingComponents\": { \"nothing\": \"/components/common/no-thing\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\", \"uni-swipe-action\": \"/components/uni-ui/uni-swipe-action/uni-swipe-action\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/user-path-edit/user-path-edit\": { \"navigationBarTitleText\": \"增加收货地址\", \"scrollIndicator\": \"none\", \"bounce\": \"none\", \"usingComponents\": { \"mpvue-city-picker\": \"/components/uni-ui/mpvue-citypicker/mpvueCityPicker\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/order/order\": { \"navigationBarTitleText\": \"我的订单\", \"scrollIndicator\": \"none\", \"titleNView\": { \"buttons\": [{ \"float\": \"right\", \"color\": \"#999999\", \"colorPressed\": \"#bbbbbb\", \"fontSize\": \"15px\", \"fontSrc\": \"/static/font/iconfont.ttf\", \"text\": \"\" }, { \"float\": \"right\", \"color\": \"#999999\", \"colorPressed\": \"#bbbbbb\", \"fontSize\": \"15px\", \"fontSrc\": \"/static/font/iconfont.ttf\", \"text\": \"\" }] }, \"usingComponents\": { \"common-list\": \"/components/common/common\", \"no-thing\": \"/components/common/no-thing\", \"order-list\": \"/components/order/order-list\" } }, \"pages/order-confirm/order-confirm\": { \"navigationBarTitleText\": \"订单配送至\", \"navigationBarTextStyle\": \"white\", \"navigationBarBackgroundColor\": \"#FD6801\", \"usingComponents\": { \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\", \"price\": \"/components/common/price\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/order-invoice/order-invoice\": { \"navigationBarTitleText\": \"发票\", \"usingComponents\": { \"card\": \"/components/common/card\", \"zcmradi-group\": \"/components/common/radio-group\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/login/login\": { \"bounce\": \"none\", \"scrollIndicator\": \"none\", \"titleNView\": false, \"usingComponents\": { \"uni-status-bar\": \"/components/uni-ui/uni-status-bar/uni-status-bar\" } }, \"pages/pay-methods/pay-methods\": { \"navigationBarTitleText\": \"选择支付\", \"usingComponents\": { \"price\": \"/components/common/price\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\" } }, \"pages/pay-result/pay-result\": { \"navigationBarTitleText\": \"支付成功\", \"usingComponents\": {} }, \"pages/order-coupon/order-coupon\": { \"navigationBarTitleText\": \"优惠券\", \"usingComponents\": { \"no-thing\": \"/components/common/no-thing\", \"coupon\": \"/components/order-coupon/coupon/coupon\" } }, \"pages/order-detail/order-detail\": { \"titleNView\": { \"type\": \"transparent\" }, \"usingComponents\": { \"order-list-item\": \"/components/order/order-list-item\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\", \"price\": \"/components/common/price\", \"card\": \"/components/common/card\", \"common-button\": \"/components/common/common-button\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/logistics-detail/logistics-detail\": { \"navigationBarTitleText\": \"物流信息\", \"usingComponents\": {} }, \"pages/after-sale/after-sale\": { \"usingComponents\": { \"card\": \"/components/common/card\", \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\", \"zcmradi-group\": \"/components/common/radio-group\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/about/about\": { \"navigationBarTitleText\": \"关于xxx商城\", \"usingComponents\": { \"uni-list-item\": \"/components/uni-ui/uni-list-item/uni-list-item\" } }, \"pages/coupon/coupon\": { \"navigationBarTitleText\": \"领取优惠券\", \"enablePullDownRefresh\": true, \"usingComponents\": { \"coupon\": \"/components/order-coupon/coupon/coupon\", \"no-thing\": \"/components/common/no-thing\" }, \"usingGlobalComponents\": { \"divider\": \"/components/common/divider\" } }, \"pages/order-refund/order-refund\": { \"navigationBarTitleText\": \"申请退款\", \"usingComponents\": {} } }, \"globalStyle\": { \"navigationBarTextStyle\": \"black\", \"navigationBarTitleText\": \"uni-app\", \"navigationBarBackgroundColor\": \"#FFFFFF\", \"backgroundColor\": \"#FFFFFF\" } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),

/***/ 8:
/*!***************************************************************!*\
  !*** F:/UNIAPP最新版本的/uniapp-xiaomi/pages.json?{"type":"stat"} ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"appid\": \"__UNI__9DA9E00\" };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzR0FBZSxFQUFDLFNBQVEsZ0JBQVQsRSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wiYXBwaWRcIjpcIl9fVU5JX185REE5RTAwXCJ9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n");

/***/ }),

/***/ 82:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ 83);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDZCQUFxQiIsImZpbGUiOiI4Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///82\n");

/***/ }),

/***/ 83:
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(/*! ./runtime */ 84);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLG1CQUFXOztBQUVwQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSIsImZpbGUiOiI4My5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gVGhpcyBtZXRob2Qgb2Ygb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0IG5lZWRzIHRvIGJlXG4vLyBrZXB0IGlkZW50aWNhbCB0byB0aGUgd2F5IGl0IGlzIG9idGFpbmVkIGluIHJ1bnRpbWUuanNcbnZhciBnID0gKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZik7XG59KSgpIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcblxuLy8gVXNlIGBnZXRPd25Qcm9wZXJ0eU5hbWVzYCBiZWNhdXNlIG5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCBjYWxsaW5nXG4vLyBgaGFzT3duUHJvcGVydHlgIG9uIHRoZSBnbG9iYWwgYHNlbGZgIG9iamVjdCBpbiBhIHdvcmtlci4gU2VlICMxODMuXG52YXIgaGFkUnVudGltZSA9IGcucmVnZW5lcmF0b3JSdW50aW1lICYmXG4gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGcpLmluZGV4T2YoXCJyZWdlbmVyYXRvclJ1bnRpbWVcIikgPj0gMDtcblxuLy8gU2F2ZSB0aGUgb2xkIHJlZ2VuZXJhdG9yUnVudGltZSBpbiBjYXNlIGl0IG5lZWRzIHRvIGJlIHJlc3RvcmVkIGxhdGVyLlxudmFyIG9sZFJ1bnRpbWUgPSBoYWRSdW50aW1lICYmIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuXG4vLyBGb3JjZSByZWV2YWx1dGF0aW9uIG9mIHJ1bnRpbWUuanMuXG5nLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9ydW50aW1lXCIpO1xuXG5pZiAoaGFkUnVudGltZSkge1xuICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBydW50aW1lLlxuICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IG9sZFJ1bnRpbWU7XG59IGVsc2Uge1xuICAvLyBSZW1vdmUgdGhlIGdsb2JhbCBwcm9wZXJ0eSBhZGRlZCBieSBydW50aW1lLmpzLlxuICB0cnkge1xuICAgIGRlbGV0ZSBnLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgfSBjYXRjaChlKSB7XG4gICAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///83\n");

/***/ }),

/***/ 84:
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84\n");

/***/ })

}]);