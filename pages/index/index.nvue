<template>
	<div class="display:flex;flex-direction:column;">
		<!-- 横向滚动顶部选项卡 -->
		<sum-tabbar :tabIndex="tabIndex" :tabBars="tabBars"
		 @tabchange="tabchange"></sum-tabbar>
		<!-- end.... -->
		<!-- 横向滚动条 -->
		<slider class="flex-1" :index="tabIndex" :infinite="false"
		 @change="sliderChange">
			<list :show-scrollbar="false" v-for="(list,listIndex) in newsitems"
			 :key="listIndex">
				<!-- 下拉刷新 -->
				<refresh class="w-100 flex-row j-center a-center" style="height: 80px;"
				 :display="list.refreshShow"
				 @pullingdown="pullingdown" @refresh="refresh">

					<text class="font-md text-muted"> {{list.refreshtext}}</text>
				</refresh>



				<!--  -->
				<!-- 空数据展示处理 -->
				<template v-if="list.data.length > 0 && list.firstLoad == 'after'">
					<!-- 首页模板 -->
					<template v-if="tabBars[listIndex].template === 'index'">
						<cell v-for="(listItem,itemIndex) in list.data" :key="itemIndex">

							<!-- 轮播图组件 -->
							<sumSlider v-if="listItem.type === 'swiper'" :swipers="listItem.data"></sumSlider>
							<!-- 图标分类组件 
								* 750
								*每一个图标分类: 142px * 5 = 710
								* 图标 58 * 58
								*
								-->
							<template v-if="listItem.type === 'indexnavs'">
								<indexNav :indexnavs="listItem.data"></indexNav>

								<!-- 封装全分割线组件 -->
								<divider />
							</template>
							<!-- 三图广告组件 -->
							<template v-if="listItem.type === 'threeAdv'">
								<sumThreeAdv
								 :resdata="listItem.data"></sumThreeAdv>
								<divider />
							</template>
							<!-- 大图广告 -->
							<sumOneAdv v-if="listItem.type === 'oneAdv'" :item="listItem.data"></sumOneAdv>

							<!-- 公告列表组件
							* 间隙 5px
							* 每列占:375px
							-->
							<div class="row w-100" v-if="listItem.type === 'list'">
								<block v-for="(item,index) in listItem.data" :key="index">
									<commonList :index="index" :item="item"></commonList>
								</block>
							</div>
						</cell>
					</template>

					<!-- 专题页 -->
					<template v-else-if="tabBars[listIndex].template === 'special'">
						<cell v-for="(listItem,itemIndex) in list.data" :key="itemIndex">
							<!-- 轮播图组件 -->
							<sumSlider v-if="listItem.type === 'swiper'" :swipers="listItem.data"></sumSlider>
							<!-- 图标分类组件 
								* 750
								*每一个图标分类: 142px * 5 = 710
								* 图标 58 * 58
								*
								-->
							<template v-if="listItem.type === 'indexnavs'">
								<indexNav :indexnavs="listItem.data"></indexNav>

								<!-- 封装全分割线组件 -->
								<divider />
							</template>

							<!-- 公告列表组件卡片 -->
							<div class="w-100" v-if="listItem.type === 'list'">
								<div class="p-2 border-bottom border-top p-2">
									<text class="text-dark font-md font-weight">热卖爆品</text>
								</div>
								<div>
									<!-- 公告列表组件
			* 间隙 5px
			* 每列占:375px
			-->
									<div class="row w-100">
										<block v-for="(item,index) in listItem.data" :key="index">
											<commonList :index="index" :item="item"></commonList>
										</block>
									</div>
								</div>
							</div>




						</cell>
					</template>
				</template>
				<!-- 加载中 -->
				<template v-else-if="list.firstLoad == 'ing'">
					<cell class="j-center a-center pt-5">
						<text class="font-md text-light-muted">加载中 </text>
					</cell>
				</template>

				<!-- 空数据展示 -->
				<template v-else>
					<cell class="j-center a-center pt-5">
						<text class="font-md text-light-muted">暂无数据 </text>
					</cell>
				</template>



				<loading class="w-100 flex-row j-center a-center"
				 @loading="onLoading" :display="list.loadingShow">
					<text class="text-muted font-md">Loading...</text>
				</loading>
			</list>
		</slider>
	</div>
</template>

<script>
	import $H from "@/common/lib/request.js"


	import sumTabbar from "@/components/index/nvue/sum-tabbar.nvue"
	import sumSlider from "@/components/index/nvue/sum-slider.nvue"
	import indexNav from "@/components/index/nvue/indexnavs.nvue"
	import divider from "@/components/common/divider.nvue"
	import sumThreeAdv from "@/components/index/nvue/sum-three-adv.nvue"
	import sumOneAdv from "@/components/index/nvue/sum-one-adv.nvue"
	import commonList from "@/components/common/common.nvue"
	// import card from "@/components/common/card.nvue"
	const dom = weex.requireModule('dom')
	// 监听当前窗口显示 1)解决Nvue页面没有ONshow的问题
	const currentWebview = plus.webview.currentWebview()
	export default {
		components: {
			sumTabbar,
			sumSlider,
			indexNav,
			divider,
			sumThreeAdv,
			sumOneAdv,
			commonList,
			// card
		},
		data() {
			return {
				// refreshtext: "下拉刷新",
				// refreshShow: "hide",
				// loadingShow: 'hide',
				tabIndex: 0,
				tabBars: [],
				newsitems: []
				// swipers: [
				// 	{ src: "../../static/images/demo/demo4.jpg" },
				// 	{ src: "../../static/images/demo/demo4.jpg" },
				// 	{ src: "../../static/images/demo/demo4.jpg" }
				// ],
				// indexnavs: [
				// 	{ src: '/static/images/indexnav/1.png', text: '新品发布' },
				// 	{ src: '/static/images/indexnav/2.gif', text: '小米众筹' },
				// 	{ src: '/static/images/indexnav/3.gif', text: '以旧换新' },
				// 	{ src: '/static/images/indexnav/4.gif', text: '一分换团' },
				// 	{ src: '/static/images/indexnav/5.gif', text: '超值特卖' },
				// 	{ src: '/static/images/indexnav/6.gif', text: '小米秒杀' },
				// 	{ src: '/static/images/indexnav/7.gif', text: '真心想要' },
				// 	{ src: '/static/images/indexnav/8.gif', text: '电视热卖' },
				// 	{ src: '/static/images/indexnav/9.gif', text: '家电热卖' },
				// 	{ src: '/static/images/indexnav/10.gif', text: '米粉卡' }
				// ],
				// oneAdv: {
				// 	cover: "/static/images/demo/demo4.jpg",
				// 	title: "每日精选"
				// },
				// threeAdv: [
				// 	{ src: '/static/images/demo/demo1.jpg' },
				// 	{ src: '/static/images/demo/demo2.jpg' },
				// 	{ src: "/static/images/demo/demo3.jpg" }
				// ],
				// commlist: [{
				// 	cover: "/static/images/demo/list/1.jpg",
				// 	title: "米家空调",
				// 	oprice: "2699",
				// 	desc: "1.5匹变频",
				// 	pprice: "1399"
				// }, {
				// 	cover: "/static/images/demo/list/1.jpg",
				// 	title: "米家空调",
				// 	oprice: "2699",
				// 	desc: "1.5匹变频",
				// 	pprice: "1399"
				// }, {
				// 	cover: "/static/images/demo/list/1.jpg",
				// 	title: "米家空调",
				// 	oprice: "2699",
				// 	desc: "1.5匹变频",
				// 	pprice: "1399"
				// }, ]
			}
		},

		methods: {
			// 初始化
			async __init() {


				// 		let [error, result] = await uni.request({
				// 			url: "http://ceshi3.dishait.cn/api/index_category/data",
				// 			method: "GET",
				// 		})
				// 		//错误
				// 		if (error) {
				// 			return uni.showToast({
				// 				title: error.errMsg,
				// 				icon: "none"
				// 			})
				// 		}

				// 		// 失败
				// 		if (result.statusCode !== 200) {
				// 			return uni.showToast({
				// 				title: result.data.msg,
				// 				icon: "none"
				// 			})
				// 		}
				// 成功
				// let data = result.data.data
				let data = await $H.get("/index_category/data")
console.log(data);
				// 使用一
				if (data) {
					// 初始化tabbars
					this.tabBars = data.category
					// 初始化页面
					this.newsitems = this.setNewsitems(data)
					// 设置首屏已经加载完成
				}



			},
			// 加载数据
			async addData(callback = false, refresh = false) {
				let e = this.tabIndex

				// 拿到当前分类id
				let id = this.tabBars[e].id
				// 拿到当前分类的分页数 0 -> 1  
				let page = !refresh ? (Math.ceil(this.newsitems[e].data.length / 5) + 1) : 1
				// 修改请求状态 首次加载中...

				if (page == 1 && this.newsitems[e].refreshShow == 'hide') {
					this.newsitems[e].firstLoad = 'ing'
				}

				let data = await $H.get("/index_category/" + id + "/data/" + page)

   console.log(data);
				// let [error, result] = await uni.request({
				// 	url: "http://ceshi3.dishait.cn/api/index_category/" + id + "/data/" + page,
				// 	method: "GET",
				// })

				// 修改请求状态,首次加载完成
				if (page == 1 && this.newsitems[e].refreshShow == 'hide') {
					this.newsitems[e].firstLoad = 'after'
				}


				// console.log(result);

				// 成功
				if (data) {
					// 赋值渲染
					this.newsitems[e].data = !refresh ? [...this.newsitems[e].data, ...data] : [...data]

					// 执行回调函数
					if (typeof callback == 'function') {
						callback()
					}

					// console.log(this.newsitems);
					if (data.length < 5) {
						this.newsitems[e].loadingText = '没有更多了';
						return;
					}
				}





			},
			// 初始化页面
			setNewsitems(e) {
				let ary = [];
				// 拿到tabbars的长度,根据长度生成页面
				let tablength = this.tabBars.length
				console.log(tablength);
				for (let i = 0; i < tablength; i++) {
					// 设置首屏已经加载完成
					let firstLoad = i === 0 ? 'after' : 'before'




					let aryItem = {
						refreshtext: "下拉刷新",
						refreshShow: "hide",
						loadingShow: 'hide',
						loadingText: '加载更多...',
						data: [],
						firstLoad: firstLoad
					};
					// if (i < 1) {
					// for (let j = 1; j <= 10; j++) {
					// 	aryItem.data.push(tpl['data' + Math.floor(Math.random() * 5)]);
					// }
					// }
					// 给页面添加数据
					if (this.tabBars[i].template === "index") {

						aryItem.data = e.data

					}
					// console.log();
					ary.push(aryItem);

				}
				return ary;

			},
			// 点击选项卡触发时间
			tabchange(index) {
				this.tabIndex = index
				// setTimeout(() => {
				// 加载数据
				// this.addData();
				// this.newsitems[index].loadingShow = 'hide' 
				// }, 100)
			},
			// 监听横向列表事件
			sliderChange(e) {
				console.log(e.index);
				this.tabIndex = e.index

				if (this.newsitems[this.tabIndex].firstLoad === 'before') {
					// 加载数据
					this.addData();
				}



			},
			// 上拉加载事件
			onLoading() {
				// 存储当前索引
				var index = this.tabIndex
				this.newsitems[index].loadingShow = 'show'


				// 没有更多了
				if (this.newsitems[index].loadingText == '没有更多了') {
					uni.showToast({
						title: '没有更多了',
						icon: "none"
					});
					return this.newsitems[index].loadingShow = 'hide'
				}

				// this.loadingShow = 'show';
				// 加载数据
				this.addData(() => {
					uni.showToast({
						title: '加载成功',
						icon: "none"
					});
					this.newsitems[index].loadingShow = 'hide'
				});

			},
			// 执行刷新
			refresh(e) {
				console.log("wanchengle ");
				// return;
				console.log(e);

				// 存储当前索引
				var index = this.tabIndex
				this.newsitems[index].refreshShow = 'show'
				this.newsitems[index].refreshtext = '正在刷新中'

				// 请求刷新数据
				this.addData(() => {
					uni.showToast({
						title: "下来刷新成功",
						icon: "none"
					})
					this.newsitems[index].refreshShow = 'hide'
					this.newsitems[index].refreshtext = '下拉可以刷新'
				}, true)


			},
			// 判断下刷刷新状态 
			pullingdown(e) {
				// console.log(-e.pullingDistance,e.viewHeight) ;
				// if (-e.pullingDistance > e.viewHeight) {
				// 	// console.log(111);
				// 	this.refreshtext = "釋放即可刷新了"
				// 	this.refresh()
				// } else {
				// 	this.refreshtext = "下拉可以刷新"
				// }
				// console.log("zhixingle");
				console.log(e.pullingDistance, e.viewHeight);
				var index = this.tabIndex
				if (e.pullingDistance > e.viewHeight) {
					// console.log(111);
					// this.refreshtext = "釋放即可刷新了"


					this.newsitems[index].refreshtext = '釋放即可刷新了'


					// this.refresh()
				} else {
					this.newsitems[index].refreshtext = '下拉可以刷新'
					// this.refreshtext = "下拉可以刷新"
				}
			}

		},
		created() {
			// console.log(currentWebview);
			// const currentWebview = this.$mp.page.$getAppWebview();
			currentWebview.addEventListener('show', e => {
				console.log(e);
				console.log("indexshow");

			})
			// 监听点击搜索框
			uni.onNavigationBarSearchInputClicked(() => {
				console.log("点击输入框");
				uni.navigateTo({
					url: '../search/search',
				})
			})
			// 初始化数据
			this.__init()

		},
		beforeDestroy() {
			currentWebview.removeEventListener('show', e => {

			})
		}
	}
</script>
<style src="@/common/zcm-main-nvue.css">
	<style>
</style>
